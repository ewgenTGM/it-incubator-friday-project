{"version":3,"sources":["components/spinner/Spinner.module.css","components/card-packs/CardPacks.module.css","components/field-with-button/FieldWithButton.module.css","components/cards/Card.module.css","store/app-reducer.ts","utils/authApi.ts","store/login-reducer.ts","store/registration-reducer.ts","utils/validators/email-validator.ts","utils/validators/password-validator.ts","components/login/Login.tsx","Pages/LoginPage.tsx","store/pass-recovery-reducer.ts","components/spinner/Spinner.tsx","components/register/Register.tsx","Pages/RegisterPage.tsx","components/profile/Profile.tsx","Pages/ProfilePage.tsx","store/pass-change-reducer.ts","components/pass-recovery/PasswordRecovery.tsx","Pages/PassRecoveryPage.tsx","components/test-component/TestComponent.tsx","Pages/TestPage.tsx","components/page404/NotFound.tsx","Pages/Page404.tsx","store/card-packs-reducer.ts","components/set-new-pass/SetNewPass.tsx","Pages/SetNewPasswordPage.tsx","components/card-packs/CardPack.tsx","utils/cardPacksApi.ts","store/cards-reducer.ts","components/card-packs/CardPacks.tsx","components/field-with-button/FieldWithButton.tsx","Pages/CardPacksPage.tsx","components/cards/Card.tsx","utils/cardsApi.ts","routes/Routes.tsx","components/cards/Cards.tsx","Pages/CardsPage.tsx","components/navbar/Navbar.tsx","components/App.tsx","store/test-reducer.ts","store/profile-reducer.ts","store/store.ts","index.tsx","components/card-packs/CardPack.module.css","components/login/Login.module.css","components/common/commonStyle.module.css","Pages/LoginPage.module.css","Pages/CardPacksPage.module.css","components/navbar/Navbar.module.css","components/register/Register.module.css","components/set-new-pass/PassChange.module.css","components/pass-recovery/PasswordRecovery.module.css","components/page404/NotFound.module.css"],"names":["module","exports","APP_ACTION_TYPE","instance","axios","create","baseURL","withCredentials","authApi","email","reqBody","from","message","post","password","resetPasswordToken","rememberMe","then","res","data","delete","LOGIN_ACTION_TYPE","setIsAuthAC","isAuth","type","SET_IS_AUTH","payload","setAuthDataAC","authData","SET_AUTH_DATA","initialState","isInitialized","error","REGISTRATION_ACTION_TYPE","setErrorAC","SET_ERROR","setLoadingAC","loading","SET_LOADING","emailValidator","test","passwordValidator","length","matchPasswordValidator","pwd1","pwd2","Login","useState","setEmail","pwd","setPwd","remember","setRemember","dispatch","useDispatch","loginStatus","useSelector","state","login","form","className","styles","formGroup","disabled","placeholder","value","onChange","e","currentTarget","Password","rememberMeFormGroup","htmlFor","fieldLabel","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","defaultChecked","checked","button","onClick","event","preventDefault","a","response","loginTC","closable","LoginPage","props","appStatus","to","PATH","PROFILE","commonStyles","fullscreen","loginPage","h2","h4","REGISTER","PASS_RECOVERY","PASS_RECOVERY_ACTION_TYPE","isRegisterSuccess","setIsRegisterSuccessAC","SET_IS_REGISTER_SUCCESS","Spinner","loader","Register","registerState","registration","setPassword","LOGIN","registerPage","registerContainer","registerForm","name","style","color","registerTC","RegisterPage","Profile","JSON","stringify","ProfilePage","PASS_CHANGE_ACTION_TYPE","isEmailSend","PasswordRecovery","recoveryStatus","passRecovery","textAlign","recoveryForm","SET_IS_EMAIL_SEND","passRecoveryTC","PassRecoveryPage","TestComponent","allReducerData","elements","Object","entries","map","elem","TestPage","NotFound","notFound","rotate","Page404","CARD_PACKS_ACTION_TYPE","isChangedPass","SetNewPass","newPassword","setNewPassword","newPassword2","setConfirmPassword","statePassReducer","passChange","token","useParams","passChangeContainer","passChangeForm","SET_IS_CHANGED_PASS","changePassTC","SetNewPasswordPage","CardPack","cardPack","onDelete","isMyCardPack","pack","packHeader","textTransform","ratingCount","cardsCount","rating","shots","grade","actions","_id","action","onConfirm","title","cancelText","okText","placement","cancelButtonProps","okButtonProps","danger","user","user_name","cardPacksApi","options","get","params","cardPackId","cardsPack","CARDS_ACTION_TYPE","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","pageCount","page","onlyMyPacks","setCardPacks","SET_CARD_PACKS","setCardsPacksTC","user_id","packName","SET_CARD_PACKS_TOTAL_COUNT","CardPacks","userId","deleteCardPack","getState","undefined","deleteCardsPackTC","packsContainer","cp","FieldWithButton","text","setText","onSearch","searchPanel","inputPlaceholder","onKeyPress","key","buttonLabel","CardPacksPage","myId","useEffect","optionsBar","onShowSizeChange","current","size","SET_PAGE_COUNT","setPageCount","SET_PAGE","setPage","defaultCurrent","showSizeChanger","pageSize","showQuickJumper","total","SET_ONLY_MY_PACKS","setOnlyMyPacks","searchBar","searchText","cardPackName","marginTop","closeText","tip","Card","card","question","cardsApi","cardId","cards","cardsTotalCount","setCards","SET_CARDS","setCardsTC","cardsPack_id","SET_CARDS_TOTAL_COUNT","Cards","deleteCard","cardsPackId","deleteCardTC","xxl","xl","lg","flex","CardsPage","pagination","justify","span","offset","plain","wrap","gutter","Routes","path","exact","render","TEST","CARD_PACKS","SET_NEW_PASSWORD","CARDS","Navbar","navbar","container","CLEAR_STORE","activeClassName","linkActive","App","SET_IS_INITIALIZED","rootReducer","combineReducers","profile","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c249965.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__1m74L\",\"load7\":\"Spinner_load7__2T7RE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsContainer\":\"CardPacks_packsContainer__pIaNg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchPanel\":\"FieldWithButton_searchPanel__loIW2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2TFbj\"};","import {authApi, LoginResponseType} from '../utils/authApi';\r\nimport {AppActionsType, AppThunk} from './store';\r\n\r\nexport enum APP_ACTION_TYPE {\r\n  SET_IS_INITIALIZED = 'APP/SET_IS_INITIALIZED',\r\n  SET_IS_AUTH = 'APP/SET_IS_AUTH',\r\n  SET_AUTH_DATA = 'APP/SET_AUTH_DATA',\r\n  SET_ERROR = 'APP/SET_ERROR',\r\n  CLEAR_STORE = 'APP/CLEAR_STORE'\r\n}\r\n\r\n// Action creators\r\nexport const setIsInitializedAC = (isInitialized: boolean) => {\r\n  return {type: APP_ACTION_TYPE.SET_IS_INITIALIZED as const, payload: {isInitialized}};\r\n};\r\n\r\nexport const setIsAuthAC = (isAuth: boolean) => {\r\n  return {\r\n    type: APP_ACTION_TYPE.SET_IS_AUTH as const, payload: {isAuth}\r\n  };\r\n};\r\n\r\nconst setError = (error: string | null) => {\r\n  return {type: APP_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\n\r\nexport const clearStoreAC = () => {\r\n  return {type: APP_ACTION_TYPE.CLEAR_STORE as const};\r\n};\r\n\r\nexport const setAuthDataAC = (authData: LoginResponseType | {}) => {\r\n  return {type: APP_ACTION_TYPE.SET_AUTH_DATA as const, payload: {authData}};\r\n};\r\n// ------------------\r\n\r\n// Thunk creators\r\nexport const AppInitializeTC = (): AppThunk => async dispatch => {\r\n  try {\r\n    const response = await authApi.me();\r\n    dispatch(setAuthDataAC(response));\r\n    dispatch(setIsAuthAC(true));\r\n  } catch (e) {\r\n    dispatch(setError(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setIsInitializedAC(true));\r\n  }\r\n};\r\n// ------------------\r\n\r\nexport type AppReducerActionsType =\r\n  ReturnType<typeof setIsInitializedAC>\r\n  | ReturnType<typeof setIsAuthAC>\r\n  | ReturnType<typeof setError>\r\n  | ReturnType<typeof setAuthDataAC>\r\n  | ReturnType<typeof clearStoreAC>\r\n\r\ntype StateType = {\r\n  isInitialized: boolean\r\n  isAuth: boolean\r\n  authData: Partial<LoginResponseType>,\r\n  error: string | null\r\n};\r\n\r\nconst initialState: StateType = {\r\n  isInitialized: false,\r\n  isAuth: false,\r\n  authData: {},\r\n  error: null\r\n};\r\n\r\nexport const appReducer = (state = initialState, action: AppActionsType): StateType => {\r\n  switch (action.type) {\r\n    case APP_ACTION_TYPE.SET_IS_INITIALIZED:\r\n    case APP_ACTION_TYPE.SET_IS_AUTH:\r\n    case APP_ACTION_TYPE.SET_AUTH_DATA:\r\n    case APP_ACTION_TYPE.SET_ERROR:\r\n      return {...state, ...action.payload};\r\n    case APP_ACTION_TYPE.CLEAR_STORE: {\r\n      return initialState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\n\r\nconst LOCAL_URL = 'http://localhost:7542/2.0/';\r\nconst REMOTE_URL = 'https://neko-back.herokuapp.com/2.0';\r\nconst FROM = 'test-front-admin<test@test.com>';\r\n\r\nconst instance = axios.create({baseURL: REMOTE_URL, withCredentials: true});\r\n\r\nexport const authApi = {\r\n\r\n  passRecovery(email: string) {\r\n    const htmlBody = `<div style=\"background-color: lime; padding: 15px\">\r\n                       password recovery link: \r\n              <a href=\"https://ewgentgm.github.io/it-incubator-friday-project/#/set-new-password/$token$\">\r\n              link\r\n              </a></div>`;\r\n    const reqBody = {\r\n      email,\r\n      from: FROM,\r\n      message: htmlBody\r\n    };\r\n    return instance.post<InfoResponseType>('/auth/forgot', reqBody);\r\n  },\r\n\r\n  setNewPassword(password: string, resetPasswordToken: string) {\r\n    return instance.post<InfoResponseType>('/auth/set-new-password', {password, resetPasswordToken});\r\n  },\r\n\r\n  login(email: string, password: string, rememberMe: boolean = false) {\r\n    return instance.post<LoginResponseType>('/auth/login', {email, password, rememberMe}).then(res => res.data);\r\n  },\r\n\r\n  logout() {\r\n    return instance.delete<InfoResponseType>('/auth/me', {}).then(res => res.data);\r\n  },\r\n\r\n  me() {\r\n    return instance.post<LoginResponseType>('/auth/me', {}).then(res => res.data);\r\n  },\r\n\r\n  register(email: string, password: string) {\r\n    return instance.post<RegisterResponseType>('/auth/register', {email, password}).then(res => res.data);\r\n  }\r\n};\r\n\r\nexport type LoginResponseType = {\r\n  _id: string;\r\n  email: string;\r\n  name: string;\r\n  avatar?: string;\r\n  publicCardPacksCount: number;\r\n  created: string;\r\n  updated: string;\r\n  isAdmin: boolean;\r\n  verified: boolean;\r\n  rememberMe: boolean;\r\n  error?: string;\r\n}\r\n\r\nexport type InfoResponseType = {\r\n  info: string\r\n  error?: string\r\n}\r\n\r\ntype RegisterResponseType = {\r\n  addedUser: any\r\n  error?: string\r\n}","import {authApi} from '../utils/authApi';\r\nimport {APP_ACTION_TYPE, clearStoreAC, setAuthDataAC, setIsAuthAC} from './app-reducer';\r\nimport {AppActionsType, AppThunk} from './store';\r\n\r\nenum LOGIN_ACTION_TYPE {\r\n  SET_ERROR = 'LOGIN/SET_ERROR',\r\n  SET_LOADING = 'LOGIN/SET_LOADING',\r\n}\r\n\r\n// Action creators\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: LOGIN_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: LOGIN_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\n//----------------\r\n\r\n// Thunk creators\r\n\r\nexport const loginTC = (email: string, password: string, remember: boolean): AppThunk => async dispatch => {\r\n  dispatch(setErrorAC(null));\r\n  dispatch(setLoadingAC(true));\r\n  try {\r\n    const res = await authApi.login(email, password, remember);\r\n    dispatch(setAuthDataAC(res));\r\n    dispatch(setIsAuthAC(true));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const logoutTC = (): AppThunk => async dispatch => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    await authApi.logout();\r\n    //dispatch(setAuthDataAC({}));\r\n    //dispatch(setIsAuthAC(false));\r\n    dispatch(clearStoreAC());\r\n    //dispatch(AppInitializeTC());\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport type LoginReducerActionsType = ReturnType<typeof setErrorAC> | ReturnType<typeof setLoadingAC>;\r\n\r\nexport type LoginStateType = {\r\n  error: null | string\r\n  loading: boolean\r\n};\r\n\r\nconst initialState: LoginStateType = {\r\n  error: null,\r\n  loading: false\r\n};\r\n\r\n//---------------\r\n\r\nexport const loginReducer = (state: LoginStateType = initialState, action: AppActionsType): LoginStateType => {\r\n  switch (action.type) {\r\n    case LOGIN_ACTION_TYPE.SET_ERROR:\r\n    case LOGIN_ACTION_TYPE.SET_LOADING:\r\n      return {\r\n        ...state, ...action.payload\r\n      };\r\n    case APP_ACTION_TYPE.CLEAR_STORE: {\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};","import {authApi} from \"../utils/authApi\";\r\nimport {AppActionsType, AppThunk} from './store';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\n\r\nenum REGISTRATION_ACTION_TYPE {\r\n    SET_ERROR = 'REGISTRATION/SET_ERROR',\r\n    SET_LOADING = 'REGISTRATION/SET_LOADING',\r\n    SET_IS_REGISTER_SUCCESS = 'REGISTRATION/SET_IS_REGISTER_SUCCESS'\r\n}\r\n\r\nexport type InitialStateType = {\r\n    error: null | string\r\n    loading: boolean\r\n    isRegisterSuccess: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    error: null,\r\n    loading: false,\r\n    isRegisterSuccess: false\r\n};\r\n\r\nexport const registrationReducer = (state = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case REGISTRATION_ACTION_TYPE.SET_ERROR:\r\n        case REGISTRATION_ACTION_TYPE.SET_LOADING:\r\n        case REGISTRATION_ACTION_TYPE.SET_IS_REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case APP_ACTION_TYPE.CLEAR_STORE: {\r\n            return initialState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action creators\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n    return {type: REGISTRATION_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\nconst setIsRegisterSuccessAC = (isRegisterSuccess: boolean) => {\r\n    return {type: REGISTRATION_ACTION_TYPE.SET_IS_REGISTER_SUCCESS as const, payload: {isRegisterSuccess}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n    return {type: REGISTRATION_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\nexport const registerTC = (email: string, password: string): AppThunk => async dispatch => {\r\n    dispatch(setLoadingAC(true))\r\n    dispatch(setErrorAC(null))\r\n    try {\r\n        const register = await authApi.register(email, password)\r\n        dispatch(setIsRegisterSuccessAC(true))\r\n    } catch (e) {\r\n        dispatch(setErrorAC(e.response ? e.response.data.error : e.message))\r\n        dispatch(setIsRegisterSuccessAC(false))\r\n    } finally {\r\n        dispatch(setLoadingAC(false))\r\n    }\r\n\r\n}\r\n\r\nexport type RegistrationReducerActionsType =\r\n    ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof setLoadingAC>\r\n    | ReturnType<typeof setIsRegisterSuccessAC>","export const emailValidator = (email: string) => {\r\n    return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)\r\n}\r\n","export const passwordValidator = (password: string) => {\r\n  return password.length > 6;\r\n};\r\n\r\nexport const matchPasswordValidator = (pwd1: string, pwd2: string) => {\r\n  return pwd1 === pwd2;\r\n};","import React, {useState} from 'react';\r\nimport styles from './Login.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {LoginStateType, loginTC} from '../../store/login-reducer';\r\nimport {AppStateType} from '../../store/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {emailValidator} from '../../utils/validators/email-validator';\r\nimport {passwordValidator} from '../../utils/validators/password-validator';\r\nimport {Alert, Button, Input, Switch} from 'antd';\r\nimport {CheckOutlined, CloseOutlined} from '@ant-design/icons';\r\n\r\nexport const Login: React.VFC = () => {\r\n  const [email, setEmail] = useState<string>('');\r\n  const [pwd, setPwd] = useState<string>('');\r\n  const [remember, setRemember] = useState<boolean>(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const loginStatus = useSelector<AppStateType, LoginStateType>(state => state.login);\r\n\r\n  const loginCallback = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n    dispatch(loginTC(email, pwd, remember));\r\n  };\r\n\r\n  const form: JSX.Element = <div>\r\n    <form className={styles.form}>\r\n      <div className={styles.formGroup}>\r\n        <Input\r\n          disabled={loginStatus.loading}\r\n          type={'email'}\r\n          placeholder=\"Input email\"\r\n          value={email}\r\n          onChange={e => setEmail(e.currentTarget.value)}/>\r\n      </div>\r\n      <div className={styles.formGroup}>\r\n        <Input.Password\r\n          disabled={loginStatus.loading}\r\n          placeholder=\"Input password\"\r\n          value={pwd}\r\n          onChange={e => setPwd(e.currentTarget.value)}/>\r\n      </div>\r\n      <div className={styles.rememberMeFormGroup}>\r\n        <label\r\n          htmlFor=\"rememberMe\"\r\n          className={styles.fieldLabel}>Запомнить меня</label>\r\n        <Switch\r\n          disabled={loginStatus.loading}\r\n          checkedChildren={<CheckOutlined/>}\r\n          unCheckedChildren={<CloseOutlined/>}\r\n          defaultChecked={false}\r\n          onChange={(checked) => setRemember(checked)}\r\n        />\r\n      </div>\r\n      <Button\r\n        type={'primary'}\r\n        className={styles.button}\r\n        onClick={loginCallback}\r\n        loading={loginStatus.loading}\r\n        disabled={!emailValidator(email) || !passwordValidator(pwd)}>\r\n        Войти\r\n      </Button>\r\n      {!emailValidator(email) && <span className={styles.error}>Некорректный email</span>}\r\n      {!passwordValidator(pwd) && <span className={styles.error}>Короткий пароль</span>}\r\n    </form>\r\n    {loginStatus.error && <Alert\r\n        message={loginStatus.error}\r\n        type=\"error\"\r\n        closable\r\n    />}\r\n  </div>;\r\n\r\n  return (\r\n    <>\r\n      {form}\r\n    </>\r\n  );\r\n};","import React from 'react';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {Login} from '../components/login/Login';\r\nimport styles from './LoginPage.module.css';\r\nimport commonStyles from '../components/common/commonStyle.module.css';\r\nimport {PATH} from '../routes/Routes';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../store/store';\r\n\r\ntype PropsType = {};\r\n\r\nexport const LoginPage: React.FC<PropsType> = props => {\r\n\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={PATH.PROFILE}/>;\r\n  }\r\n\r\n  return (\r\n    <div className={commonStyles.fullscreen}>\r\n      <div className={styles.loginPage}>\r\n        <h2 className={styles.h2}>Выполните вход в наше суперское приложение</h2>\r\n        <h4 className={styles.h4}>Вы можете зарегистрироваться <NavLink to={PATH.REGISTER}>здесь</NavLink></h4>\r\n        <h4 className={styles.h4}>Если Вы забыли свой пароль, то\r\n                                  Вам <NavLink to={PATH.PASS_RECOVERY}>сюда</NavLink></h4>\r\n        <Login/>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import {AppActionsType, AppThunk} from './store';\r\nimport {authApi} from '../utils/authApi';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\n\r\nexport enum PASS_RECOVERY_ACTION_TYPE {\r\n  SET_ERROR = 'PASS_RECOVERY/SET_ERROR',\r\n  SET_LOADING = 'PASS_RECOVERY/SET_LOADING',\r\n  SET_IS_EMAIL_SEND = 'PASS_RECOVERY/SET_IS_EMAIL_SEND'\r\n}\r\n\r\nexport type PassRecoveryStateType = {\r\n  error: null | string\r\n  loading: boolean\r\n  isEmailSend: boolean\r\n}\r\n\r\nconst initialState: PassRecoveryStateType = {\r\n  error: null,\r\n  loading: false,\r\n  isEmailSend: false\r\n};\r\n\r\nexport const passRecoveryReducer = (state = initialState, action: AppActionsType): PassRecoveryStateType => {\r\n  switch (action.type) {\r\n    case PASS_RECOVERY_ACTION_TYPE.SET_ERROR:\r\n    case PASS_RECOVERY_ACTION_TYPE.SET_LOADING:\r\n    case PASS_RECOVERY_ACTION_TYPE.SET_IS_EMAIL_SEND:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case APP_ACTION_TYPE.CLEAR_STORE: {\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: PASS_RECOVERY_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\nconst setIsEmailSend = (isEmailSend: boolean) => {\r\n  return {type: PASS_RECOVERY_ACTION_TYPE.SET_IS_EMAIL_SEND as const, payload: {isEmailSend}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: PASS_RECOVERY_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\nexport const passRecoveryTC = (email: string): AppThunk => async dispatch => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    const changePassResponse = await authApi.passRecovery(email);\r\n    dispatch(setIsEmailSend(true));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n\r\n};\r\n\r\nexport type PassRecoveryReducerActionsType =\r\n  ReturnType<typeof setErrorAC>\r\n  | ReturnType<typeof setLoadingAC>\r\n  | ReturnType<typeof setIsEmailSend>","import React from 'react';\r\nimport styles from './Spinner.module.css';\r\n\r\ntype PropsType = {};\r\n\r\nexport const Spinner: React.FC<PropsType> = props => {\r\n  return (\r\n    <div className={styles.loader}>\r\n      Ждите отстоя пива\r\n    </div>\r\n  );\r\n};","import React, {ChangeEvent, useState} from 'react';\r\nimport styles from './Register.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {InitialStateType, registerTC} from '../../store/registration-reducer';\r\nimport {AppStateType} from '../../store/store';\r\nimport {emailValidator} from '../../utils/validators/email-validator';\r\nimport {passwordValidator} from '../../utils/validators/password-validator';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Spinner} from '../spinner/Spinner';\r\nimport {PATH} from '../../routes/Routes';\r\n\r\nexport const Register: React.VFC = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const registerState = useSelector<AppStateType, InitialStateType>(state => state.registration);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    dispatch(registerTC(email, password));\r\n    setPassword('');\r\n  };\r\n\r\n  if (registerState.isRegisterSuccess) {\r\n    return <Redirect to={PATH.LOGIN}/>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.registerPage}>\r\n      <div className={styles.registerContainer}>\r\n        {!registerState.loading ? <div className={styles.registerForm}>\r\n            <input\r\n              value={email}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={changeEmail}\r\n              placeholder={'email'}/>\r\n            <input\r\n              value={password}\r\n              type=\"password\"\r\n              onChange={changePassword}\r\n              placeholder={'password'}/>\r\n            {registerState.error && <div style={{color: 'red'}}>{registerState.error}</div>}\r\n            <button\r\n              disabled={!emailValidator(email) || !passwordValidator(password)}\r\n              onClick={onSubmit}>Register\r\n            </button>\r\n            {!emailValidator(email) && <span style={{color: 'red'}}>Неверный email</span>}\r\n            {!passwordValidator(password) && <span style={{color: 'red'}}>Пароль должен содержать более 6 символов</span>}\r\n          </div>\r\n          :\r\n          <Spinner/>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {Register} from \"../components/register/Register\";\r\n\r\n\r\ntype PropsType = {};\r\n\r\nexport const RegisterPage: React.FC<PropsType> = props => {\r\n    return (\r\n        <div>\r\n            <h2>Register Page</h2>\r\n            <Register/>\r\n        </div>\r\n    );\r\n};","import React, {useEffect} from 'react';\r\nimport styles from './Profile.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\nimport {LoginResponseType} from '../../utils/authApi';\r\n\r\ntype PropsType = {};\r\n\r\nexport const Profile: React.FC<PropsType> = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const authData = useSelector<AppStateType, LoginResponseType | {}>(state => state.appStatus.authData);\r\n\r\n  return (\r\n    <div>\r\n      <pre>{JSON.stringify(authData, null, 2)}</pre>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {Profile} from '../components/profile/Profile';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../store/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from '../routes/Routes';\r\n\r\ntype PropsType = {};\r\n\r\nexport const ProfilePage: React.FC<PropsType> = props => {\r\n\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={PATH.LOGIN}/>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Profile Page</h2>\r\n      <Profile/>\r\n    </div>\r\n  );\r\n};","import {authApi} from '../utils/authApi';\r\nimport {AppActionsType, AppThunk} from './store';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\n\r\nenum PASS_CHANGE_ACTION_TYPE {\r\n  SET_ERROR = 'PASS_CHANGE/SET_ERROR',\r\n  SET_LOADING = 'PASS_CHANGE/SET_LOADING',\r\n  SET_IS_CHANGED_PASS = 'PASS_CHANGE/SET_IS_CHANGED_PASS'\r\n}\r\n\r\nexport type PassChangeStateType = {\r\n  error: null | string\r\n  loading: boolean\r\n  isChangedPass: boolean\r\n}\r\n\r\nconst initialState: PassChangeStateType = {\r\n  error: null,\r\n  loading: false,\r\n  isChangedPass: false\r\n};\r\n\r\nexport const passChangeReducer = (state = initialState, action: AppActionsType): PassChangeStateType => {\r\n  switch (action.type) {\r\n    case PASS_CHANGE_ACTION_TYPE.SET_ERROR:\r\n    case PASS_CHANGE_ACTION_TYPE.SET_LOADING:\r\n    case PASS_CHANGE_ACTION_TYPE.SET_IS_CHANGED_PASS:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case APP_ACTION_TYPE.CLEAR_STORE: {\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Action creators\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: PASS_CHANGE_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\nconst setIsChangedPass = (isChangedPass: boolean) => {\r\n  return {type: PASS_CHANGE_ACTION_TYPE.SET_IS_CHANGED_PASS as const, payload: {isChangedPass}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: PASS_CHANGE_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\nexport const changePassTC = (newPassword: string, token: string): AppThunk => async dispatch => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    const changePassResponse = await authApi.setNewPassword(newPassword, token);\r\n    dispatch(setIsChangedPass(true));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n\r\n};\r\n\r\nexport type PassChangeReducerActionsType =\r\n  ReturnType<typeof setErrorAC>\r\n  | ReturnType<typeof setLoadingAC>\r\n  | ReturnType<typeof setIsChangedPass>","import React, {useState} from 'react';\r\nimport styles from './PasswordRecovery.module.css';\r\nimport {authApi, InfoResponseType} from '../../utils/authApi';\r\nimport * as buffer from 'buffer';\r\nimport {emailValidator} from '../../utils/validators/email-validator';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../../routes/Routes';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\nimport {PassChangeStateType} from '../../store/pass-change-reducer';\r\nimport {PassRecoveryStateType, passRecoveryTC} from '../../store/pass-recovery-reducer';\r\n\r\ntype PropsType = {};\r\n\r\nexport const PasswordRecovery: React.FC<PropsType> = props => {\r\n\r\n  const [email, setEmail] = useState<string>('');\r\n\r\n  const dispatch = useDispatch();\r\n  const recoveryStatus = useSelector<AppStateType, PassRecoveryStateType>(state => state.passRecovery);\r\n\r\n  if (recoveryStatus.isEmailSend) {\r\n    return (\r\n      <div>\r\n        <span\r\n          style={{\r\n            color: 'blue',\r\n            textAlign: 'center'\r\n          }}>Всё отлично, иди проверяй почту, и жми <NavLink to={PATH.LOGIN}>ссылку</NavLink></span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.passRecovery}>\r\n      <h3>Форма восстановление пароля</h3>\r\n      {!recoveryStatus.loading\r\n        ? <div className={styles.recoveryForm}>\r\n          <label htmlFor=\"email\">Введите ваш email:</label>\r\n          <input\r\n            type=\"email\"\r\n            name={'email'}\r\n            value={email}\r\n            onChange={e => setEmail(e.currentTarget.value)}/>\r\n          <button\r\n            onClick={() => dispatch(passRecoveryTC(email))}\r\n            disabled={!emailValidator(email)}>Отправить\r\n          </button>\r\n        </div>\r\n        : <span style={{textAlign: 'center'}}>Отправка....</span>}\r\n      {recoveryStatus.error && <span style={{color: 'red', textAlign: 'center'}}>{recoveryStatus.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {PasswordRecovery} from '../components/pass-recovery/PasswordRecovery';\r\n\r\ntype PropsType = {};\r\n\r\nexport const PassRecoveryPage: React.FC<PropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Password Recovery Page</h2>\r\n      <PasswordRecovery/>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport styles from './TestComponent.module.css';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\n\r\nexport const TestComponent: React.VFC = () => {\r\n\r\n  const allReducerData = useSelector<AppStateType, AppStateType>(state => state);\r\n  const elements = Object.entries(allReducerData).map(elem => {\r\n    return <div key={elem[0]}>\r\n      <h5>{elem[0]}:</h5>\r\n      <pre>{JSON.stringify(elem[1], null, 2)}</pre>\r\n    </div>;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h3>All reducer data</h3>\r\n      {elements}\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {TestComponent} from '../components/test-component/TestComponent';\r\nimport {AppStateType} from '../store/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport {PATH} from '../routes/Routes';\r\n\r\ntype PropsType = {};\r\n\r\nexport const TestPage: React.FC<PropsType> = props => {\r\n\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={PATH.LOGIN}/>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Test Page</h2>\r\n      <TestComponent/>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport styles from './NotFound.module.css';\r\nimport img404 from './404.png';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype PropsType = {};\r\n\r\nexport const NotFound: React.FC<PropsType> = props => {\r\n\r\n  return (\r\n    <div className={styles.notFound}>\r\n      <div className={styles.rotate}>\r\n        <span>404</span>\r\n      </div>\r\n      <NavLink to={'/test'}>\r\n        На главную\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {NotFound} from '../components/page404/NotFound';\r\n\r\ntype PropsType = {};\r\n\r\nexport const Page404: React.FC<PropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Page 404</h2>\r\n      <NotFound/>\r\n    </div>\r\n  );\r\n};","import {AppActionsType, AppThunk} from './store';\r\nimport {CardsPackType, cardPacksApi, AddCardsPackRequestType} from '../utils/cardPacksApi';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\n\r\nexport enum CARD_PACKS_ACTION_TYPE {\r\n  SET_ERROR = 'CARD_PACKS/SET_ERROR',\r\n  SET_LOADING = 'CARD_PACKS/SET_LOADING',\r\n  SET_PAGE = 'CARD_PACKS/SET_PAGE',\r\n  SET_PAGE_COUNT = 'CARD_PACKS/SET_PAGE_COUNT',\r\n  SET_CARD_PACKS = 'CARD_PACKS/SET_CARD_PACKS',\r\n  SET_CARD_PACKS_TOTAL_COUNT = 'CARD_PACKS/SET_CARD_PACKS_TOTAL_COUNT',\r\n  SET_ONLY_MY_PACKS = 'CARD_PACKS/SET_ONLY_MY_PACKS'\r\n}\r\n\r\nexport type CardPacksStateType = {\r\n  error: null | string\r\n  loading: boolean\r\n  cardPacks: Array<CardsPackType>\r\n  cardPacksTotalCount: number\r\n  maxCardsCount: number\r\n  minCardsCount: number\r\n  page: number\r\n  pageCount: number\r\n  onlyMyPacks: boolean\r\n}\r\n\r\nconst initialState: CardPacksStateType = {\r\n  error: null,\r\n  loading: false,\r\n  cardPacks: [],\r\n  cardPacksTotalCount: 0,\r\n  maxCardsCount: 0,\r\n  minCardsCount: 0,\r\n  pageCount: 10,\r\n  page: 1,\r\n  onlyMyPacks: false\r\n};\r\n\r\nexport const cardPacksReducer = (state = initialState, action: AppActionsType): CardPacksStateType => {\r\n  switch (action.type) {\r\n    case CARD_PACKS_ACTION_TYPE.SET_ERROR:\r\n    case CARD_PACKS_ACTION_TYPE.SET_LOADING:\r\n    case CARD_PACKS_ACTION_TYPE.SET_CARD_PACKS:\r\n    case CARD_PACKS_ACTION_TYPE.SET_CARD_PACKS_TOTAL_COUNT:\r\n    case CARD_PACKS_ACTION_TYPE.SET_PAGE:\r\n    case CARD_PACKS_ACTION_TYPE.SET_PAGE_COUNT:\r\n    case CARD_PACKS_ACTION_TYPE.SET_ONLY_MY_PACKS:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case APP_ACTION_TYPE.CLEAR_STORE:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setCardPacks = (cardPacks: Array<CardsPackType>) => {\r\n  return {\r\n    type: CARD_PACKS_ACTION_TYPE.SET_CARD_PACKS as const, payload: {cardPacks}\r\n  };\r\n};\r\n\r\nexport const setPage = (page: number) => {\r\n  return {\r\n    type: CARD_PACKS_ACTION_TYPE.SET_PAGE as const, payload: {page}\r\n  };\r\n};\r\n\r\nconst setCardPacksTotalCount = (cardPacksTotalCount: number) => {\r\n  return {\r\n    type: CARD_PACKS_ACTION_TYPE.SET_CARD_PACKS_TOTAL_COUNT as const, payload: {cardPacksTotalCount}\r\n  };\r\n};\r\n\r\nexport const setPageCount = (pageCount: number) => {\r\n  return {\r\n    type: CARD_PACKS_ACTION_TYPE.SET_PAGE_COUNT as const, payload: {pageCount}\r\n  };\r\n};\r\n\r\nexport const setOnlyMyPacks = (onlyMyPacks: boolean) => {\r\n  return {\r\n    type: CARD_PACKS_ACTION_TYPE.SET_ONLY_MY_PACKS as const, payload: {onlyMyPacks}\r\n  };\r\n};\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: CARD_PACKS_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: CARD_PACKS_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\nexport const setCardsPacksTC = (pageCount: number, page: number, user_id?: string, packName?: string): AppThunk => async dispatch => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  dispatch(setCardPacks([]));\r\n\r\n  try {\r\n    const response = await cardPacksApi.getCardsPacks({pageCount, page, user_id, packName});\r\n    dispatch(setCardPacks(response.data.cardPacks));\r\n    dispatch(setCardPacksTotalCount(response.data.cardPacksTotalCount));\r\n\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const deleteCardsPackTC = (cardPackId: string): AppThunk => async (dispatch, getState) => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    await cardPacksApi.deleteCardsPack(cardPackId);\r\n    const {pageCount, page, onlyMyPacks} = getState().cardPacks;\r\n    const _id = onlyMyPacks ? getState().appStatus.authData._id : undefined;\r\n    dispatch(setCardsPacksTC(pageCount, page, _id));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const addCardsPackTC = (cardPack: Partial<AddCardsPackRequestType>): AppThunk => async (dispatch, getState) => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    await cardPacksApi.addCardsPack(cardPack);\r\n    const {pageCount, page, onlyMyPacks} = getState().cardPacks;\r\n    const _id = onlyMyPacks ? getState().appStatus.authData._id : undefined;\r\n    dispatch(setCardsPacksTC(pageCount, page, _id));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport type CardPacksReducerActionsType =\r\n  ReturnType<typeof setErrorAC>\r\n  | ReturnType<typeof setLoadingAC>\r\n  | ReturnType<typeof setCardPacks>\r\n  | ReturnType<typeof setPage>\r\n  | ReturnType<typeof setPageCount>\r\n  | ReturnType<typeof setCardPacksTotalCount>\r\n  | ReturnType<typeof setOnlyMyPacks>\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport styles from './PassChange.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {changePassTC, PassChangeStateType} from '../../store/pass-change-reducer';\r\nimport {AppStateType} from '../../store/store';\r\nimport {matchPasswordValidator, passwordValidator} from '../../utils/validators/password-validator';\r\nimport {Spinner} from '../spinner/Spinner';\r\nimport {PATH} from '../../routes/Routes';\r\n\r\ntype PropsType = {};\r\n\r\nexport const SetNewPass: React.FC<PropsType> = props => {\r\n\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [newPassword2, setConfirmPassword] = useState('');\r\n\r\n  const statePassReducer = useSelector<AppStateType, PassChangeStateType>(state => state.passChange);\r\n\r\n  const dispatch = useDispatch();\r\n  const {token} = useParams<{token: string}>();\r\n  const changePass = () => {\r\n    dispatch(changePassTC(newPassword, token));\r\n  };\r\n\r\n  const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setNewPassword(e.currentTarget.value);\r\n  };\r\n  const changeConfirmPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setConfirmPassword(e.currentTarget.value);\r\n  };\r\n\r\n  if (statePassReducer.isChangedPass) {\r\n    return <Redirect to={PATH.LOGIN}/>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.passChange}>\r\n      <div className={styles.passChangeContainer}>\r\n        {!statePassReducer.loading ? <div className={styles.passChangeForm}>\r\n            <span>Смена пароля</span>\r\n            Введите новый пароль<input\r\n            type=\"password\"\r\n            value={newPassword}\r\n            onChange={changePassword}/>\r\n            Подтвердите новый пароль<input\r\n            type=\"password\"\r\n            value={newPassword2}\r\n            onChange={changeConfirmPassword}/>\r\n            <button\r\n              disabled={!passwordValidator(newPassword) || !matchPasswordValidator(newPassword, newPassword2)}\r\n              onClick={changePass}>Отправить\r\n            </button>\r\n            {!passwordValidator(newPassword) &&\r\n            <span style={{color: 'red'}}>Пароль должен содержать более 6 символов</span>}\r\n            {!matchPasswordValidator(newPassword, newPassword2) &&\r\n            <span style={{color: 'red'}}>Пароли не совпадают</span>}\r\n          </div>\r\n          :\r\n          <Spinner/>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {SetNewPass} from '../components/set-new-pass/SetNewPass';\r\n\r\ntype PropsType = {};\r\n\r\nexport const SetNewPasswordPage: React.FC<PropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Password Change Page</h2>\r\n      <SetNewPass/>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport styles from './CardPack.module.css';\r\nimport {CardsPackType} from '../../utils/cardPacksApi';\r\nimport {Button, Popconfirm} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n  cardPack: CardsPackType\r\n  isMyCardPack: boolean\r\n  onDelete: () => void\r\n};\r\n\r\nexport const CardPack: React.FC<PropsType> = props => {\r\n  const {cardPack, onDelete, isMyCardPack} = props;\r\n\r\n  return (\r\n    <div className={styles.pack}>\r\n      <div className={styles.packHeader}>\r\n        <h3 style={{textAlign: 'center', textTransform: 'uppercase'}}>{cardPack.name}</h3>\r\n      </div>\r\n      <div className={styles.ratingCount}>\r\n        <div className={styles.cardsCount}>\r\n          <h4>Cards count:</h4>\r\n          <span>{cardPack.cardsCount}</span>\r\n        </div>\r\n        <div className={styles.rating}>\r\n          <h4>Rating:</h4>\r\n          <span>{cardPack.rating}</span>\r\n        </div>\r\n      </div>\r\n      <div className={styles.ratingCount}>\r\n        <div className={styles.cardsCount}>\r\n          <h4>Shots:</h4>\r\n          <span>{cardPack.shots}</span>\r\n        </div>\r\n        <div className={styles.rating}>\r\n          <h4>Grade:</h4>\r\n          <span>{cardPack.grade}</span>\r\n        </div>\r\n      </div>\r\n      <div className={styles.actions}>\r\n        <Link to={`/cards/${cardPack._id}`}><Button\r\n          className={styles.action}\r\n          disabled={!isMyCardPack && cardPack.cardsCount === 0}\r\n        >\r\n          View</Button></Link>\r\n        <Button\r\n          className={styles.action}\r\n          disabled={!isMyCardPack}>Edit</Button>\r\n        <Popconfirm\r\n          onConfirm={onDelete}\r\n          title={'Точно удалить?'}\r\n          cancelText={'Нет'}\r\n          okText={'Да'}\r\n          placement={'top'}\r\n          cancelButtonProps={{type: 'primary'}}\r\n          okButtonProps={{danger: true}}>\r\n          < Button\r\n            disabled={!isMyCardPack}\r\n            className={styles.action}\r\n            danger>Remove\r\n          </Button>\r\n        </Popconfirm>\r\n      </div>\r\n      <div className={styles.user}>\r\n        <span>{cardPack.user_name}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import axios from 'axios';\r\n\r\nconst LOCAL_URL = 'http://localhost:7542/2.0/';\r\nconst REMOTE_URL = 'https://neko-back.herokuapp.com/2.0';\r\n\r\nconst instance = axios.create({baseURL: REMOTE_URL, withCredentials: true});\r\n\r\nexport const cardPacksApi = {\r\n  getCardsPacks(options: Partial<GetCardsPacksRequestType>) {\r\n    return instance.get<CardsPacksResponseType>('/cards/pack', {params: {...options}});\r\n  },\r\n\r\n  deleteCardsPack(cardPackId: string) {\r\n    return instance.delete('/cards/pack?id=' + cardPackId);\r\n  },\r\n\r\n  addCardsPack(cardsPack: Partial<AddCardsPackRequestType>) {\r\n    return instance.post('/cards/pack', {cardsPack: cardsPack});\r\n  }\r\n};\r\n\r\nexport type CardsPacksResponseType = {\r\n  cardPacks: Array<CardsPackType>\r\n  cardPacksTotalCount: number\r\n  maxCardsCount: number\r\n  minCardsCount: number\r\n  page: number\r\n  pageCount: number\r\n}\r\n\r\nexport type CardsPackType = {\r\n  _id: string\r\n  user_id: string\r\n  user_name: string\r\n  name: string\r\n  path: string\r\n  cardsCount: number\r\n  grade: number\r\n  shots: number\r\n  rating: number\r\n  type: 'pack' | 'folder'\r\n  created: string\r\n  updated: string\r\n  __v: string\r\n}\r\nexport type AddCardsPackRequestType = {\r\n  name: string\r\n  path: string\r\n  grade: number\r\n  shots: number\r\n  rating: number\r\n  deckCover: string\r\n  private: boolean\r\n  type: 'pack' | 'folder'\r\n}\r\n\r\nexport type GetCardsPacksRequestType = {\r\n  packName: string\r\n  min: number\r\n  max: number\r\n  sortPacks: string\r\n  page: number\r\n  pageCount: number\r\n  user_id: string\r\n}","import {AppActionsType, AppThunk} from './store';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\nimport {AddCardRequestType, cardsApi, CardType} from '../utils/cardsApi';\r\n\r\nexport enum CARDS_ACTION_TYPE {\r\n  SET_ERROR = 'CARDS/SET_ERROR',\r\n  SET_LOADING = 'CARDS/SET_LOADING',\r\n  SET_PAGE = 'CARDS/SET_PAGE',\r\n  SET_PAGE_COUNT = 'CARDS/SET_PAGE_COUNT',\r\n  SET_CARDS = 'CARDS/SET_CARDS',\r\n  SET_CARDS_TOTAL_COUNT = 'CARDS/SET_CARDS_TOTAL_COUNT'\r\n}\r\n\r\nexport type CardsStateType = {\r\n  error: null | string\r\n  loading: boolean\r\n  cards: Array<CardType>\r\n  cardsTotalCount: number\r\n  maxCardsCount: number\r\n  minCardsCount: number\r\n  page: number\r\n  pageCount: number\r\n}\r\n\r\nconst initialState: CardsStateType = {\r\n  error: null,\r\n  loading: false,\r\n  cards: [],\r\n  cardsTotalCount: 0,\r\n  maxCardsCount: 0,\r\n  minCardsCount: 0,\r\n  pageCount: 10,\r\n  page: 1\r\n};\r\n\r\nexport const cardsReducer = (state = initialState, action: AppActionsType): CardsStateType => {\r\n  switch (action.type) {\r\n    case CARDS_ACTION_TYPE.SET_ERROR:\r\n    case CARDS_ACTION_TYPE.SET_LOADING:\r\n    case CARDS_ACTION_TYPE.SET_CARDS:\r\n    case CARDS_ACTION_TYPE.SET_CARDS_TOTAL_COUNT:\r\n    case CARDS_ACTION_TYPE.SET_PAGE:\r\n    case CARDS_ACTION_TYPE.SET_PAGE_COUNT:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case APP_ACTION_TYPE.CLEAR_STORE:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setCards = (cards: Array<CardType>) => {\r\n  return {\r\n    type: CARDS_ACTION_TYPE.SET_CARDS as const, payload: {cards}\r\n  };\r\n};\r\n\r\nexport const setPage = (page: number) => {\r\n  return {\r\n    type: CARDS_ACTION_TYPE.SET_PAGE as const, payload: {page}\r\n  };\r\n};\r\n\r\nconst setCardsTotalCount = (cardsTotalCount: number) => {\r\n  return {\r\n    type: CARDS_ACTION_TYPE.SET_CARDS_TOTAL_COUNT as const, payload: {cardsTotalCount}\r\n  };\r\n};\r\n\r\nexport const setPageCount = (pageCount: number) => {\r\n  return {\r\n    type: CARDS_ACTION_TYPE.SET_PAGE_COUNT as const, payload: {pageCount}\r\n  };\r\n};\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: CARDS_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: CARDS_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\nexport const setCardsTC = (pageCount: number, page: number, cardsPack_id?: string): AppThunk => async dispatch => {\r\n\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  dispatch(setCards([]));\r\n\r\n  try {\r\n    const response = await cardsApi.getCards({pageCount, page, cardsPack_id});\r\n    dispatch(setCards(response.data.cards));\r\n    dispatch(setCardsTotalCount(response.data.cardsTotalCount));\r\n\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const deleteCardTC = (cardId: string, cardsPackId: string): AppThunk => async (dispatch, getState) => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    await cardsApi.deleteCard(cardId);\r\n    const {pageCount, page} = getState().cards;\r\n    dispatch(setCardsTC(pageCount, page, cardsPackId));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const addCardTC = (card: Partial<AddCardRequestType>): AppThunk => async (dispatch, getState) => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    await cardsApi.addCard(card);\r\n    const {pageCount, page} = getState().cards;\r\n    dispatch(setCardsTC(pageCount, page, card.cardsPack_id));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport type CardsReducerActionsType =\r\n  ReturnType<typeof setErrorAC>\r\n  | ReturnType<typeof setLoadingAC>\r\n  | ReturnType<typeof setCards>\r\n  | ReturnType<typeof setPage>\r\n  | ReturnType<typeof setPageCount>\r\n  | ReturnType<typeof setCardsTotalCount>\r\n","import React from 'react';\r\nimport styles from './CardPacks.module.css';\r\nimport {CardsPackType} from '../../utils/cardPacksApi';\r\nimport {CardPack} from './CardPack';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {deleteCardsPackTC} from '../../store/card-packs-reducer';\r\nimport {AppStateType} from '../../store/store';\r\n\r\ntype PropsType = {\r\n  cardPacks: Array<CardsPackType>\r\n};\r\n\r\nexport const CardPacks: React.VFC<PropsType> = props => {\r\n\r\n    const dispatch = useDispatch();\r\n    const userId = useSelector<AppStateType, string | undefined>(state => state.appStatus.authData._id);\r\n\r\n    const {cardPacks} = props;\r\n\r\n    const deleteCardPack = (cardPackId: string) => {\r\n      dispatch(deleteCardsPackTC(cardPackId));\r\n    };\r\n\r\n    return (\r\n      <div className={styles.packsContainer}>\r\n        {cardPacks.map(cp => <CardPack\r\n          cardPack={cp}\r\n          isMyCardPack={userId===cp.user_id}\r\n          onDelete={() => deleteCardPack(cp._id)}\r\n          key={cp._id}/>)}\r\n      </div>\r\n\r\n    );\r\n  }\r\n;\r\n","import {Button, Input} from 'antd';\r\nimport React, {ChangeEvent, useState} from 'react';\r\nimport styles from './FieldWithButton.module.css';\r\n\r\ntype PropsType = {\r\n  inputPlaceholder?: string\r\n  buttonLabel?: string\r\n  disabled?: boolean\r\n  action: (searchText: string) => void\r\n};\r\n\r\nexport const FieldWithButton: React.FC<PropsType> = props => {\r\n\r\n  const [text, setText] = useState<string>('');\r\n\r\n  const inputChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setText(event.currentTarget.value);\r\n  };\r\n\r\n  const onSearch = () => {\r\n    props.action(text);\r\n    setText('');\r\n  };\r\n\r\n  return (\r\n    <div className={styles.searchPanel}>\r\n      <Input\r\n        disabled={props.disabled}\r\n        placeholder={props.inputPlaceholder}\r\n        value={text}\r\n        onKeyPress={event => event.key === 'Enter' && onSearch()}\r\n        onChange={inputChangeHandler}/>\r\n      <Button\r\n        onClick={onSearch}\r\n        disabled={props.disabled}>{props.buttonLabel ?? 'Do it'}</Button>\r\n    </div>\r\n  );\r\n};","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport styles from './CardPacksPage.module.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from '../store/store';\r\nimport {CardPacks} from '../components/card-packs/CardPacks';\r\nimport {Alert, Pagination, Spin, Switch} from 'antd';\r\nimport {\r\n  addCardsPackTC,\r\n  CardPacksStateType,\r\n  setCardsPacksTC,\r\n  setOnlyMyPacks,\r\n  setPage,\r\n  setPageCount\r\n} from '../store/card-packs-reducer';\r\nimport {CheckOutlined, CloseOutlined} from '@ant-design/icons';\r\nimport {FieldWithButton} from '../components/field-with-button/FieldWithButton';\r\nimport {PATH} from '../routes/Routes';\r\n\r\ntype PropsType = {};\r\n\r\nexport const CardPacksPage: React.FC<PropsType> = props => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n  const myId = useSelector<AppStateType, string>(state => state.appStatus.authData._id ?? '');\r\n\r\n  const {\r\n    error,\r\n    loading,\r\n    cardPacks,\r\n    cardPacksTotalCount,\r\n    page,\r\n    pageCount,\r\n    onlyMyPacks\r\n  } = useSelector<AppStateType, CardPacksStateType>(state => state.cardPacks);\r\n\r\n  useEffect(() => {\r\n    dispatch(setCardsPacksTC(pageCount, page, onlyMyPacks ? myId : undefined));\r\n  }, [pageCount, page, onlyMyPacks, myId, dispatch]);\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={PATH.LOGIN}/>;\r\n  }\r\n  const onChangeHandler = (page: number) => {\r\n    dispatch(setPage(page));\r\n  };\r\n\r\n  const onShowSizeChangeHandler = (current: number, size: number) => {\r\n    dispatch(setPageCount(size));\r\n  };\r\n\r\n  const onSearch = (searchText: string) => {\r\n    dispatch(setCardsPacksTC(pageCount, page, onlyMyPacks ? myId : undefined, searchText));\r\n  };\r\n\r\n  const onAdd = (cardPackName: string) => {\r\n    dispatch(addCardsPackTC({name: cardPackName}));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Card Packs Page</h2>\r\n      <div className={styles.optionsBar}>\r\n        <div className={styles.options}><Pagination\r\n          onShowSizeChange={onShowSizeChangeHandler}\r\n          onChange={onChangeHandler}\r\n          defaultCurrent={1}\r\n          showSizeChanger={true}\r\n          current={page}\r\n          pageSize={pageCount}\r\n          disabled={loading}\r\n          showQuickJumper\r\n          total={cardPacksTotalCount}/>\r\n          <label\r\n            htmlFor=\"rememberMe\"\r\n          >Только мои колоды</label>\r\n          <Switch\r\n            disabled={loading}\r\n            checkedChildren={<CheckOutlined/>}\r\n            unCheckedChildren={<CloseOutlined/>}\r\n            defaultChecked={false}\r\n            checked={onlyMyPacks}\r\n            onChange={(checked) => dispatch(setOnlyMyPacks(checked))}\r\n          />\r\n        </div>\r\n        <div className={styles.searchBar}>\r\n          <FieldWithButton\r\n            disabled={loading}\r\n            inputPlaceholder={'Введите название колоды'}\r\n            buttonLabel={'Поиск'}\r\n            action={onSearch}/>\r\n        </div>\r\n        <div className={styles.searchBar}>\r\n          <FieldWithButton\r\n            disabled={loading}\r\n            inputPlaceholder={'Название новой колоды'}\r\n            buttonLabel={'Добавить'}\r\n            action={onAdd}/>\r\n        </div>\r\n        <div style={{marginTop: '25px', textAlign: 'center'}}>\r\n          {error && <Alert\r\n              message={error}\r\n              type=\"error\"\r\n              closeText={'Close'}\r\n              closable\r\n          />}\r\n        </div>\r\n      </div>\r\n      {loading\r\n        ? <div style={{marginTop: '25px', textAlign: 'center'}}>\r\n          <Spin\r\n            size={'large'}\r\n            tip={'Loading...'}/>\r\n        </div>\r\n        : <CardPacks cardPacks={cardPacks}/>\r\n      }\r\n    </>\r\n  );\r\n};","import React from 'react';\r\nimport styles from './Card.module.css';\r\nimport {CardType} from '../../utils/cardsApi';\r\nimport {Button, Popconfirm} from 'antd';\r\n\r\ntype PropsType = {\r\n  card: CardType\r\n  onDelete: () => void\r\n};\r\n\r\nexport const Card: React.FC<PropsType> = props => {\r\n  const {card, onDelete} = props;\r\n  return (\r\n\r\n    <div className={styles.card}>\r\n      <h3>{card.question}</h3>\r\n      <Popconfirm\r\n        onConfirm={onDelete}\r\n        title={'Точно удалить?'}\r\n        cancelText={'Нет'}\r\n        okText={'Да'}\r\n        placement={'top'}\r\n        cancelButtonProps={{type: 'primary'}}\r\n        okButtonProps={{danger: true}}>\r\n        < Button danger>\r\n          Remove\r\n        </Button>\r\n      </Popconfirm>\r\n    </div>\r\n\r\n  );\r\n};","import axios from 'axios';\r\n\r\nconst LOCAL_URL = 'http://localhost:7542/2.0/';\r\nconst REMOTE_URL = 'https://neko-back.herokuapp.com/2.0';\r\n\r\nconst instance = axios.create({baseURL: REMOTE_URL, withCredentials: true});\r\n\r\nexport const cardsApi = {\r\n  getCards(options: Partial<GetCardsRequestType>) {\r\n    return instance.get<CardsResponseType>('/cards/card', {params: {...options}});\r\n  },\r\n  deleteCard(cardId: string) {\r\n    return instance.delete('/cards/card?id=' + cardId);\r\n  },\r\n  addCard(card: Partial<AddCardRequestType>) {\r\n    return instance.post('/cards/card', {card});\r\n  }\r\n};\r\n\r\nexport type CardsResponseType = {\r\n  cards: Array<CardType>\r\n  cardsTotalCount: number\r\n  maxGrade: number\r\n  minGrade: number\r\n  page: number\r\n  pageCount: number\r\n  packUserId: string\r\n}\r\n\r\nexport type CardType = {\r\n  answer: string\r\n  question:string\r\n  cardsPack_id: string\r\n  grade:number\r\n  rating:number\r\n  shots: number\r\n  type: \"cards\" | \"folder\"\r\n  user_id: string\r\n  created: string\r\n  updated: string\r\n  __v: number\r\n  _id: string\r\n}\r\nexport type AddCardRequestType = {\r\n    cardsPack_id:string\r\n    question: string\r\n    answer: string\r\n    grade: number\r\n    shots: number\r\n    rating: number\r\n    answerImg: string\r\n    questionImg:string\r\n    questionVideo: string\r\n    answerVideo: string\r\n    type: string\r\n}\r\n\r\nexport type GetCardsRequestType = {\r\n  cardAnswer:string\r\n  cardQuestion:string\r\n  cardsPack_id:string\r\n  min: number\r\n  max: number\r\n  sortCards:string\r\n  page: number\r\n  pageCount: number\r\n}","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {LoginPage} from '../Pages/LoginPage';\r\nimport {RegisterPage} from '../Pages/RegisterPage';\r\nimport {ProfilePage} from '../Pages/ProfilePage';\r\nimport {PassRecoveryPage} from '../Pages/PassRecoveryPage';\r\nimport {TestPage} from '../Pages/TestPage';\r\nimport {Page404} from '../Pages/Page404';\r\nimport {SetNewPasswordPage} from '../Pages/SetNewPasswordPage';\r\nimport {CardPacksPage} from '../Pages/CardPacksPage';\r\nimport {CardsPage} from '../Pages/CardsPage';\r\n\r\nexport enum PATH {\r\n  LOGIN = '/login',\r\n  REGISTER = '/register',\r\n  PROFILE = '/profile',\r\n  CARD_PACKS = '/card-packs',\r\n  CARDS = '/cards',\r\n  PAGE404 = '/404',\r\n  PASS_RECOVERY = '/password-recovery',\r\n  TEST = '/test',\r\n  SET_NEW_PASSWORD = '/set-new-password'\r\n}\r\n\r\nexport const Routes: React.VFC = () => {\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route\r\n          path={'/'}\r\n          exact\r\n          render={() => <Redirect to={PATH.TEST}/>}\r\n        />\r\n        <Route\r\n          path={PATH.LOGIN}\r\n          exact\r\n          render={() => <LoginPage/>}/>\r\n        <Route\r\n          path={PATH.REGISTER}\r\n          exact\r\n          render={() => <RegisterPage/>}/>\r\n        <Route\r\n          path={PATH.PROFILE}\r\n          exact\r\n          render={() => <ProfilePage/>}/>\r\n        <Route\r\n          path={PATH.PASS_RECOVERY}\r\n          exact\r\n          render={() => <PassRecoveryPage/>}/>\r\n        <Route\r\n          path={PATH.CARD_PACKS}\r\n          exact\r\n          render={() => <CardPacksPage/>}/>\r\n        <Route\r\n          path={PATH.SET_NEW_PASSWORD + '/:token'}\r\n          exact\r\n          render={() => <SetNewPasswordPage/>}/>\r\n        <Route\r\n          path={PATH.CARDS + '/:cardPackId'}\r\n          exact\r\n          render={() => <CardsPage/>}/>\r\n        <Route\r\n          path={PATH.TEST}\r\n          exact\r\n          render={() => <TestPage/>}/>\r\n        <Route render={() => <Page404/>}/>\r\n      </Switch>\r\n    </>\r\n  );\r\n};","import React from 'react';\r\nimport {CardType} from '../../utils/cardsApi';\r\nimport {Card} from './Card';\r\nimport {useDispatch} from 'react-redux';\r\nimport {deleteCardTC} from '../../store/cards-reducer';\r\nimport {Col} from 'antd';\r\n\r\ntype PropsType = {\r\n  cards: Array<CardType>\r\n};\r\n\r\nexport const Cards: React.FC<PropsType> = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const {cards} = props;\r\n  const deleteCard = (cardId: string, cardsPackId: string) => {\r\n    dispatch(deleteCardTC(cardId, cardsPackId));\r\n  };\r\n  return (\r\n    <>\r\n      {cards.map(card =>\r\n        <Col xxl={6} xl={8} lg={12} flex={'none'}>\r\n          <Card\r\n          onDelete={() => deleteCard(card._id, card.cardsPack_id)}\r\n          key={card._id}\r\n          card={card}/>\r\n        </Col>\r\n      )}\r\n    </>\r\n  );\r\n};","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {AppStateType} from '../store/store';\r\nimport {PATH} from '../routes/Routes';\r\nimport {Cards} from '../components/cards/Cards';\r\nimport {addCardTC, CardsStateType, setCardsTC, setPage, setPageCount} from '../store/cards-reducer';\r\nimport {Alert, Pagination, Row, Col, Spin, Divider} from 'antd';\r\nimport {FieldWithButton} from '../components/field-with-button/FieldWithButton';\r\n\r\ntype PropsType = {};\r\n\r\nexport const CardsPage: React.FC<PropsType> = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n  const {cardPackId} = useParams<{cardPackId: string}>();\r\n  const {\r\n    error,\r\n    loading,\r\n    cards,\r\n    cardsTotalCount,\r\n    page,\r\n    pageCount\r\n  } = useSelector<AppStateType, CardsStateType>(state => state.cards);\r\n  useEffect(() => {\r\n    dispatch(setCardsTC(pageCount, page, cardPackId));\r\n  }, [pageCount, page, cardPackId, dispatch]);\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={PATH.LOGIN}/>;\r\n  }\r\n\r\n  const onChangeHandler = (page: number) => {\r\n    dispatch(setPage(page));\r\n  };\r\n\r\n  const onShowSizeChangeHandler = (current: number, size: number) => {\r\n    dispatch(setPageCount(size));\r\n  };\r\n\r\n  const onAddCard = (question: string) => {\r\n    dispatch(addCardTC({question, cardsPack_id: cardPackId}));\r\n  };\r\n\r\n  const pagination: JSX.Element = <Pagination\r\n    onShowSizeChange={onShowSizeChangeHandler}\r\n    onChange={onChangeHandler}\r\n    defaultCurrent={1}\r\n    showSizeChanger={true}\r\n    current={page}\r\n    pageSize={pageCount}\r\n    disabled={loading || cardsTotalCount === 0}\r\n    showQuickJumper\r\n    total={cardsTotalCount}/>;\r\n\r\n  return (\r\n    <>\r\n      <Row justify={'center'}>\r\n        <Col\r\n          span={16}\r\n          offset={4}>\r\n          {pagination}\r\n        </Col>\r\n      </Row>\r\n      <Divider/>\r\n      <Row>\r\n        <Col\r\n          span={12}\r\n          offset={6}><FieldWithButton\r\n          action={onAddCard}\r\n          buttonLabel={'Добавить'}\r\n          inputPlaceholder={'Вопрос для карточки'}\r\n          disabled={loading}/></Col>\r\n      </Row>\r\n      {error &&\r\n      <Row\r\n          style={{marginTop: '25px'}}\r\n          justify={'center'}>\r\n          <Col>\r\n              <Alert\r\n                  message={error}\r\n                  type=\"error\"\r\n                  closeText={'Close'}\r\n                  closable\r\n              />\r\n          </Col>\r\n      </Row>}\r\n      {loading\r\n        ? <Row justify={'center'}>\r\n          <Spin\r\n            size={'large'}\r\n            tip={'Loading...'}/>\r\n        </Row>\r\n        :\r\n        <>\r\n          <Divider plain>\r\n            {cards.length === 0 ? 'А карточек-то нет....' : 'Карточки из колоды'}\r\n          </Divider>\r\n          <Row\r\n            justify={'center'}\r\n            wrap\r\n            gutter={[40, 40]}>\r\n            <Cards cards={cards}/>\r\n          </Row>\r\n        </>\r\n      }\r\n    </>\r\n  );\r\n};","import {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../../routes/Routes';\r\nimport React from 'react';\r\nimport styles from './Navbar.module.css';\r\nimport commonStyles from '../common/commonStyle.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\nimport {LoginStateType, logoutTC} from '../../store/login-reducer';\r\nimport {Button} from 'antd';\r\n\r\nexport function Navbar() {\r\n\r\n  const loginStatus = useSelector<AppStateType, LoginStateType>(state => state.login);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logout = () => {\r\n    dispatch(logoutTC());\r\n  };\r\n\r\n  return <nav className={styles.navbar}>\r\n    <div className={commonStyles.container}>\r\n      <ul>\r\n        <li>\r\n          <Button\r\n            type={'link'}\r\n            onClick={logout}\r\n            loading={loginStatus.loading}\r\n            disabled={loginStatus.loading}>Logout\r\n          </Button>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to={PATH.PROFILE}\r\n            activeClassName={styles.linkActive}>\r\n            Profile\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to={PATH.CARD_PACKS}\r\n            activeClassName={styles.linkActive}>\r\n            Card packs\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li>\r\n          <NavLink\r\n            to={PATH.TEST}\r\n            activeClassName={styles.linkActive}>\r\n            Test\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>;\r\n}","import React, {useEffect} from 'react';\r\nimport {Routes} from '../routes/Routes';\r\nimport {Navbar} from './navbar/Navbar';\r\nimport commonStyles from '../components/common/commonStyle.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../store/store';\r\nimport {AppInitializeTC} from '../store/app-reducer';\r\nimport {Spin} from 'antd';\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n  const isInitialized = useSelector<AppStateType, boolean>(state => state.appStatus.isInitialized);\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n\r\n  useEffect(() => {\r\n    if (!isInitialized) {\r\n      dispatch(AppInitializeTC());\r\n    }\r\n    return;\r\n  });\r\n\r\n  return (\r\n    isInitialized\r\n      ? <>\r\n        {isAuth && <Navbar/>}\r\n        <div className={commonStyles.container}>\r\n          <Routes/>\r\n        </div>\r\n      </>\r\n      : <div className={commonStyles.fullscreen}><Spin size={'large'}/></div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {AppActionsType} from './store';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\n\r\ntype StateType = typeof initialState;\r\n\r\nconst initialState = {\r\n  test: 'test'\r\n};\r\n\r\nexport const testReducer = (state: StateType = initialState, action: AppActionsType) => {\r\n  switch (action.type) {\r\n    case APP_ACTION_TYPE.CLEAR_STORE: {\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};","import {APP_ACTION_TYPE} from './app-reducer';\r\n\r\ntype StateType = typeof initialState;\r\n\r\nconst initialState = {};\r\n\r\nexport const profileReducer = (state: StateType = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case APP_ACTION_TYPE.CLEAR_STORE: {\r\n            return initialState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {combineReducers, applyMiddleware} from 'redux';\r\nimport {testReducer} from './test-reducer';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {registrationReducer, RegistrationReducerActionsType} from './registration-reducer';\r\nimport {loginReducer, LoginReducerActionsType} from './login-reducer';\r\nimport {createStore} from 'redux';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {appReducer, AppReducerActionsType} from './app-reducer';\r\nimport {passChangeReducer, PassChangeReducerActionsType} from './pass-change-reducer';\r\nimport {passRecoveryReducer, PassRecoveryReducerActionsType} from './pass-recovery-reducer';\r\nimport {cardPacksReducer, CardPacksReducerActionsType} from './card-packs-reducer';\r\nimport {cardsReducer, CardsReducerActionsType} from './cards-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  test: testReducer,\r\n  profile: profileReducer,\r\n  registration: registrationReducer,\r\n  login: loginReducer,\r\n  appStatus: appReducer,\r\n  passChange: passChangeReducer,\r\n  passRecovery: passRecoveryReducer,\r\n  cardPacks: cardPacksReducer,\r\n  cards: cardsReducer\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n// Все экшены нашего приложения, которые можно диспатчить\r\n\r\nexport type AppActionsType =\r\n  AppReducerActionsType\r\n  | LoginReducerActionsType\r\n  | PassChangeReducerActionsType\r\n  | RegistrationReducerActionsType\r\n  | PassRecoveryReducerActionsType\r\n  | CardPacksReducerActionsType\r\n  | CardsReducerActionsType;\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType,\r\n  AppStateType,\r\n  unknown,\r\n  AppActionsType>\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './store/store';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <App/>\r\n      </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pack\":\"CardPack_pack__2m3Wc\",\"packHeader\":\"CardPack_packHeader__1Okxb\",\"ratingCount\":\"CardPack_ratingCount__f6tWY\",\"cardsCount\":\"CardPack_cardsCount__1C66R\",\"rating\":\"CardPack_rating__1AEBW\",\"actions\":\"CardPack_actions__23XhH\",\"user\":\"CardPack_user__3S4Ph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__N0V3r\",\"formGroup\":\"Login_formGroup__2iiXm\",\"rememberMeFormGroup\":\"Login_rememberMeFormGroup__J0PFY\",\"textField\":\"Login_textField__urKPD\",\"fieldLabel\":\"Login_fieldLabel__3WD2v\",\"button\":\"Login_button__2U0Gs\",\"error\":\"Login_error__2f02u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"commonStyle_container__3XfKk\",\"fullscreen\":\"commonStyle_fullscreen__1cir9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"LoginPage_loginPage__3gr2s\",\"h2\":\"LoginPage_h2__28tJk\",\"h4\":\"LoginPage_h4__3XQ94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionsBar\":\"CardPacksPage_optionsBar__2tlzk\",\"options\":\"CardPacksPage_options__1HuMz\",\"searchBar\":\"CardPacksPage_searchBar__2xTAv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1JxPS\",\"linkActive\":\"Navbar_linkActive__2TGIt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerPage\":\"Register_registerPage__ICKdK\",\"registerContainer\":\"Register_registerContainer__tTLrm\",\"registerForm\":\"Register_registerForm__1zF3j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passChange\":\"PassChange_passChange__3AwJP\",\"passChangeContainer\":\"PassChange_passChangeContainer__24DNb\",\"passChangeForm\":\"PassChange_passChangeForm__1Gu7J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passRecovery\":\"PasswordRecovery_passRecovery__nDE1f\",\"recoveryForm\":\"PasswordRecovery_recoveryForm__2b-79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"NotFound_notFound__BKuHp\",\"rotate\":\"NotFound_rotate__2XOrI\"};"],"sourceRoot":""}