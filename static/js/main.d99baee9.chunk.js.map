{"version":3,"sources":["components/spinner/Spinner.module.css","Pages/CardPacksPage.module.css","store/app-reducer.ts","utils/authApi.ts","store/login-reducer.ts","store/registration-reducer.ts","utils/validators/email-validator.ts","utils/validators/password-validator.ts","components/Login/Login.tsx","Pages/LoginPage.tsx","store/pass-recovery-reducer.ts","components/spinner/Spinner.tsx","components/register/Register.tsx","Pages/RegisterPage.tsx","components/profile/Profile.tsx","Pages/ProfilePage.tsx","store/pass-change-reducer.ts","components/pass-recovery/PasswordRecovery.tsx","Pages/PassRecoveryPage.tsx","components/test-component/TestComponent.tsx","Pages/TestPage.tsx","components/page404/NotFound.tsx","Pages/Page404.tsx","store/card-packs-reducer.ts","components/set-new-pass/SetNewPass.tsx","Pages/SetNewPasswordPage.tsx","components/card-packs/CardPack.tsx","utils/cardPacksApi.ts","routes/Routes.tsx","components/card-packs/CardPacks.tsx","Pages/CardPacksPage.tsx","Pages/CardsPage.tsx","components/navbar/Navbar.tsx","components/App.tsx","store/test-reducer.ts","store/profile-reducer.ts","store/store.ts","index.tsx","components/card-packs/CardPack.module.css","components/card-packs/CardPacks.module.css","components/Login/Login.module.css","components/common/commonStyle.module.css","Pages/LoginPage.module.css","components/navbar/Navbar.module.css","components/register/Register.module.css","components/set-new-pass/PassChange.module.css","components/pass-recovery/PasswordRecovery.module.css","components/page404/NotFound.module.css"],"names":["module","exports","APP_ACTION_TYPE","instance","axios","create","baseURL","withCredentials","authApi","email","reqBody","from","message","post","password","resetPasswordToken","rememberMe","then","res","data","delete","LOGIN_ACTION_TYPE","setIsAuthAC","isAuth","type","SET_IS_AUTH","payload","setAuthDataAC","authData","SET_AUTH_DATA","initialState","isInitialized","error","REGISTRATION_ACTION_TYPE","setErrorAC","SET_ERROR","setLoadingAC","loading","SET_LOADING","emailValidator","test","passwordValidator","length","matchPasswordValidator","pwd1","pwd2","Login","useState","setEmail","pwd","setPwd","remember","setRemember","dispatch","useDispatch","loginStatus","useSelector","state","login","form","className","styles","formGroup","disabled","placeholder","value","onChange","e","currentTarget","Password","rememberMeFormGroup","htmlFor","fieldLabel","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","defaultChecked","checked","button","onClick","event","preventDefault","a","response","loginTC","closable","LoginPage","props","appStatus","to","commonStyles","fullscreen","loginPage","h2","h4","PATH","REGISTER","PASS_RECOVERY","PASS_RECOVERY_ACTION_TYPE","isRegisterSuccess","setIsRegisterSuccessAC","SET_IS_REGISTER_SUCCESS","Spinner","loader","Register","registerState","registration","setPassword","registerPage","registerContainer","registerForm","name","style","color","registerTC","RegisterPage","Profile","JSON","stringify","ProfilePage","PASS_CHANGE_ACTION_TYPE","isEmailSend","PasswordRecovery","recoveryStatus","passRecovery","textAlign","LOGIN","recoveryForm","SET_IS_EMAIL_SEND","passRecoveryTC","PassRecoveryPage","TestComponent","allReducerData","elements","Object","entries","map","elem","TestPage","NotFound","notFound","rotate","Page404","CARD_PACKS_ACTION_TYPE","isChangedPass","SetNewPass","newPassword","setNewPassword","newPassword2","setConfirmPassword","statePassReducer","passChange","token","useParams","passChangeContainer","passChangeForm","SET_IS_CHANGED_PASS","changePassTC","SetNewPasswordPage","CardPack","cardPack","onDelete","card","cardHeader","textTransform","ratingCount","cardsCount","rating","shots","grade","actions","_id","action","onConfirm","title","cancelText","okText","placement","cancelButtonProps","okButtonProps","danger","user","user_name","cardPacksApi","pageCount","page","userId","get","cardPackId","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","setCardPacks","SET_CARD_PACKS","setPage","SET_PAGE","setPageCount","SET_PAGE_COUNT","setCardPacksTC","user_id","SET_CARD_PACKS_TOTAL_COUNT","CardPacks","deleteCardPack","deleteCardPackTC","cp","index","trow","tableCell","cardsContainer","CardPacksPage","myId","onlyMy","setOnlyMy","useEffect","undefined","options","onShowSizeChange","current","size","defaultCurrent","pageSize","showQuickJumper","total","marginTop","tip","CardsPage","Routes","path","exact","render","TEST","PROFILE","CARD_PACKS","SET_NEW_PASSWORD","CARDS","Navbar","navbar","container","CLEAR_STORE","activeClassName","linkActive","App","SET_IS_INITIALIZED","rootReducer","combineReducers","profile","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d99baee9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__1m74L\",\"load7\":\"Spinner_load7__2T7RE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"CardPacksPage_options__1HuMz\"};","import {authApi, LoginResponseType} from '../utils/authApi';\r\nimport {AppActionsType, AppThunk} from './store';\r\n\r\nexport enum APP_ACTION_TYPE {\r\n  SET_IS_INITIALIZED = 'APP/SET_IS_INITIALIZED',\r\n  SET_IS_AUTH = 'APP/SET_IS_AUTH',\r\n  SET_AUTH_DATA = 'APP/SET_AUTH_DATA',\r\n  SET_ERROR = 'APP/SET_ERROR',\r\n  CLEAR_STORE = 'APP/CLEAR_STORE'\r\n}\r\n\r\n// Action creators\r\nexport const setIsInitializedAC = (isInitialized: boolean) => {\r\n  return {type: APP_ACTION_TYPE.SET_IS_INITIALIZED as const, payload: {isInitialized}};\r\n};\r\n\r\nexport const setIsAuthAC = (isAuth: boolean) => {\r\n  return {\r\n    type: APP_ACTION_TYPE.SET_IS_AUTH as const, payload: {isAuth}\r\n  };\r\n};\r\n\r\nconst setError = (error: string | null) => {\r\n  return {type: APP_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\n\r\nexport const clearStoreAC = () => {\r\n  return {type: APP_ACTION_TYPE.CLEAR_STORE as const};\r\n};\r\n\r\nexport const setAuthDataAC = (authData: LoginResponseType | {}) => {\r\n  return {type: APP_ACTION_TYPE.SET_AUTH_DATA as const, payload: {authData}};\r\n};\r\n// ------------------\r\n\r\n// Thunk creators\r\nexport const AppInitializeTC = (): AppThunk => async dispatch => {\r\n  try {\r\n    const response = await authApi.me();\r\n    dispatch(setAuthDataAC(response));\r\n    dispatch(setIsAuthAC(true));\r\n  } catch (e) {\r\n    dispatch(setError(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setIsInitializedAC(true));\r\n  }\r\n};\r\n// ------------------\r\n\r\nexport type AppReducerActionsType =\r\n  ReturnType<typeof setIsInitializedAC>\r\n  | ReturnType<typeof setIsAuthAC>\r\n  | ReturnType<typeof setError>\r\n  | ReturnType<typeof setAuthDataAC>\r\n  | ReturnType<typeof clearStoreAC>\r\n\r\ntype StateType = {\r\n  isInitialized: boolean\r\n  isAuth: boolean\r\n  authData: Partial<LoginResponseType>,\r\n  error: string | null\r\n};\r\n\r\nconst initialState: StateType = {\r\n  isInitialized: false,\r\n  isAuth: false,\r\n  authData: {},\r\n  error: null\r\n};\r\n\r\nexport const appReducer = (state = initialState, action: AppActionsType): StateType => {\r\n  switch (action.type) {\r\n    case APP_ACTION_TYPE.SET_IS_INITIALIZED:\r\n    case APP_ACTION_TYPE.SET_IS_AUTH:\r\n    case APP_ACTION_TYPE.SET_AUTH_DATA:\r\n    case APP_ACTION_TYPE.SET_ERROR:\r\n      return {...state, ...action.payload};\r\n    case APP_ACTION_TYPE.CLEAR_STORE: {\r\n      return initialState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\n\r\nconst LOCAL_URL = 'http://localhost:7542/2.0/';\r\nconst REMOTE_URL = 'https://neko-back.herokuapp.com/2.0';\r\nconst FROM = 'test-front-admin<test@test.com>';\r\n\r\nconst instance = axios.create({baseURL: LOCAL_URL, withCredentials: true});\r\n\r\nexport const authApi = {\r\n\r\n  passRecovery(email: string) {\r\n    const htmlBody = `<div style=\"background-color: lime; padding: 15px\">\r\n                       password recovery link: \r\n              <a href=\"https://ewgentgm.github.io/it-incubator-friday-project/#/set-new-password/$token$\">\r\n              link\r\n              </a></div>`;\r\n    const reqBody = {\r\n      email,\r\n      from: FROM,\r\n      message: htmlBody\r\n    };\r\n    return instance.post<InfoResponseType>('/auth/forgot', reqBody);\r\n  },\r\n\r\n  setNewPassword(password: string, resetPasswordToken: string) {\r\n    return instance.post<InfoResponseType>('/auth/set-new-password', {password, resetPasswordToken});\r\n  },\r\n\r\n  login(email: string, password: string, rememberMe: boolean = false) {\r\n    return instance.post<LoginResponseType>('/auth/login', {email, password, rememberMe}).then(res => res.data);\r\n  },\r\n\r\n  logout() {\r\n    return instance.delete<InfoResponseType>('/auth/me', {}).then(res => res.data);\r\n  },\r\n\r\n  me() {\r\n    return instance.post<LoginResponseType>('/auth/me', {}).then(res => res.data);\r\n  },\r\n\r\n  register(email: string, password: string) {\r\n    return instance.post<RegisterResponseType>('/auth/register', {email, password}).then(res => res.data);\r\n  }\r\n};\r\n\r\nexport type LoginResponseType = {\r\n  _id: string;\r\n  email: string;\r\n  name: string;\r\n  avatar?: string;\r\n  publicCardPacksCount: number;\r\n  created: string;\r\n  updated: string;\r\n  isAdmin: boolean;\r\n  verified: boolean;\r\n  rememberMe: boolean;\r\n  error?: string;\r\n}\r\n\r\nexport type InfoResponseType = {\r\n  info: string\r\n  error?: string\r\n}\r\n\r\ntype RegisterResponseType = {\r\n  addedUser: any\r\n  error?: string\r\n}","import {authApi} from '../utils/authApi';\r\nimport {APP_ACTION_TYPE, clearStoreAC, setAuthDataAC, setIsAuthAC} from './app-reducer';\r\nimport {AppActionsType, AppThunk} from './store';\r\n\r\nenum LOGIN_ACTION_TYPE {\r\n  SET_ERROR = 'LOGIN/SET_ERROR',\r\n  SET_LOADING = 'LOGIN/SET_LOADING',\r\n}\r\n\r\n// Action creators\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: LOGIN_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: LOGIN_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\n//----------------\r\n\r\n// Thunk creators\r\n\r\nexport const loginTC = (email: string, password: string, remember: boolean): AppThunk => async dispatch => {\r\n  dispatch(setErrorAC(null));\r\n  dispatch(setLoadingAC(true));\r\n  try {\r\n    const res = await authApi.login(email, password, remember);\r\n    dispatch(setAuthDataAC(res));\r\n    dispatch(setIsAuthAC(true));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const logoutTC = (): AppThunk => async dispatch => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    await authApi.logout();\r\n    //dispatch(setAuthDataAC({}));\r\n    //dispatch(setIsAuthAC(false));\r\n    dispatch(clearStoreAC());\r\n    //dispatch(AppInitializeTC());\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport type LoginReducerActionsType = ReturnType<typeof setErrorAC> | ReturnType<typeof setLoadingAC>;\r\n\r\nexport type LoginStateType = {\r\n  error: null | string\r\n  loading: boolean\r\n};\r\n\r\nconst initialState: LoginStateType = {\r\n  error: null,\r\n  loading: false\r\n};\r\n\r\n//---------------\r\n\r\nexport const loginReducer = (state: LoginStateType = initialState, action: AppActionsType): LoginStateType => {\r\n  switch (action.type) {\r\n    case LOGIN_ACTION_TYPE.SET_ERROR:\r\n    case LOGIN_ACTION_TYPE.SET_LOADING:\r\n      return {\r\n        ...state, ...action.payload\r\n      };\r\n    case APP_ACTION_TYPE.CLEAR_STORE: {\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};","import {authApi} from \"../utils/authApi\";\r\nimport {AppActionsType, AppThunk} from './store';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\n\r\nenum REGISTRATION_ACTION_TYPE {\r\n    SET_ERROR = 'REGISTRATION/SET_ERROR',\r\n    SET_LOADING = 'REGISTRATION/SET_LOADING',\r\n    SET_IS_REGISTER_SUCCESS = 'REGISTRATION/SET_IS_REGISTER_SUCCESS'\r\n}\r\n\r\nexport type InitialStateType = {\r\n    error: null | string\r\n    loading: boolean\r\n    isRegisterSuccess: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    error: null,\r\n    loading: false,\r\n    isRegisterSuccess: false\r\n};\r\n\r\nexport const registrationReducer = (state = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case REGISTRATION_ACTION_TYPE.SET_ERROR:\r\n        case REGISTRATION_ACTION_TYPE.SET_LOADING:\r\n        case REGISTRATION_ACTION_TYPE.SET_IS_REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case APP_ACTION_TYPE.CLEAR_STORE: {\r\n            return initialState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action creators\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n    return {type: REGISTRATION_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\nconst setIsRegisterSuccessAC = (isRegisterSuccess: boolean) => {\r\n    return {type: REGISTRATION_ACTION_TYPE.SET_IS_REGISTER_SUCCESS as const, payload: {isRegisterSuccess}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n    return {type: REGISTRATION_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\nexport const registerTC = (email: string, password: string): AppThunk => async dispatch => {\r\n    dispatch(setLoadingAC(true))\r\n    dispatch(setErrorAC(null))\r\n    try {\r\n        const register = await authApi.register(email, password)\r\n        dispatch(setIsRegisterSuccessAC(true))\r\n    } catch (e) {\r\n        dispatch(setErrorAC(e.response ? e.response.data.error : e.message))\r\n        dispatch(setIsRegisterSuccessAC(false))\r\n    } finally {\r\n        dispatch(setLoadingAC(false))\r\n    }\r\n\r\n}\r\n\r\nexport type RegistrationReducerActionsType =\r\n    ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof setLoadingAC>\r\n    | ReturnType<typeof setIsRegisterSuccessAC>","export const emailValidator = (email: string) => {\r\n    return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)\r\n}\r\n","export const passwordValidator = (password: string) => {\r\n  return password.length > 6;\r\n};\r\n\r\nexport const matchPasswordValidator = (pwd1: string, pwd2: string) => {\r\n  return pwd1 === pwd2;\r\n};","import React, {useState} from 'react';\r\nimport styles from './Login.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {LoginStateType, loginTC} from '../../store/login-reducer';\r\nimport {AppStateType} from '../../store/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {emailValidator} from '../../utils/validators/email-validator';\r\nimport {passwordValidator} from '../../utils/validators/password-validator';\r\nimport {Alert, Button, Input, Switch} from 'antd';\r\nimport {CheckOutlined, CloseOutlined} from '@ant-design/icons';\r\n\r\nexport const Login: React.VFC = () => {\r\n  const [email, setEmail] = useState<string>('');\r\n  const [pwd, setPwd] = useState<string>('');\r\n  const [remember, setRemember] = useState<boolean>(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const loginStatus = useSelector<AppStateType, LoginStateType>(state => state.login);\r\n\r\n  const loginCallback = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n    dispatch(loginTC(email, pwd, remember));\r\n  };\r\n\r\n  const form: JSX.Element = <div>\r\n    <form className={styles.form}>\r\n      <div className={styles.formGroup}>\r\n        <Input\r\n          disabled={loginStatus.loading}\r\n          type={'email'}\r\n          placeholder=\"Input email\"\r\n          value={email}\r\n          onChange={e => setEmail(e.currentTarget.value)}/>\r\n      </div>\r\n      <div className={styles.formGroup}>\r\n        <Input.Password\r\n          disabled={loginStatus.loading}\r\n          placeholder=\"Input password\"\r\n          value={pwd}\r\n          onChange={e => setPwd(e.currentTarget.value)}/>\r\n      </div>\r\n      <div className={styles.rememberMeFormGroup}>\r\n        <label\r\n          htmlFor=\"rememberMe\"\r\n          className={styles.fieldLabel}>Запомнить меня</label>\r\n        <Switch\r\n          disabled={loginStatus.loading}\r\n          checkedChildren={<CheckOutlined/>}\r\n          unCheckedChildren={<CloseOutlined/>}\r\n          defaultChecked={false}\r\n          onChange={(checked) => setRemember(checked)}\r\n        />\r\n      </div>\r\n      <Button\r\n        type={'primary'}\r\n        className={styles.button}\r\n        onClick={loginCallback}\r\n        loading={loginStatus.loading}\r\n        disabled={!emailValidator(email) || !passwordValidator(pwd)}>\r\n        Войти\r\n      </Button>\r\n      {!emailValidator(email) && <span className={styles.error}>Некорректный email</span>}\r\n      {!passwordValidator(pwd) && <span className={styles.error}>Короткий пароль</span>}\r\n    </form>\r\n    {loginStatus.error && <Alert\r\n        message={loginStatus.error}\r\n        type=\"error\"\r\n        closable\r\n    />}\r\n  </div>;\r\n\r\n  return (\r\n    <>\r\n      {form}\r\n    </>\r\n  );\r\n};","import React from 'react';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {Login} from '../components/Login/Login';\r\nimport styles from './LoginPage.module.css';\r\nimport commonStyles from '../components/common/commonStyle.module.css';\r\nimport {PATH} from '../routes/Routes';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../store/store';\r\n\r\ntype PropsType = {};\r\n\r\nexport const LoginPage: React.FC<PropsType> = props => {\r\n\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={'/profile'}/>;\r\n  }\r\n\r\n  return (\r\n    <div className={commonStyles.fullscreen}>\r\n      <div className={styles.loginPage}>\r\n        <h2 className={styles.h2}>Выполните вход в наше суперское приложение</h2>\r\n        <h4 className={styles.h4}>Вы можете зарегистрироваться <NavLink to={PATH.REGISTER}>здесь</NavLink></h4>\r\n        <h4 className={styles.h4}>Если Вы забыли свой пароль, то\r\n                                  Вам <NavLink to={PATH.PASS_RECOVERY}>сюда</NavLink></h4>\r\n        <Login/>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import {AppActionsType, AppThunk} from './store';\r\nimport {authApi} from '../utils/authApi';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\n\r\nexport enum PASS_RECOVERY_ACTION_TYPE {\r\n  SET_ERROR = 'PASS_RECOVERY/SET_ERROR',\r\n  SET_LOADING = 'PASS_RECOVERY/SET_LOADING',\r\n  SET_IS_EMAIL_SEND = 'PASS_RECOVERY/SET_IS_EMAIL_SEND'\r\n}\r\n\r\nexport type PassRecoveryStateType = {\r\n  error: null | string\r\n  loading: boolean\r\n  isEmailSend: boolean\r\n}\r\n\r\nconst initialState: PassRecoveryStateType = {\r\n  error: null,\r\n  loading: false,\r\n  isEmailSend: false\r\n};\r\n\r\nexport const passRecoveryReducer = (state = initialState, action: AppActionsType): PassRecoveryStateType => {\r\n  switch (action.type) {\r\n    case PASS_RECOVERY_ACTION_TYPE.SET_ERROR:\r\n    case PASS_RECOVERY_ACTION_TYPE.SET_LOADING:\r\n    case PASS_RECOVERY_ACTION_TYPE.SET_IS_EMAIL_SEND:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case APP_ACTION_TYPE.CLEAR_STORE: {\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: PASS_RECOVERY_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\nconst setIsEmailSend = (isEmailSend: boolean) => {\r\n  return {type: PASS_RECOVERY_ACTION_TYPE.SET_IS_EMAIL_SEND as const, payload: {isEmailSend}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: PASS_RECOVERY_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\nexport const passRecoveryTC = (email: string): AppThunk => async dispatch => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    const changePassResponse = await authApi.passRecovery(email);\r\n    dispatch(setIsEmailSend(true));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n\r\n};\r\n\r\nexport type PassRecoveryReducerActionsType =\r\n  ReturnType<typeof setErrorAC>\r\n  | ReturnType<typeof setLoadingAC>\r\n  | ReturnType<typeof setIsEmailSend>","import React from 'react';\r\nimport styles from './Spinner.module.css';\r\n\r\ntype PropsType = {};\r\n\r\nexport const Spinner: React.FC<PropsType> = props => {\r\n  return (\r\n    <div className={styles.loader}>\r\n      Ждите отстоя пива\r\n    </div>\r\n  );\r\n};","import React, {ChangeEvent, useState} from 'react';\r\nimport styles from './Register.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {InitialStateType, registerTC} from '../../store/registration-reducer';\r\nimport {AppStateType} from '../../store/store';\r\nimport {emailValidator} from '../../utils/validators/email-validator';\r\nimport {passwordValidator} from '../../utils/validators/password-validator';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Spinner} from '../spinner/Spinner';\r\n\r\nexport const Register: React.VFC = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const registerState = useSelector<AppStateType, InitialStateType>(state => state.registration);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    dispatch(registerTC(email, password));\r\n    setPassword('');\r\n  };\r\n\r\n  if (registerState.isRegisterSuccess) {\r\n    return <Redirect to={'/login'}/>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.registerPage}>\r\n      <div className={styles.registerContainer}>\r\n        {!registerState.loading ? <div className={styles.registerForm}>\r\n            <input\r\n              value={email}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={changeEmail}\r\n              placeholder={'email'}/>\r\n            <input\r\n              value={password}\r\n              type=\"password\"\r\n              onChange={changePassword}\r\n              placeholder={'password'}/>\r\n            {registerState.error && <div style={{color: 'red'}}>{registerState.error}</div>}\r\n            <button\r\n              disabled={!emailValidator(email) || !passwordValidator(password)}\r\n              onClick={onSubmit}>Register\r\n            </button>\r\n            {!emailValidator(email) && <span style={{color: 'red'}}>Неверный email</span>}\r\n            {!passwordValidator(password) && <span style={{color: 'red'}}>Пароль должен содержать более 6 символов</span>}\r\n          </div>\r\n          :\r\n          <Spinner/>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {Register} from \"../components/register/Register\";\r\n\r\n\r\ntype PropsType = {};\r\n\r\nexport const RegisterPage: React.FC<PropsType> = props => {\r\n    return (\r\n        <div>\r\n            <h2>Register Page</h2>\r\n            <Register/>\r\n        </div>\r\n    );\r\n};","import React, {useEffect} from 'react';\r\nimport styles from './Profile.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\nimport {LoginResponseType} from '../../utils/authApi';\r\n\r\ntype PropsType = {};\r\n\r\nexport const Profile: React.FC<PropsType> = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const authData = useSelector<AppStateType, LoginResponseType | {}>(state => state.appStatus.authData);\r\n\r\n  return (\r\n    <div>\r\n      <pre>{JSON.stringify(authData, null, 2)}</pre>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {Profile} from '../components/profile/Profile';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../store/store';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\ntype PropsType = {};\r\n\r\nexport const ProfilePage: React.FC<PropsType> = props => {\r\n\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={'/login'}/>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Profile Page</h2>\r\n      <Profile/>\r\n    </div>\r\n  );\r\n};","import {authApi} from '../utils/authApi';\r\nimport {AppActionsType, AppThunk} from './store';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\n\r\nenum PASS_CHANGE_ACTION_TYPE {\r\n  SET_ERROR = 'PASS_CHANGE/SET_ERROR',\r\n  SET_LOADING = 'PASS_CHANGE/SET_LOADING',\r\n  SET_IS_CHANGED_PASS = 'PASS_CHANGE/SET_IS_CHANGED_PASS'\r\n}\r\n\r\nexport type PassChangeStateType = {\r\n  error: null | string\r\n  loading: boolean\r\n  isChangedPass: boolean\r\n}\r\n\r\nconst initialState: PassChangeStateType = {\r\n  error: null,\r\n  loading: false,\r\n  isChangedPass: false\r\n};\r\n\r\nexport const passChangeReducer = (state = initialState, action: AppActionsType): PassChangeStateType => {\r\n  switch (action.type) {\r\n    case PASS_CHANGE_ACTION_TYPE.SET_ERROR:\r\n    case PASS_CHANGE_ACTION_TYPE.SET_LOADING:\r\n    case PASS_CHANGE_ACTION_TYPE.SET_IS_CHANGED_PASS:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case APP_ACTION_TYPE.CLEAR_STORE: {\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Action creators\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: PASS_CHANGE_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\nconst setIsChangedPass = (isChangedPass: boolean) => {\r\n  return {type: PASS_CHANGE_ACTION_TYPE.SET_IS_CHANGED_PASS as const, payload: {isChangedPass}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: PASS_CHANGE_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\nexport const changePassTC = (newPassword: string, token: string): AppThunk => async dispatch => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    const changePassResponse = await authApi.setNewPassword(newPassword, token);\r\n    dispatch(setIsChangedPass(true));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n\r\n};\r\n\r\nexport type PassChangeReducerActionsType =\r\n  ReturnType<typeof setErrorAC>\r\n  | ReturnType<typeof setLoadingAC>\r\n  | ReturnType<typeof setIsChangedPass>","import React, {useState} from 'react';\r\nimport styles from './PasswordRecovery.module.css';\r\nimport {authApi, InfoResponseType} from '../../utils/authApi';\r\nimport * as buffer from 'buffer';\r\nimport {emailValidator} from '../../utils/validators/email-validator';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../../routes/Routes';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\nimport {PassChangeStateType} from '../../store/pass-change-reducer';\r\nimport {PassRecoveryStateType, passRecoveryTC} from '../../store/pass-recovery-reducer';\r\n\r\ntype PropsType = {};\r\n\r\nexport const PasswordRecovery: React.FC<PropsType> = props => {\r\n\r\n  const [email, setEmail] = useState<string>('');\r\n\r\n  const dispatch = useDispatch();\r\n  const recoveryStatus = useSelector<AppStateType, PassRecoveryStateType>(state => state.passRecovery);\r\n\r\n  if (recoveryStatus.isEmailSend) {\r\n    return (\r\n      <div>\r\n        <span\r\n          style={{\r\n            color: 'blue',\r\n            textAlign: 'center'\r\n          }}>Всё отлично, иди проверяй почту, и жми <NavLink to={PATH.LOGIN}>ссылку</NavLink></span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.passRecovery}>\r\n      <h3>Форма восстановление пароля</h3>\r\n      {!recoveryStatus.loading\r\n        ? <div className={styles.recoveryForm}>\r\n          <label htmlFor=\"email\">Введите ваш email:</label>\r\n          <input\r\n            type=\"email\"\r\n            name={'email'}\r\n            value={email}\r\n            onChange={e => setEmail(e.currentTarget.value)}/>\r\n          <button\r\n            onClick={() => dispatch(passRecoveryTC(email))}\r\n            disabled={!emailValidator(email)}>Отправить\r\n          </button>\r\n        </div>\r\n        : <span style={{textAlign: 'center'}}>Отправка....</span>}\r\n      {recoveryStatus.error && <span style={{color: 'red', textAlign: 'center'}}>{recoveryStatus.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {PasswordRecovery} from '../components/pass-recovery/PasswordRecovery';\r\n\r\ntype PropsType = {};\r\n\r\nexport const PassRecoveryPage: React.FC<PropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Password Recovery Page</h2>\r\n      <PasswordRecovery/>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport styles from './TestComponent.module.css';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\n\r\nexport const TestComponent: React.VFC = () => {\r\n\r\n  const allReducerData = useSelector<AppStateType, AppStateType>(state => state);\r\n  const elements = Object.entries(allReducerData).map(elem => {\r\n    return <div key={elem[0]}>\r\n      <h5>{elem[0]}:</h5>\r\n      <pre>{JSON.stringify(elem[1], null, 2)}</pre>\r\n    </div>;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h3>All reducer data</h3>\r\n      {elements}\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {TestComponent} from '../components/test-component/TestComponent';\r\nimport {AppStateType} from '../store/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\n\r\ntype PropsType = {};\r\n\r\nexport const TestPage: React.FC<PropsType> = props => {\r\n\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={'/login'}/>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Test Page</h2>\r\n      <TestComponent/>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport styles from './NotFound.module.css';\r\nimport img404 from './404.png';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype PropsType = {};\r\n\r\nexport const NotFound: React.FC<PropsType> = props => {\r\n\r\n  return (\r\n    <div className={styles.notFound}>\r\n      <div className={styles.rotate}>\r\n        <span>404</span>\r\n      </div>\r\n      <NavLink to={'/test'}>\r\n        На главную\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {NotFound} from '../components/page404/NotFound';\r\n\r\ntype PropsType = {};\r\n\r\nexport const Page404: React.FC<PropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Page 404</h2>\r\n      <NotFound/>\r\n    </div>\r\n  );\r\n};","import {AppActionsType, AppThunk} from './store';\r\nimport {CardPackType, cardPacksApi} from '../utils/cardPacksApi';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\n\r\nexport enum CARD_PACKS_ACTION_TYPE {\r\n  SET_ERROR = 'CARD_PACKS/SET_ERROR',\r\n  SET_LOADING = 'CARD_PACKS/SET_LOADING',\r\n  SET_PAGE = 'CARD_PACKS/SET_PAGE',\r\n  SET_PAGE_COUNT = 'CARD_PACKS/SET_PAGE_COUNT',\r\n  SET_CARD_PACKS = 'CARD_PACKS/SET_CARD_PACKS',\r\n  SET_CARD_PACKS_TOTAL_COUNT = 'CARD_PACKS/SET_CARD_PACKS_TOTAL_COUNT',\r\n}\r\n\r\nexport type CardPacksStateType = {\r\n  error: null | string\r\n  loading: boolean\r\n  cardPacks: Array<CardPackType>\r\n  cardPacksTotalCount: number\r\n  maxCardsCount: number\r\n  minCardsCount: number\r\n  page: number\r\n  pageCount: number\r\n}\r\n\r\nconst initialState: CardPacksStateType = {\r\n  error: null,\r\n  loading: false,\r\n  cardPacks: [],\r\n  cardPacksTotalCount: 0,\r\n  maxCardsCount: 0,\r\n  minCardsCount: 0,\r\n  pageCount: 10,\r\n  page: 1\r\n};\r\n\r\nexport const cardPacksReducer = (state = initialState, action: AppActionsType): CardPacksStateType => {\r\n  switch (action.type) {\r\n    case CARD_PACKS_ACTION_TYPE.SET_ERROR:\r\n    case CARD_PACKS_ACTION_TYPE.SET_LOADING:\r\n    case CARD_PACKS_ACTION_TYPE.SET_CARD_PACKS:\r\n    case CARD_PACKS_ACTION_TYPE.SET_CARD_PACKS_TOTAL_COUNT:\r\n    case CARD_PACKS_ACTION_TYPE.SET_PAGE:\r\n    case CARD_PACKS_ACTION_TYPE.SET_PAGE_COUNT:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case APP_ACTION_TYPE.CLEAR_STORE:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setCardPacks = (cardPacks: Array<CardPackType>) => {\r\n  return {\r\n    type: CARD_PACKS_ACTION_TYPE.SET_CARD_PACKS as const, payload: {cardPacks}\r\n  };\r\n};\r\n\r\nexport const setPage = (page: number) => {\r\n  return {\r\n    type: CARD_PACKS_ACTION_TYPE.SET_PAGE as const, payload: {page}\r\n  };\r\n};\r\n\r\nconst setCardPacksTotalCount = (cardPacksTotalCount: number) => {\r\n  return {\r\n    type: CARD_PACKS_ACTION_TYPE.SET_CARD_PACKS_TOTAL_COUNT as const, payload: {cardPacksTotalCount}\r\n  };\r\n};\r\n\r\nexport const setPageCount = (pageCount: number) => {\r\n  return {\r\n    type: CARD_PACKS_ACTION_TYPE.SET_PAGE_COUNT as const, payload: {pageCount}\r\n  };\r\n};\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: CARD_PACKS_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: CARD_PACKS_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\nexport const setCardPacksTC = (pageCount: number, page: number, user_id?: string): AppThunk => async dispatch => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  dispatch(setCardPacks([]));\r\n\r\n  try {\r\n    const response = await cardPacksApi.getCardPacks(pageCount, page, user_id);\r\n    dispatch(setCardPacks(response.data.cardPacks));\r\n    dispatch(setCardPacksTotalCount(response.data.cardPacksTotalCount));\r\n\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const deleteCardPackTC = (cardPackId: string): AppThunk => async dispatch => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    await cardPacksApi.deleteCardPack(cardPackId);\r\n    dispatch(setPageCount(initialState.pageCount));\r\n    dispatch(setPage(initialState.page));\r\n    dispatch(setCardPacksTC(initialState.pageCount, initialState.page));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport type CardPacksReducerActionsType =\r\n  ReturnType<typeof setErrorAC>\r\n  | ReturnType<typeof setLoadingAC>\r\n  | ReturnType<typeof setCardPacks>\r\n  | ReturnType<typeof setPage>\r\n  | ReturnType<typeof setPageCount>\r\n  | ReturnType<typeof setCardPacksTotalCount>","import React, {ChangeEvent, useState} from 'react';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport styles from './PassChange.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {changePassTC, PassChangeStateType} from '../../store/pass-change-reducer';\r\nimport {AppStateType} from '../../store/store';\r\nimport {matchPasswordValidator, passwordValidator} from '../../utils/validators/password-validator';\r\nimport {Spinner} from '../spinner/Spinner';\r\n\r\ntype PropsType = {};\r\n\r\nexport const SetNewPass: React.FC<PropsType> = props => {\r\n\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [newPassword2, setConfirmPassword] = useState('');\r\n\r\n  const statePassReducer = useSelector<AppStateType, PassChangeStateType>(state => state.passChange);\r\n\r\n  const dispatch = useDispatch();\r\n  const {token} = useParams<{token: string}>();\r\n  const changePass = () => {\r\n    dispatch(changePassTC(newPassword, token));\r\n  };\r\n\r\n  const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setNewPassword(e.currentTarget.value);\r\n  };\r\n  const changeConfirmPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setConfirmPassword(e.currentTarget.value);\r\n  };\r\n\r\n  if (statePassReducer.isChangedPass) {\r\n    return <Redirect to={'/login'}/>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.passChange}>\r\n      <div className={styles.passChangeContainer}>\r\n        {!statePassReducer.loading ? <div className={styles.passChangeForm}>\r\n            <span>Смена пароля</span>\r\n            Введите новый пароль<input\r\n            type=\"password\"\r\n            value={newPassword}\r\n            onChange={changePassword}/>\r\n            Подтвердите новый пароль<input\r\n            type=\"password\"\r\n            value={newPassword2}\r\n            onChange={changeConfirmPassword}/>\r\n            <button\r\n              disabled={!passwordValidator(newPassword) || !matchPasswordValidator(newPassword, newPassword2)}\r\n              onClick={changePass}>Отправить\r\n            </button>\r\n            {!passwordValidator(newPassword) &&\r\n            <span style={{color: 'red'}}>Пароль должен содержать более 6 символов</span>}\r\n            {!matchPasswordValidator(newPassword, newPassword2) &&\r\n            <span style={{color: 'red'}}>Пароли не совпадают</span>}\r\n          </div>\r\n          :\r\n          <Spinner/>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {SetNewPass} from '../components/set-new-pass/SetNewPass';\r\n\r\ntype PropsType = {};\r\n\r\nexport const SetNewPasswordPage: React.FC<PropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Password Change Page</h2>\r\n      <SetNewPass/>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport styles from './CardPack.module.css';\r\nimport {CardPackType} from '../../utils/cardPacksApi';\r\nimport {Button, Popconfirm} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n  cardPack: CardPackType\r\n  onDelete: () => void\r\n};\r\n\r\nexport const CardPack: React.FC<PropsType> = props => {\r\n  const {cardPack, onDelete} = props;\r\n\r\n  return (\r\n    <div className={styles.card}>\r\n      <div className={styles.cardHeader}>\r\n        <h3 style={{textAlign: 'center', textTransform: 'uppercase'}}>{cardPack.name}</h3>\r\n      </div>\r\n      <div className={styles.ratingCount}>\r\n        <div className={styles.cardsCount}>\r\n          <h4>Cards count:</h4>\r\n          <span>{cardPack.cardsCount}</span>\r\n        </div>\r\n        <div className={styles.rating}>\r\n          <h4>Rating:</h4>\r\n          <span>{cardPack.rating}</span>\r\n        </div>\r\n      </div>\r\n      <div className={styles.ratingCount}>\r\n        <div className={styles.cardsCount}>\r\n          <h4>Shots:</h4>\r\n          <span>{cardPack.shots}</span>\r\n        </div>\r\n        <div className={styles.rating}>\r\n          <h4>Grade:</h4>\r\n          <span>{cardPack.grade}</span>\r\n        </div>\r\n      </div>\r\n      <div className={styles.actions}>\r\n        <Link to={`/cards/${cardPack._id}`}><Button className={styles.action}>View</Button></Link>\r\n        <Button className={styles.action}>Edit</Button>\r\n        <Popconfirm\r\n          onConfirm={onDelete}\r\n          title={'Точно удалить?'}\r\n          cancelText={'Нет'}\r\n          okText={'Да'}\r\n          placement={'top'}\r\n          cancelButtonProps={{type: 'primary'}}\r\n          okButtonProps={{danger: true}}>\r\n          <Button\r\n            className={styles.action}\r\n            danger>Remove\r\n          </Button>\r\n        </Popconfirm>\r\n      </div>\r\n      <div className={styles.user}>\r\n        <span>{cardPack.user_name}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import axios from 'axios';\r\n\r\nconst LOCAL_URL = 'http://localhost:7542/2.0/';\r\nconst REMOTE_URL = 'https://neko-back.herokuapp.com/2.0';\r\n\r\nconst instance = axios.create({baseURL: LOCAL_URL, withCredentials: true});\r\n\r\nexport const cardPacksApi = {\r\n  getCardPacks(pageCount: number = 10, page: number = 0, userId?: string) {\r\n    return instance.get<CardPacksResponseType>(`/cards/pack?pageCount=${pageCount}&page=${page}${userId ? `&user_id=${userId}` : ''}`);\r\n  }\r\n,\r\n  deleteCardPack(cardPackId: string) {\r\n    return instance.delete('/cards/pack?id=' + cardPackId);\r\n  }\r\n};\r\n\r\nexport type CardPacksResponseType = {\r\n  cardPacks: Array<CardPackType>\r\n  cardPacksTotalCount: number\r\n  maxCardsCount: number\r\n  minCardsCount: number\r\n  page: number\r\n  pageCount: number\r\n}\r\n\r\nexport type CardPackType = {\r\n  _id: string\r\n  user_id: string\r\n  user_name: string\r\n  name: string\r\n  path: string\r\n  cardsCount: number\r\n  grade: number\r\n  shots: number\r\n  rating: number\r\n  type: 'pack' | 'folder'\r\n  created: string\r\n  updated: string\r\n  __v: string\r\n}","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {LoginPage} from '../Pages/LoginPage';\r\nimport {RegisterPage} from '../Pages/RegisterPage';\r\nimport {ProfilePage} from '../Pages/ProfilePage';\r\nimport {PassRecoveryPage} from '../Pages/PassRecoveryPage';\r\nimport {TestPage} from '../Pages/TestPage';\r\nimport {Page404} from '../Pages/Page404';\r\nimport {SetNewPasswordPage} from '../Pages/SetNewPasswordPage';\r\nimport {CardPacksPage} from '../Pages/CardPacksPage';\r\nimport {CardsPage} from '../Pages/CardsPage';\r\n\r\nexport enum PATH {\r\n  LOGIN = '/login',\r\n  REGISTER = '/register',\r\n  PROFILE = '/profile',\r\n  CARD_PACKS = '/card-packs',\r\n  CARDS = '/cards',\r\n  PAGE404 = '/404',\r\n  PASS_RECOVERY = '/password-recovery',\r\n  TEST = '/test',\r\n  SET_NEW_PASSWORD = '/set-new-password'\r\n}\r\n\r\nexport const Routes: React.VFC = () => {\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route\r\n          path={'/'}\r\n          exact\r\n          render={() => <Redirect to={PATH.TEST}/>}\r\n        />\r\n        <Route\r\n          path={PATH.LOGIN}\r\n          exact\r\n          render={() => <LoginPage/>}/>\r\n        <Route\r\n          path={PATH.REGISTER}\r\n          exact\r\n          render={() => <RegisterPage/>}/>\r\n        <Route\r\n          path={PATH.PROFILE}\r\n          exact\r\n          render={() => <ProfilePage/>}/>\r\n        <Route\r\n          path={PATH.PASS_RECOVERY}\r\n          exact\r\n          render={() => <PassRecoveryPage/>}/>\r\n        <Route\r\n          path={PATH.CARD_PACKS}\r\n          exact\r\n          render={() => <CardPacksPage/>}/>\r\n        <Route\r\n          path={PATH.SET_NEW_PASSWORD + '/:token'}\r\n          exact\r\n          render={() => <SetNewPasswordPage/>}/>\r\n        <Route\r\n          path={PATH.CARDS + '/:cardPackId'}\r\n          exact\r\n          render={() => <CardsPage/>}/>\r\n        <Route\r\n          path={PATH.TEST}\r\n          exact\r\n          render={() => <TestPage/>}/>\r\n        <Route render={() => <Page404/>}/>\r\n      </Switch>\r\n    </>\r\n  );\r\n};","import React from 'react';\r\nimport styles from './CardPacks.module.css';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button} from 'antd';\r\nimport {CardPackType} from '../../utils/cardPacksApi';\r\nimport {CardPack} from './CardPack';\r\nimport {useDispatch} from 'react-redux';\r\nimport {deleteCardPackTC} from '../../store/card-packs-reducer';\r\n\r\ntype PropsType = {\r\n  cardPacks: Array<CardPackType>\r\n};\r\n\r\nexport const CardPacks: React.VFC<PropsType> = props => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {cardPacks} = props;\r\n\r\n    const deleteCardPack = (cardPackId: string) => {\r\n      dispatch(deleteCardPackTC(cardPackId));\r\n    };\r\n\r\n    const tableRows: Array<JSX.Element> = cardPacks.map((cp, index) => {\r\n      return (\r\n        <tr\r\n          className={styles.trow}\r\n          key={cp._id}>\r\n          <td className={styles.tableCell}>{index + 1}</td>\r\n          <td className={styles.tableCell}>{cp.name}</td>\r\n          <td className={styles.tableCell}>{cp.cardsCount}</td>\r\n          <td className={styles.tableCell}>{cp.grade}</td>\r\n          <td className={styles.tableCell}>{cp.rating}</td>\r\n          <td className={styles.tableCell}>{cp.shots}</td>\r\n          <td className={styles.tableCell}>\r\n            <Link to={`/cards/${cp._id}`}>\r\n              <Button type={'link'}>Просмотр</Button>\r\n            </Link>\r\n            <Button\r\n              type={'link'}\r\n              danger>Удалить</Button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className={styles.cardsContainer}>\r\n        {cardPacks.map(cp => <CardPack\r\n          cardPack={cp}\r\n          onDelete={() => deleteCardPack(cp._id)}\r\n          key={cp._id}/>)}\r\n      </div>\r\n      /*<table className={styles.table}>\r\n       <thead className={styles.thead}>\r\n       <tr className={styles.headRow}>\r\n       <th className={styles.headCell}>#</th>\r\n       <th className={styles.headCell}>Name</th>\r\n       <th className={styles.headCell}>Cards count</th>\r\n       <th className={styles.headCell}>Grade</th>\r\n       <th className={styles.headCell}>Rating</th>\r\n       <th className={styles.headCell}>Shots</th>\r\n       <th className={styles.headCell}>Action</th>\r\n       </tr>\r\n       </thead>\r\n       <tbody className={styles.tableBody}>{tableRows}</tbody>\r\n       </table>*/\r\n    );\r\n  }\r\n;\r\n;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport styles from './CardPacksPage.module.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from '../store/store';\r\nimport {CardPacks} from '../components/card-packs/CardPacks';\r\nimport {Pagination, Spin, Switch} from 'antd';\r\nimport {CardPacksStateType, setCardPacksTC, setPage, setPageCount} from '../store/card-packs-reducer';\r\nimport {CheckOutlined, CloseOutlined} from '@ant-design/icons';\r\n\r\ntype PropsType = {};\r\n\r\nexport const CardPacksPage: React.FC<PropsType> = props => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n  const myId = useSelector<AppStateType, string>(state => state.appStatus.authData._id ?? '');\r\n\r\n  const {\r\n    error,\r\n    loading,\r\n    cardPacks,\r\n    cardPacksTotalCount,\r\n    page,\r\n    pageCount\r\n  } = useSelector<AppStateType, CardPacksStateType>(state => state.cardPacks);\r\n\r\n  const [onlyMy, setOnlyMy] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(setCardPacksTC(pageCount, page, onlyMy ? myId : undefined));\r\n  }, [pageCount, page, onlyMy, myId, dispatch]);\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={'/login'}/>;\r\n  }\r\n\r\n  const onChangeHandler = (page: number) => {\r\n    dispatch(setPage(page));\r\n  };\r\n\r\n  const onShowSizeChangeHandler = (current: number, size: number) => {\r\n    dispatch(setPageCount(size));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Card Packs Page</h2>\r\n      <div className={styles.options}><Pagination\r\n        onShowSizeChange={onShowSizeChangeHandler}\r\n        onChange={onChangeHandler}\r\n        defaultCurrent={1}\r\n        current={page}\r\n        pageSize={pageCount}\r\n        disabled={loading}\r\n        showQuickJumper\r\n        total={cardPacksTotalCount}/>\r\n        <label\r\n          htmlFor=\"rememberMe\"\r\n        >Только мои колоды</label>\r\n        <Switch\r\n          disabled={loading}\r\n          checkedChildren={<CheckOutlined/>}\r\n          unCheckedChildren={<CloseOutlined/>}\r\n          defaultChecked={false}\r\n          checked={onlyMy}\r\n          onChange={(checked) => setOnlyMy(checked)}\r\n        /></div>\r\n      <div style={{marginTop: '25px', textAlign: 'center'}}>{loading\r\n        ? <Spin\r\n          size={'large'}\r\n          tip={'Loading...'}/>\r\n        : <CardPacks cardPacks={cardPacks}/> || error\r\n      }</div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {AppStateType} from '../store/store';\r\n\r\ntype PropsType = {};\r\n\r\nexport const CardsPage: React.FC<PropsType> = props => {\r\n\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n  const {cardPackId} = useParams<{cardPackId: string}>();\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={'/login'}/>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cards Page</h2>\r\n      <span>Card pack id: {cardPackId}</span>\r\n    </div>\r\n  );\r\n};","import {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../../routes/Routes';\r\nimport React from 'react';\r\nimport styles from './Navbar.module.css';\r\nimport commonStyles from '../common/commonStyle.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\nimport {LoginStateType, logoutTC} from '../../store/login-reducer';\r\nimport {Button} from 'antd';\r\n\r\nexport function Navbar() {\r\n\r\n  const loginStatus = useSelector<AppStateType, LoginStateType>(state => state.login);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logout = () => {\r\n    dispatch(logoutTC());\r\n  };\r\n\r\n  return <nav className={styles.navbar}>\r\n    <div className={commonStyles.container}>\r\n      <ul>\r\n        <li>\r\n          <Button\r\n            type={'link'}\r\n            onClick={logout}\r\n            loading={loginStatus.loading}\r\n            disabled={loginStatus.loading}>Logout\r\n          </Button>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to={PATH.PROFILE}\r\n            activeClassName={styles.linkActive}>\r\n            Profile\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to={PATH.CARD_PACKS}\r\n            activeClassName={styles.linkActive}>\r\n            Card packs\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li>\r\n          <NavLink\r\n            to={PATH.TEST}\r\n            activeClassName={styles.linkActive}>\r\n            Test\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>;\r\n}","import React, {useEffect} from 'react';\r\nimport {Routes} from '../routes/Routes';\r\nimport {Navbar} from './navbar/Navbar';\r\nimport commonStyles from '../components/common/commonStyle.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../store/store';\r\nimport {AppInitializeTC} from '../store/app-reducer';\r\nimport {Spin} from 'antd';\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n  const isInitialized = useSelector<AppStateType, boolean>(state => state.appStatus.isInitialized);\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n\r\n  useEffect(() => {\r\n    if (!isInitialized) {\r\n      dispatch(AppInitializeTC());\r\n    }\r\n    return;\r\n  });\r\n\r\n  return (\r\n    isInitialized\r\n      ? <>\r\n        {isAuth && <Navbar/>}\r\n        <div className={commonStyles.container}>\r\n          <Routes/>\r\n        </div>\r\n      </>\r\n      : <div className={commonStyles.fullscreen}><Spin size={'large'}/></div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {AppActionsType} from './store';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\n\r\ntype StateType = typeof initialState;\r\n\r\nconst initialState = {\r\n  test: 'test'\r\n};\r\n\r\nexport const testReducer = (state: StateType = initialState, action: AppActionsType) => {\r\n  switch (action.type) {\r\n    case APP_ACTION_TYPE.CLEAR_STORE: {\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};","import {APP_ACTION_TYPE} from './app-reducer';\r\n\r\ntype StateType = typeof initialState;\r\n\r\nconst initialState = {};\r\n\r\nexport const profileReducer = (state: StateType = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case APP_ACTION_TYPE.CLEAR_STORE: {\r\n            return initialState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {combineReducers, applyMiddleware} from 'redux';\r\nimport {testReducer} from './test-reducer';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {registrationReducer, RegistrationReducerActionsType} from './registration-reducer';\r\nimport {loginReducer, LoginReducerActionsType} from './login-reducer';\r\nimport {createStore} from 'redux';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {appReducer, AppReducerActionsType} from './app-reducer';\r\nimport {passChangeReducer, PassChangeReducerActionsType} from './pass-change-reducer';\r\nimport {passRecoveryReducer, PassRecoveryReducerActionsType} from './pass-recovery-reducer';\r\nimport {cardPacksReducer, CardPacksReducerActionsType} from './card-packs-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  test: testReducer,\r\n  profile: profileReducer,\r\n  registration: registrationReducer,\r\n  login: loginReducer,\r\n  appStatus: appReducer,\r\n  passChange: passChangeReducer,\r\n  passRecovery: passRecoveryReducer,\r\n  cardPacks: cardPacksReducer\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n// Все экшены нашего приложения, которые можно диспатчить\r\n\r\nexport type AppActionsType =\r\n  AppReducerActionsType\r\n  | LoginReducerActionsType\r\n  | PassChangeReducerActionsType\r\n  | RegistrationReducerActionsType | PassRecoveryReducerActionsType | CardPacksReducerActionsType;\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType,\r\n  AppStateType,\r\n  unknown,\r\n  AppActionsType>\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './store/store';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <App/>\r\n      </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardPack_card__2hCHf\",\"cardHeader\":\"CardPack_cardHeader__3DT-5\",\"ratingCount\":\"CardPack_ratingCount__f6tWY\",\"cardsCount\":\"CardPack_cardsCount__1C66R\",\"rating\":\"CardPack_rating__1AEBW\",\"actions\":\"CardPack_actions__23XhH\",\"user\":\"CardPack_user__3S4Ph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsContainer\":\"CardPacks_cardsContainer__BQQ01\",\"table\":\"CardPacks_table__3TLJr\",\"headRow\":\"CardPacks_headRow__3VxwA\",\"trow\":\"CardPacks_trow__kwGxJ\",\"headCell\":\"CardPacks_headCell__NCiKN\",\"tableCell\":\"CardPacks_tableCell__3FiUm\",\"tableBody\":\"CardPacks_tableBody__18MWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__3SXL1\",\"formGroup\":\"Login_formGroup__2KzGA\",\"rememberMeFormGroup\":\"Login_rememberMeFormGroup__NcE8M\",\"textField\":\"Login_textField__99MwI\",\"fieldLabel\":\"Login_fieldLabel__GASe2\",\"button\":\"Login_button__20qSm\",\"error\":\"Login_error__1yMLH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"commonStyle_container__3XfKk\",\"fullscreen\":\"commonStyle_fullscreen__1cir9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"LoginPage_loginPage__3gr2s\",\"h2\":\"LoginPage_h2__28tJk\",\"h4\":\"LoginPage_h4__3XQ94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1JxPS\",\"linkActive\":\"Navbar_linkActive__2TGIt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerPage\":\"Register_registerPage__ICKdK\",\"registerContainer\":\"Register_registerContainer__tTLrm\",\"registerForm\":\"Register_registerForm__1zF3j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passChange\":\"PassChange_passChange__3AwJP\",\"passChangeContainer\":\"PassChange_passChangeContainer__24DNb\",\"passChangeForm\":\"PassChange_passChangeForm__1Gu7J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passRecovery\":\"PasswordRecovery_passRecovery__nDE1f\",\"recoveryForm\":\"PasswordRecovery_recoveryForm__2b-79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"NotFound_notFound__BKuHp\",\"rotate\":\"NotFound_rotate__2XOrI\"};"],"sourceRoot":""}