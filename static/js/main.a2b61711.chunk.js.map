{"version":3,"sources":["Pages/LoginPage.module.css","components/common/commonStyle.module.css","components/register/Register.module.css","components/set-new-pass/PassChange.module.css","components/navbar/Navbar.module.css","components/pass-recovery/PasswordRecovery.module.css","components/page404/NotFound.module.css","store/app-reducer.ts","utils/api.ts","store/login-reducer.ts","store/registration-reducer.ts","utils/validators/email-validator.ts","utils/validators/password-validator.ts","components/Login/Login.tsx","Pages/LoginPage.tsx","store/passChange-reducer.ts","components/register/Register.tsx","Pages/RegisterPage.tsx","components/profile/Profile.tsx","Pages/ProfilePage.tsx","components/pass-recovery/PasswordRecovery.tsx","Pages/PassRecoveryPage.tsx","components/test-component/TestComponent.tsx","Pages/TestPage.tsx","components/page404/NotFound.tsx","Pages/Page404.tsx","routes/Routes.tsx","components/set-new-pass/SetNewPass.tsx","Pages/SetNewPasswordPage.tsx","components/navbar/Navbar.tsx","components/App.tsx","store/test-reducer.ts","store/profile-reducer.ts","store/store.ts","index.tsx","components/Login/Login.module.css"],"names":["module","exports","ACTION_TYPE","instance","axios","create","baseURL","withCredentials","api","email","reqBody","from","message","post","then","res","data","password","resetPasswordToken","rememberMe","delete","LOGIN_ACTION_TYPE","setIsAuthAC","isAuth","type","SET_IS_AUTH","payload","setAuthDataAC","authData","SET_AUTH_DATA","initialState","isInitialized","error","REGISTRATION_ACTION_TYPE","setErrorAC","SET_ERROR","setLoadingAC","loading","SET_LOADING","emailValidator","test","passwordValidator","length","matchPasswordValidator","pwd1","pwd2","Login","useState","setEmail","pwd","setPwd","remember","setRemember","dispatch","useDispatch","useSelector","state","appStatus","loginStatus","login","errorBlock","className","styles","form","formGroup","htmlFor","fieldLabel","value","onChange","e","currentTarget","textField","id","placeholder","rememberMeFormGroup","checked","button","onClick","event","preventDefault","a","response","loginTC","disabled","to","LoginPage","props","loginPage","h2","h4","PATH","REGISTER","PASS_RECOVERY","PASS_CHANGE_ACTION_TYPE","isRegisterSuccess","setIsRegisterSuccessAC","SET_IS_REGISTER_SUCCESS","Register","registerState","registration","setPassword","registerPage","registerContainer","registerForm","name","style","color","registerTC","RegisterPage","Profile","JSON","stringify","ProfilePage","PasswordRecovery","setLoading","setResponse","setError","sendData","passRecovery","textAlign","recoveryForm","PassRecoveryPage","TestComponent","allReducerData","elements","Object","entries","map","elem","TestPage","NotFound","notFound","rotate","Page404","isChangedPass","SetNewPass","newPassword","setNewPassword","newPassword2","setConfirmPassword","statePassReducer","passChange","token","useParams","passChangeContainer","passChangeForm","SET_IS_CHANGED_PASS","changePassTC","SetNewPasswordPage","Routes","path","exact","render","TEST","LOGIN","PROFILE","SET_NEW_PASSWORD","Navbar","navbar","commonStyles","container","activeClassName","linkActive","App","useEffect","SET_IS_INITIALIZED","rootReducer","combineReducers","action","profile","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2b61711.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"LoginPage_loginPage__12fQK\",\"h2\":\"LoginPage_h2__3PNlE\",\"h4\":\"LoginPage_h4__qRUOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"commonStyle_container__1-ufD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerPage\":\"Register_registerPage__2OphF\",\"registerContainer\":\"Register_registerContainer__FgRhd\",\"registerForm\":\"Register_registerForm__2y4vV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passChange\":\"PassChange_passChange__Rqi6i\",\"passChangeContainer\":\"PassChange_passChangeContainer__19Lou\",\"passChangeForm\":\"PassChange_passChangeForm__v7GW0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2pC_2\",\"linkActive\":\"Navbar_linkActive__1M-rz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passRecovery\":\"PasswordRecovery_passRecovery__1qSyO\",\"recoveryForm\":\"PasswordRecovery_recoveryForm__dcSc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"NotFound_notFound__3MG8E\",\"rotate\":\"NotFound_rotate__2Uv1K\"};","import {api, LoginResponseType} from '../utils/api';\r\nimport {AppThunk} from './store';\r\n\r\nenum ACTION_TYPE {\r\n  SET_IS_INITIALIZED = 'APP/SET_IS_INITIALIZED',\r\n  SET_IS_AUTH = 'APP/SET_IS_AUTH',\r\n  SET_AUTH_DATA = 'APP/SET_AUTH_DATA',\r\n  SET_ERROR = 'APP/SET_ERROR'\r\n}\r\n\r\n// Action creators\r\nexport const setIsInitializedAC = (isInitialized: boolean) => {\r\n  return {type: ACTION_TYPE.SET_IS_INITIALIZED as const, payload: {isInitialized}};\r\n};\r\n\r\nexport const setIsAuthAC = (isAuth: boolean) => {\r\n  return {\r\n    type: ACTION_TYPE.SET_IS_AUTH as const, payload: {isAuth}\r\n  };\r\n};\r\n\r\nexport const setError = (error: string | null) => {\r\n  return {type: ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\nexport const setAuthDataAC = (authData: LoginResponseType | {}) => {\r\n  return {type: ACTION_TYPE.SET_AUTH_DATA as const, payload: {authData}};\r\n};\r\n// ------------------\r\n\r\n// Thunk creators\r\nexport const AppInitializeTC = (): AppThunk => async dispatch => {\r\n  try {\r\n    const response = await api.me();\r\n    dispatch(setAuthDataAC(response));\r\n    dispatch(setIsAuthAC(true));\r\n  } catch (e) {\r\n    dispatch(setError(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setIsInitializedAC(true));\r\n  }\r\n};\r\n// ------------------\r\n\r\nexport type AppReducerActionsType =\r\n  ReturnType<typeof setIsInitializedAC>\r\n  | ReturnType<typeof setIsAuthAC>\r\n  | ReturnType<typeof setError>\r\n  | ReturnType<typeof setAuthDataAC>\r\n\r\ntype StateType = typeof initialState;\r\n\r\nconst initialState = {\r\n  isInitialized: false,\r\n  isAuth: false,\r\n  authData: {} as {} | LoginResponseType,\r\n  error: null as string | null\r\n};\r\n\r\nexport const appReducer = (state: StateType = initialState, action: AppReducerActionsType): StateType => {\r\n  switch (action.type) {\r\n    case ACTION_TYPE.SET_IS_INITIALIZED:\r\n    case ACTION_TYPE.SET_IS_AUTH:\r\n    case ACTION_TYPE.SET_AUTH_DATA:\r\n      return {...state, ...action.payload};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\n\r\nconst LOCAL_URL = 'http://localhost:7542/2.0/';\r\nconst REMOTE_URL = 'https://neko-back.herokuapp.com/2.0';\r\nconst FROM = 'test-front-admin<test@test.com>';\r\n\r\nconst instance = axios.create({baseURL: REMOTE_URL, withCredentials: true});\r\n\r\nexport const api = {\r\n\r\n  passRecovery(email: string) {\r\n    const htmlBody = `<div style=\"background-color: lime; padding: 15px\">\r\n                       password recovery link: \r\n              <a href=\"https://ewgentgm.github.io/it-incubator-friday-project/#/set-new-password/$token$\">\r\n              link\r\n              </a></div>`;\r\n    const reqBody = {\r\n      email,\r\n      from: FROM,\r\n      message: htmlBody\r\n    };\r\n    return instance.post<InfoResponseType>('/auth/forgot', reqBody).then(res => res.data);\r\n  },\r\n\r\n  setNewPassword(password: string, resetPasswordToken: string) {\r\n    return instance.post<InfoResponseType>('/auth/set-new-password', {password, resetPasswordToken});\r\n  },\r\n\r\n  login(email: string, password: string, rememberMe: boolean = false) {\r\n    return instance.post<LoginResponseType>('/auth/login', {email, password, rememberMe}).then(res => res.data);\r\n  },\r\n\r\n  logout() {\r\n    return instance.delete<InfoResponseType>('/auth/me', {}).then(res => res.data);\r\n  },\r\n\r\n  me() {\r\n    return instance.post<LoginResponseType>('/auth/me', {}).then(res => res.data);\r\n  },\r\n\r\n  register(email: string, password: string) {\r\n    return instance.post<RegisterResponseType>('/auth/register', {email, password}).then(res => res.data);\r\n  }\r\n};\r\n\r\nexport type LoginResponseType = {\r\n  _id: string;\r\n  email: string;\r\n  name: string;\r\n  avatar?: string;\r\n  publicCardPacksCount: number; // количество колод\r\n  created: Date;\r\n  updated: Date;\r\n  isAdmin: boolean;\r\n  verified: boolean; // подтвердил ли почту\r\n  rememberMe: boolean;\r\n  error?: string;\r\n}\r\n\r\nexport type InfoResponseType = {\r\n  info: string\r\n  error?: string\r\n}\r\n\r\ntype RegisterResponseType = {\r\n  addedUser: any\r\n  error?: string\r\n}","import {api} from '../utils/api';\r\nimport {setAuthDataAC, setIsAuthAC} from './app-reducer';\r\nimport {AppThunk} from './store';\r\n\r\nenum LOGIN_ACTION_TYPE {\r\n  SET_ERROR = 'LOGIN/SET_ERROR',\r\n  SET_LOADING = 'LOGIN/SET_LOADING',\r\n}\r\n\r\n// Action creators\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: LOGIN_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: LOGIN_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\n//----------------\r\n\r\n// Thunk creators\r\n\r\nexport const loginTC = (email: string, password: string, remember: boolean): AppThunk => async dispatch => {\r\n  dispatch(setErrorAC(null));\r\n  dispatch(setLoadingAC(true));\r\n  try {\r\n    const res = await api.login(email, password, remember);\r\n    dispatch(setAuthDataAC(res));\r\n    dispatch(setIsAuthAC(true));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const logoutTC = (): AppThunk => async dispatch => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    await api.logout();\r\n    dispatch(setAuthDataAC({}));\r\n    dispatch(setIsAuthAC(false));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport type LoginReducerActionsType = ReturnType<typeof setErrorAC> | ReturnType<typeof setLoadingAC>;\r\n\r\nexport type LoginStateType = {\r\n  error: null | string\r\n  loading: boolean\r\n};\r\n\r\nconst initialState: LoginStateType = {\r\n  error: null,\r\n  loading: false\r\n};\r\n\r\n//---------------\r\n\r\nexport const loginReducer = (state: LoginStateType = initialState, action: LoginReducerActionsType): LoginStateType => {\r\n  switch (action.type) {\r\n    case LOGIN_ACTION_TYPE.SET_ERROR:\r\n    case LOGIN_ACTION_TYPE.SET_LOADING:\r\n      return {\r\n        ...state, ...action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import {api} from \"../utils/api\";\r\nimport {AppThunk} from './store';\r\n\r\nenum REGISTRATION_ACTION_TYPE {\r\n    SET_ERROR = 'REGISTRATION/SET_ERROR',\r\n    SET_LOADING = 'REGISTRATION/SET_LOADING',\r\n    SET_IS_REGISTER_SUCCESS = 'REGISTRATION/SET_IS_REGISTER_SUCCESS'\r\n}\r\n\r\nexport type InitialStateType = {\r\n    error: null | string\r\n    loading: boolean\r\n    isRegisterSuccess: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    error: null,\r\n    loading: false,\r\n    isRegisterSuccess: false\r\n};\r\n\r\nexport const registrationReducer = (state = initialState, action: RegistrationReducerActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case REGISTRATION_ACTION_TYPE.SET_ERROR:\r\n        case REGISTRATION_ACTION_TYPE.SET_LOADING:\r\n        case REGISTRATION_ACTION_TYPE.SET_IS_REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action creators\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n    return {type: REGISTRATION_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\nconst setIsRegisterSuccessAC = (isRegisterSuccess: boolean) => {\r\n    return {type: REGISTRATION_ACTION_TYPE.SET_IS_REGISTER_SUCCESS as const, payload: {isRegisterSuccess}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n    return {type: REGISTRATION_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\nexport const registerTC = (email: string, password: string): AppThunk => async dispatch => {\r\n    dispatch(setLoadingAC(true))\r\n    dispatch(setErrorAC(null))\r\n    try {\r\n        const register = await api.register(email, password)\r\n        dispatch(setIsRegisterSuccessAC(true))\r\n    } catch (e) {\r\n        dispatch(setErrorAC(e.response ? e.response.data.error : e.message))\r\n        dispatch(setIsRegisterSuccessAC(false))\r\n    } finally {\r\n        dispatch(setLoadingAC(false))\r\n    }\r\n\r\n}\r\n\r\nexport type RegistrationReducerActionsType =\r\n    ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof setLoadingAC>\r\n    | ReturnType<typeof setIsRegisterSuccessAC>","export const emailValidator = (email: string) => {\r\n    return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)\r\n}\r\n","export const passwordValidator = (password: string) => {\r\n  return password.length > 6;\r\n};\r\n\r\nexport const matchPasswordValidator = (pwd1: string, pwd2: string) => {\r\n  return pwd1 === pwd2;\r\n};","import React, {useState} from 'react';\r\nimport styles from './Login.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {LoginStateType, loginTC} from '../../store/login-reducer';\r\nimport {AppStateType} from '../../store/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {emailValidator} from '../../utils/validators/email-validator';\r\nimport {passwordValidator} from '../../utils/validators/password-validator';\r\n\r\nexport const Login: React.VFC = () => {\r\n    const [email, setEmail] = useState<string>('');\r\n    const [pwd, setPwd] = useState<string>('');\r\n    const [remember, setRemember] = useState<boolean>(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n    const loginStatus = useSelector<AppStateType, LoginStateType>(state => state.login);\r\n\r\n    const loginCallback = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      event.preventDefault();\r\n      dispatch(loginTC(email, pwd, remember));\r\n      setPwd('');\r\n    };\r\n\r\n    const errorBlock: JSX.Element = <div className={styles.error}>{loginStatus.error}</div>;\r\n\r\n    const form: JSX.Element = <div>\r\n      <form className={styles.form}>\r\n        <div className={styles.formGroup}>\r\n          <label\r\n            htmlFor=\"email\"\r\n            className={styles.fieldLabel}>Введите email</label>\r\n          <input\r\n            value={email}\r\n            onChange={e => setEmail(e.currentTarget.value)}\r\n            className={styles.textField}\r\n            id={'email'}\r\n            type=\"email\"\r\n            placeholder={'email'}/>\r\n        </div>\r\n        <div className={styles.formGroup}>\r\n          <label\r\n            htmlFor=\"password\"\r\n            className={styles.fieldLabel}>Введите пароль</label>\r\n          <input\r\n            value={pwd}\r\n            onChange={e => setPwd(e.currentTarget.value)}\r\n            className={styles.textField}\r\n            id={'password'}\r\n            type=\"password\"\r\n            placeholder={'password'}/>\r\n        </div>\r\n        <div className={styles.rememberMeFormGroup}>\r\n          <label\r\n            htmlFor=\"rememberMe\"\r\n            className={styles.fieldLabel}>Запомнить меня</label>\r\n          <input\r\n            checked={remember}\r\n            onChange={e => setRemember(e.currentTarget.checked)}\r\n            id={'rememberMe'}\r\n            type=\"checkbox\"/>\r\n        </div>\r\n        <button\r\n          className={styles.button}\r\n          onClick={loginCallback}\r\n          disabled={!emailValidator(email) || !passwordValidator(pwd)}>Войти\r\n        </button>\r\n        {!emailValidator(email) && <span className={styles.error}>Некорректный email</span>}\r\n        {!passwordValidator(pwd) && <span className={styles.error}>Короткий пароль</span>}\r\n      </form>\r\n    </div>;\r\n\r\n    if (isAuth) {\r\n      return <Redirect to={'/profile'}/>;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {loginStatus.loading\r\n          ? <span>Ждите отстоя пива...</span>\r\n          : form}\r\n        {loginStatus.error && errorBlock}\r\n      </>\r\n    );\r\n  }\r\n;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Login} from '../components/Login/Login';\r\nimport styles from './LoginPage.module.css';\r\nimport {PATH} from '../routes/Routes';\r\n\r\ntype PropsType = {};\r\n\r\nexport const LoginPage: React.FC<PropsType> = props => {\r\n  return (\r\n    <div className={styles.loginPage}>\r\n      <h2 className={styles.h2}>Выполните вход в наше суперское приложение</h2>\r\n      <h4 className={styles.h4}>Вы можете зарегистрироваться <NavLink to={PATH.REGISTER}>здеся</NavLink></h4>\r\n      <h4 className={styles.h4}>Если ты бестолочь и забыл свой пароль, то\r\n                                тебе <NavLink to={PATH.PASS_RECOVERY}>сюда</NavLink></h4>\r\n      <Login/>\r\n    </div>\r\n  );\r\n};","import {Dispatch} from 'react';\r\nimport {api} from '../utils/api';\r\nimport {AppThunk} from './store';\r\n\r\nenum PASS_CHANGE_ACTION_TYPE {\r\n  SET_ERROR = 'PASS_CHANGE/SET_ERROR',\r\n  SET_LOADING = 'PASS_CHANGE/SET_LOADING',\r\n  SET_IS_CHANGED_PASS = 'PASS_CHANGE/SET_IS_CHANGED_PASS'\r\n}\r\n\r\nexport type PassChangeInitialStateType = {\r\n  error: null | string\r\n  loading: boolean\r\n  isChangedPass: boolean\r\n}\r\n\r\nconst initialState: PassChangeInitialStateType = {\r\n  error: null,\r\n  loading: false,\r\n  isChangedPass: false\r\n};\r\n\r\nexport const passChangeReducer = (state = initialState, action: PassChangeReducerActionsType): PassChangeInitialStateType => {\r\n  switch (action.type) {\r\n    case PASS_CHANGE_ACTION_TYPE.SET_ERROR:\r\n    case PASS_CHANGE_ACTION_TYPE.SET_LOADING:\r\n    case PASS_CHANGE_ACTION_TYPE.SET_IS_CHANGED_PASS:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Action creators\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: PASS_CHANGE_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\nconst setIsChangedPass = (isChangedPass: boolean) => {\r\n  return {type: PASS_CHANGE_ACTION_TYPE.SET_IS_CHANGED_PASS as const, payload: {isChangedPass}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: PASS_CHANGE_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\nexport const changePassTC = (newPassword: string, token: string): AppThunk => async dispatch => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    const changePassResponse = await api.setNewPassword(newPassword, token);\r\n    dispatch(setIsChangedPass(true));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n\r\n};\r\n\r\nexport type PassChangeReducerActionsType =\r\n  ReturnType<typeof setErrorAC>\r\n  | ReturnType<typeof setLoadingAC>\r\n  | ReturnType<typeof setIsChangedPass>","import React, {ChangeEvent, useState} from 'react';\r\nimport styles from './Register.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {InitialStateType, registerTC} from '../../store/registration-reducer';\r\nimport {AppStateType} from '../../store/store';\r\nimport {emailValidator} from '../../utils/validators/email-validator';\r\nimport {passwordValidator} from '../../utils/validators/password-validator';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport const Register: React.VFC = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const registerState = useSelector<AppStateType, InitialStateType>(state => state.registration);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    dispatch(registerTC(email, password));\r\n    setPassword('');\r\n  };\r\n\r\n  if (registerState.isRegisterSuccess) {\r\n    return <Redirect to={'/login'}/>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.registerPage}>\r\n      <div className={styles.registerContainer}>\r\n        {!registerState.loading ? <div className={styles.registerForm}>\r\n            <input\r\n              value={email}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={changeEmail}\r\n              placeholder={'email'}/>\r\n            <input\r\n              value={password}\r\n              type=\"password\"\r\n              onChange={changePassword}\r\n              placeholder={'password'}/>\r\n            {registerState.error && <div style={{color: 'red'}}>{registerState.error}</div>}\r\n            <button\r\n              disabled={!emailValidator(email) || !passwordValidator(password)}\r\n              onClick={onSubmit}>Register\r\n            </button>\r\n            {!emailValidator(email) && <span style={{color: 'red'}}>Неверный email</span>}\r\n            {!passwordValidator(password) && <span style={{color: 'red'}}>Пароль должен содержать более 6 символов</span>}\r\n          </div>\r\n          :\r\n          <span>Ждите отстоя пива...</span>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {Register} from \"../components/register/Register\";\r\n\r\n\r\ntype PropsType = {};\r\n\r\nexport const RegisterPage: React.FC<PropsType> = props => {\r\n    return (\r\n        <div>\r\n            <h2>Register Page</h2>\r\n            <Register/>\r\n        </div>\r\n    );\r\n};","import React, {useEffect} from 'react';\r\nimport styles from './Profile.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\nimport {LoginResponseType} from '../../utils/api';\r\n\r\ntype PropsType = {};\r\n\r\nexport const Profile: React.FC<PropsType> = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const authData = useSelector<AppStateType, LoginResponseType | {}>(state => state.appStatus.authData);\r\n\r\n  return (\r\n    <div>\r\n      <pre>{JSON.stringify(authData, null, 2)}</pre>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {Profile} from '../components/profile/Profile';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../store/store';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\ntype PropsType = {};\r\n\r\nexport const ProfilePage: React.FC<PropsType> = props => {\r\n\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={'/login'}/>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Profile Page</h2>\r\n      <Profile/>\r\n    </div>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport styles from './PasswordRecovery.module.css';\r\nimport {api, InfoResponseType} from '../../utils/api';\r\nimport * as buffer from 'buffer';\r\nimport {emailValidator} from '../../utils/validators/email-validator';\r\n\r\ntype PropsType = {};\r\n\r\nexport const PasswordRecovery: React.FC<PropsType> = props => {\r\n\r\n    const [email, setEmail] = useState<string>('');\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [response, setResponse] = useState<null | InfoResponseType>(null);\r\n    const [error, setError] = useState<null | string>();\r\n\r\n    const sendData = async () => {\r\n      setResponse(null);\r\n      setError(null);\r\n      setLoading(true);\r\n      try {\r\n        const res = await api.passRecovery(email);\r\n        setResponse(res);\r\n      } catch (e) {\r\n        setError(e.response ? e.response.data.error : e.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n\r\n    };\r\n\r\n    return (\r\n      <div className={styles.passRecovery}>\r\n        <h3>Форма восстановление пароля</h3>\r\n        {!loading\r\n          ? <div className={styles.recoveryForm}>\r\n            <label htmlFor=\"email\">Введите ваш email:</label>\r\n            <input\r\n              type=\"email\"\r\n              name={'email'}\r\n              value={email}\r\n              onChange={e => setEmail(e.currentTarget.value)}/>\r\n            <button\r\n              onClick={sendData}\r\n              disabled={!emailValidator(email)}>Отправить\r\n            </button>\r\n          </div>\r\n          : <span style={{textAlign: 'center'}}>Отправка....</span>}\r\n        {error && <span style={{color: 'red'}}>{error}</span>}\r\n        {response && <div>\r\n            <pre>{JSON.stringify(response, null, 2)}</pre>\r\n        </div>}\r\n      </div>\r\n    );\r\n  }\r\n;","import React from 'react';\r\nimport {PasswordRecovery} from '../components/pass-recovery/PasswordRecovery';\r\n\r\ntype PropsType = {};\r\n\r\nexport const PassRecoveryPage: React.FC<PropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Password Recovery Page</h2>\r\n      <PasswordRecovery/>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport styles from './TestComponent.module.css';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\n\r\nexport const TestComponent: React.VFC = () => {\r\n\r\n  const allReducerData = useSelector<AppStateType, AppStateType>(state => state);\r\n  const elements = Object.entries(allReducerData).map(elem => {\r\n    return <div key={elem[0]}>\r\n      <h5>{elem[0]}:</h5>\r\n      <pre>{JSON.stringify(elem[1], null, 2)}</pre>\r\n    </div>;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h3>All reducer data</h3>\r\n      {elements}\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {TestComponent} from '../components/test-component/TestComponent';\r\nimport {AppStateType} from '../store/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\n\r\ntype PropsType = {};\r\n\r\nexport const TestPage: React.FC<PropsType> = props => {\r\n\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={'/login'}/>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Test Page</h2>\r\n      <TestComponent/>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport styles from './NotFound.module.css';\r\nimport img404 from './404.png';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype PropsType = {};\r\n\r\nexport const NotFound: React.FC<PropsType> = props => {\r\n\r\n  return (\r\n    <div className={styles.notFound}>\r\n      <div className={styles.rotate}>\r\n        <span>404</span>\r\n      </div>\r\n      <NavLink to={'/test'}>\r\n        На главную\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {NotFound} from '../components/page404/NotFound';\r\n\r\ntype PropsType = {};\r\n\r\nexport const Page404: React.FC<PropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Page 404</h2>\r\n      <NotFound/>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {LoginPage} from '../Pages/LoginPage';\r\nimport {RegisterPage} from '../Pages/RegisterPage';\r\nimport {ProfilePage} from '../Pages/ProfilePage';\r\nimport {PassRecoveryPage} from '../Pages/PassRecoveryPage';\r\nimport {TestPage} from '../Pages/TestPage';\r\nimport {Page404} from '../Pages/Page404';\r\nimport {SetNewPasswordPage} from '../Pages/SetNewPasswordPage';\r\n\r\nexport enum PATH {\r\n  LOGIN = '/login',\r\n  REGISTER = '/register',\r\n  PROFILE = '/profile',\r\n  PAGE404 = '/404',\r\n  PASS_RECOVERY = '/password-recovery',\r\n  TEST = '/test',\r\n  SET_NEW_PASSWORD = '/set-new-password'\r\n}\r\n\r\nexport const Routes: React.VFC = () => {\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route\r\n          path={'/'}\r\n          exact\r\n          render={() => <Redirect to={PATH.TEST}/>}\r\n        />\r\n        <Route\r\n          path={PATH.LOGIN}\r\n          exact\r\n          render={() => <LoginPage/>}/>\r\n        <Route\r\n          path={PATH.REGISTER}\r\n          exact\r\n          render={() => <RegisterPage/>}/>\r\n        <Route\r\n          path={PATH.PROFILE}\r\n          exact\r\n          render={() => <ProfilePage/>}/>\r\n        <Route\r\n          path={PATH.PASS_RECOVERY}\r\n          exact\r\n          render={() => <PassRecoveryPage/>}/>\r\n        <Route\r\n          path={PATH.SET_NEW_PASSWORD + '/:token'}\r\n          exact\r\n          render={() => <SetNewPasswordPage/>}/>\r\n        <Route\r\n          path={PATH.TEST}\r\n          exact\r\n          render={() => <TestPage/>}/>\r\n        <Route render={() => <Page404/>}/>\r\n      </Switch>\r\n    </>\r\n  );\r\n};","import React, {ChangeEvent, useState} from 'react';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport styles from './PassChange.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changePassTC, PassChangeInitialStateType} from \"../../store/passChange-reducer\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {matchPasswordValidator, passwordValidator} from '../../utils/validators/password-validator';\r\n\r\ntype PropsType = {};\r\n\r\nexport const SetNewPass: React.FC<PropsType> = props => {\r\n\r\n    const [newPassword, setNewPassword] = useState('')\r\n    const [newPassword2, setConfirmPassword] = useState('')\r\n\r\n    const statePassReducer = useSelector<AppStateType, PassChangeInitialStateType>(state => state.passChange)\r\n\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{ token: string }>();\r\n    const changePass = () => {\r\n        dispatch(changePassTC(newPassword, token))\r\n    }\r\n\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewPassword(e.currentTarget.value)\r\n    }\r\n    const changeConfirmPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setConfirmPassword(e.currentTarget.value)\r\n    }\r\n\r\n    if (statePassReducer.isChangedPass) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.passChange}>\r\n            <div className={styles.passChangeContainer}>\r\n                {!statePassReducer.loading ? <div className={styles.passChangeForm}>\r\n                        <span>Смена пароля</span>\r\n                        Введите новый пароль<input type=\"password\" value={newPassword} onChange={changePassword}/>\r\n                        Подтвердите новый пароль<input type=\"password\" value={newPassword2}\r\n                                                       onChange={changeConfirmPassword}/>\r\n                        <button disabled={!passwordValidator(newPassword) || !matchPasswordValidator(newPassword, newPassword2)}\r\n                                onClick={changePass}>Отправить\r\n                        </button>\r\n                        {!passwordValidator(newPassword) &&\r\n                        <span style={{color: \"red\"}}>Пароль должен содержать более 6 символов</span>}\r\n                        {!matchPasswordValidator(newPassword, newPassword2) &&\r\n                        <span style={{color: \"red\"}}>Пароли не совпадают</span>}\r\n                    </div>\r\n                    :\r\n                    <span>Ждите отстоя пива...</span>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport {SetNewPass} from '../components/set-new-pass/SetNewPass';\r\n\r\ntype PropsType = {};\r\n\r\nexport const SetNewPasswordPage: React.FC<PropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Password Change Page</h2>\r\n      <SetNewPass/>\r\n    </div>\r\n  );\r\n};","import {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../../routes/Routes';\r\nimport React from 'react';\r\nimport styles from './Navbar.module.css';\r\nimport commonStyles from '../common/commonStyle.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\nimport {LoginStateType, logoutTC} from '../../store/login-reducer';\r\n\r\nexport function Navbar() {\r\n\r\n  const loginStatus = useSelector<AppStateType, LoginStateType>(state => state.login);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logout = () => {\r\n    dispatch(logoutTC());\r\n  };\r\n\r\n  return <nav className={styles.navbar}>\r\n    <div className={commonStyles.container}>\r\n      <ul>\r\n        <li>\r\n          <button\r\n            onClick={logout}\r\n            disabled={loginStatus.loading}>Logout\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to={PATH.PROFILE}\r\n            activeClassName={styles.linkActive}>\r\n            Profile\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to={PATH.TEST}\r\n            activeClassName={styles.linkActive}>\r\n            Test\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>;\r\n}","import React, {useEffect} from 'react';\r\nimport {Routes} from '../routes/Routes';\r\nimport {Navbar} from './navbar/Navbar';\r\nimport commonStyles from '../components/common/commonStyle.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../store/store';\r\nimport {AppInitializeTC} from '../store/app-reducer';\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n  const isInitialized = useSelector<AppStateType, boolean>(state => state.appStatus.isInitialized);\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n\r\n  useEffect(() => {\r\n    dispatch(AppInitializeTC());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    isInitialized\r\n      ? <>\r\n        {isAuth && <Navbar/>}\r\n        <div className={commonStyles.container}>\r\n          <h1 style={{textAlign: 'center'}}>This is mega super friday project</h1>\r\n          <Routes/>\r\n        </div>\r\n      </>\r\n      : <span>Ждите отстоя пива...</span>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","type StateType = typeof initialState;\r\n\r\nconst initialState = {\r\n  test: 'test'\r\n};\r\n\r\nexport const testReducer = (state: StateType = initialState, action: any) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};","type StateType = typeof initialState;\r\n\r\nconst initialState = {};\r\n\r\nexport const profileReducer = (state: StateType = initialState, action: any) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","import {combineReducers, applyMiddleware} from 'redux';\r\nimport {testReducer} from './test-reducer';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {registrationReducer, RegistrationReducerActionsType} from './registration-reducer';\r\nimport {loginReducer, LoginReducerActionsType} from './login-reducer';\r\nimport {createStore} from 'redux';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {appReducer, AppReducerActionsType} from './app-reducer';\r\nimport {passChangeReducer, PassChangeReducerActionsType} from './passChange-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  test: testReducer,\r\n  profile: profileReducer,\r\n  registration: registrationReducer,\r\n  login: loginReducer,\r\n  appStatus: appReducer,\r\n  passChange: passChangeReducer\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n// Все экшены нашего приложения, которые можно диспатчить\r\n\r\ntype AppActionsType =\r\n  AppReducerActionsType\r\n  | LoginReducerActionsType\r\n  | PassChangeReducerActionsType\r\n  | RegistrationReducerActionsType;\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType,\r\n  AppStateType,\r\n  unknown,\r\n  AppActionsType>\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './store/store';\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <App/>\r\n      </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__tlqFF\",\"formGroup\":\"Login_formGroup__11Bw2\",\"rememberMeFormGroup\":\"Login_rememberMeFormGroup__2_a95\",\"textField\":\"Login_textField__3O7mQ\",\"fieldLabel\":\"Login_fieldLabel__3M6n9\",\"button\":\"Login_button__Ky4ng\",\"error\":\"Login_error__3EBLC\"};"],"sourceRoot":""}