{"version":3,"sources":["components/page404/NotFound.module.css","components/spinner/Spinner.module.css","components/card-packs/CardPacks.module.css","components/field-with-button/FieldWithButton.module.css","store/app-reducer.ts","utils/constants.ts","utils/authApi.ts","store/login-reducer.ts","store/registration-reducer.ts","utils/validators/email-validator.ts","utils/validators/password-validator.ts","components/login/Login.tsx","Pages/LoginPage.tsx","store/pass-recovery-reducer.ts","components/spinner/Spinner.tsx","components/register/Register.tsx","Pages/RegisterPage.tsx","components/profile/Profile.tsx","Pages/ProfilePage.tsx","store/pass-change-reducer.ts","components/pass-recovery/PasswordRecovery.tsx","Pages/PassRecoveryPage.tsx","components/test-component/TestComponent.tsx","Pages/TestPage.tsx","components/page404/NotFound.tsx","Pages/Page404.tsx","store/card-packs-reducer.ts","components/set-new-pass/SetNewPass.tsx","Pages/SetNewPasswordPage.tsx","components/modal/Modal.tsx","components/card-packs/CardPack.tsx","utils/cardPacksApi.ts","store/cards-reducer.ts","components/card-packs/CardPacks.tsx","components/field-with-button/FieldWithButton.tsx","Pages/CardPacksPage.tsx","components/cards/Card.tsx","utils/cardsApi.ts","store/training-reducer.ts","components/cards/Cards.tsx","components/cards/AddCardForm.tsx","Pages/CardsPage.tsx","routes/Routes.tsx","components/training-card/TrainingCard.tsx","Pages/TrainPage.tsx","components/navbar/Navbar.tsx","components/App.tsx","store/test-reducer.ts","store/profile-reducer.ts","store/store.ts","index.tsx","components/card-packs/CardPack.module.css","components/cards/Card.module.css","components/login/Login.module.css","Pages/CardPacksPage.module.css","components/common/commonStyle.module.css","Pages/LoginPage.module.css","components/modal/Modal.module.css","components/training-card/TrainingCard.module.css","components/navbar/Navbar.module.css","components/register/Register.module.css","components/set-new-pass/PassChange.module.css","components/pass-recovery/PasswordRecovery.module.css"],"names":["module","exports","APP_ACTION_TYPE","API","remoteApi","instance","axios","create","baseURL","withCredentials","authApi","email","reqBody","from","message","post","password","resetPasswordToken","rememberMe","then","res","data","delete","LOGIN_ACTION_TYPE","setIsAuthAC","isAuth","type","SET_IS_AUTH","payload","setAuthDataAC","authData","SET_AUTH_DATA","initialState","isInitialized","error","REGISTRATION_ACTION_TYPE","setErrorAC","SET_ERROR","setLoadingAC","loading","SET_LOADING","emailValidator","test","passwordValidator","length","matchPasswordValidator","pwd1","pwd2","Login","useState","setEmail","pwd","setPwd","remember","setRemember","dispatch","useDispatch","loginStatus","useSelector","state","login","form","className","styles","formGroup","disabled","placeholder","value","onChange","e","currentTarget","Password","rememberMeFormGroup","htmlFor","fieldLabel","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","defaultChecked","checked","button","onClick","event","preventDefault","a","response","loginTC","closable","LoginPage","props","appStatus","to","PATH","PROFILE","commonStyles","fullscreen","loginPage","h2","h4","REGISTER","PASS_RECOVERY","PASS_RECOVERY_ACTION_TYPE","isRegisterSuccess","setIsRegisterSuccessAC","SET_IS_REGISTER_SUCCESS","Spinner","loader","Register","registerState","registration","setPassword","LOGIN","registerPage","registerContainer","registerForm","name","style","color","registerTC","RegisterPage","Profile","JSON","stringify","ProfilePage","PASS_CHANGE_ACTION_TYPE","isEmailSend","PasswordRecovery","recoveryStatus","passRecovery","textAlign","recoveryForm","SET_IS_EMAIL_SEND","passRecoveryTC","PassRecoveryPage","TestComponent","allReducerData","elements","Object","entries","map","elem","TestPage","NotFound","notFound","rotate","Page404","CARD_PACKS_ACTION_TYPE","isChangedPass","SetNewPass","newPassword","setNewPassword","newPassword2","setConfirmPassword","statePassReducer","passChange","token","useParams","passChangeContainer","passChangeForm","SET_IS_CHANGED_PASS","changePassTC","SetNewPasswordPage","Modal","onClose","onSubmit","visibility","window","document","body","classList","add","modal","modalContent","stopPropagation","children","closeBtn","remove","CardPack","cardPack","onDelete","isMyCardPack","onEdit","showModal","setShowModal","newName","setNewName","allowClear","width","pack","packHeader","textTransform","ratingCount","cardsCount","rating","shots","grade","align","span","_id","action","onConfirm","title","cancelText","okText","placement","cancelButtonProps","okButtonProps","danger","user","user_name","cardPacksApi","options","get","params","cardPackId","cardsPack","put","CARDS_ACTION_TYPE","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","pageCount","page","onlyMyPacks","showEmptyPacks","setCardPacksAC","SET_CARD_PACKS","setCardsPacksTC","user_id","packName","getState","min","undefined","SET_CARD_PACKS_TOTAL_COUNT","CardPacks","userId","deleteCardsPack","cardsPackId","editCardPack","id","updateCardsPack","packsContainer","cp","FieldWithButton","text","setText","onSearch","searchPanel","inputPlaceholder","onKeyPress","key","buttonLabel","CardPacksPage","myId","useEffect","optionsBar","onShowSizeChange","current","size","SET_PAGE_COUNT","setPageCountAC","SET_PAGE","setPageAC","defaultCurrent","showSizeChanger","pageSize","showQuickJumper","total","checkBoxBar","checkBoxBarItem","SET_ONLY_MY_PACKS","setOnlyMyPacksAC","SET_SHOW_EMPTY_PACKS","setShowEmptyPacksAC","searchBar","searchText","cardPackName","marginTop","closeText","tip","Card","card","ownCard","question","setQuestion","answer","setAnswer","buttons","justify","cardButton","margin","cardStats","cardStatsValue","toFixed","cardsApi","cardId","TRAINIGN_ACTION_TYPE","packOwner","cards","cardsTotalCount","setCardsAC","SET_CARDS","setCardsTC","cardsPack_id","SET_CARDS_TOTAL_COUNT","Cards","deleteCard","deleteCardTC","editCard","updateCardTC","xxl","xl","lg","flex","AddCardForm","rowStyle","marginBottom","clearForm","wrap","gutter","TextArea","offset","CardsPage","pagination","plain","addCardTC","padding","setGradeAC","SET_GRADE","TrainingCard","showAnswer","TrainPage","currentCard","setCurrentCard","firstRun","setFirstRun","setChecked","returnToPacks","setReturnToPacks","train","setNextCard","getRandomCard","sum","reduce","acc","rand","Math","random","i","newSum","console","log","CARD_PACKS","takeGrade","card_id","updatedGrade","setGradeTC","gradeButtons","index","Routes","path","exact","render","TEST","SET_NEW_PASSWORD","CARDS","TRAINING","Navbar","navbar","container","CLEAR_STORE","activeClassName","linkActive","App","SET_IS_INITIALIZED","rootReducer","combineReducers","profile","SET_PACK_OWNER","store","createStore","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.7e962a5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"NotFound_notFound__BKuHp\",\"rotate\":\"NotFound_rotate__2XOrI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__1m74L\",\"load7\":\"Spinner_load7__2T7RE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsContainer\":\"CardPacks_packsContainer__pIaNg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchPanel\":\"FieldWithButton_searchPanel__loIW2\"};","import {authApi, LoginResponseType} from '../utils/authApi';\r\nimport {AppActionsType, AppThunk} from './store';\r\n\r\nexport enum APP_ACTION_TYPE {\r\n  SET_IS_INITIALIZED = 'APP/SET_IS_INITIALIZED',\r\n  SET_IS_AUTH = 'APP/SET_IS_AUTH',\r\n  SET_AUTH_DATA = 'APP/SET_AUTH_DATA',\r\n  SET_ERROR = 'APP/SET_ERROR',\r\n  CLEAR_STORE = 'APP/CLEAR_STORE'\r\n}\r\n\r\n// Action creators\r\nexport const setIsInitializedAC = (isInitialized: boolean) => {\r\n  return {type: APP_ACTION_TYPE.SET_IS_INITIALIZED as const, payload: {isInitialized}};\r\n};\r\n\r\nexport const setIsAuthAC = (isAuth: boolean) => {\r\n  return {\r\n    type: APP_ACTION_TYPE.SET_IS_AUTH as const, payload: {isAuth}\r\n  };\r\n};\r\n\r\nconst setError = (error: string | null) => {\r\n  return {type: APP_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\n\r\nexport const clearStoreAC = () => {\r\n  return {type: APP_ACTION_TYPE.CLEAR_STORE as const};\r\n};\r\n\r\nexport const setAuthDataAC = (authData: LoginResponseType | {}) => {\r\n  return {type: APP_ACTION_TYPE.SET_AUTH_DATA as const, payload: {authData}};\r\n};\r\n// ------------------\r\n\r\n// Thunk creators\r\nexport const AppInitializeTC = (): AppThunk => async dispatch => {\r\n  try {\r\n    const response = await authApi.me();\r\n    dispatch(setAuthDataAC(response));\r\n    dispatch(setIsAuthAC(true));\r\n  } catch (e) {\r\n    dispatch(setError(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setIsInitializedAC(true));\r\n  }\r\n};\r\n// ------------------\r\n\r\nexport type AppReducerActionsType =\r\n  ReturnType<typeof setIsInitializedAC>\r\n  | ReturnType<typeof setIsAuthAC>\r\n  | ReturnType<typeof setError>\r\n  | ReturnType<typeof setAuthDataAC>\r\n  | ReturnType<typeof clearStoreAC>\r\n\r\ntype StateType = {\r\n  isInitialized: boolean\r\n  isAuth: boolean\r\n  authData: Partial<LoginResponseType>,\r\n  error: string | null\r\n};\r\n\r\nconst initialState: StateType = {\r\n  isInitialized: false,\r\n  isAuth: false,\r\n  authData: {},\r\n  error: null\r\n};\r\n\r\nexport const appReducer = (state = initialState, action: AppActionsType): StateType => {\r\n  switch (action.type) {\r\n    case APP_ACTION_TYPE.SET_IS_INITIALIZED:\r\n    case APP_ACTION_TYPE.SET_IS_AUTH:\r\n    case APP_ACTION_TYPE.SET_AUTH_DATA:\r\n    case APP_ACTION_TYPE.SET_ERROR:\r\n      return {...state, ...action.payload};\r\n    case APP_ACTION_TYPE.CLEAR_STORE: {\r\n      return initialState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import {localApi, remoteApi} from '../../package.json';\r\n\r\n//export const API = localApi;\r\nexport const API = remoteApi;\r\nexport const fileApiBaseURL = 'https://dry-forest-56016.herokuapp.com';","import axios from 'axios';\r\nimport {API} from './constants';\r\n\r\nconst FROM = 'test-front-admin<test@test.com>';\r\n\r\nconst instance = axios.create({baseURL: API, withCredentials: true});\r\n\r\nexport const authApi = {\r\n\r\n  passRecovery(email: string) {\r\n    const htmlBody = `<div style=\"background-color: lime; padding: 15px\">\r\n                       password recovery link: \r\n              <a href=\"https://ewgentgm.github.io/it-incubator-friday-project/#/set-new-password/$token$\">\r\n              link\r\n              </a></div>`;\r\n    const reqBody = {\r\n      email,\r\n      from: FROM,\r\n      message: htmlBody\r\n    };\r\n    return instance.post<InfoResponseType>('/auth/forgot', reqBody);\r\n  },\r\n\r\n  setNewPassword(password: string, resetPasswordToken: string) {\r\n    return instance.post<InfoResponseType>('/auth/set-new-password', {password, resetPasswordToken});\r\n  },\r\n\r\n  login(email: string, password: string, rememberMe: boolean = false) {\r\n    return instance.post<LoginResponseType>('/auth/login', {email, password, rememberMe}).then(res => res.data);\r\n  },\r\n\r\n  logout() {\r\n    return instance.delete<InfoResponseType>('/auth/me', {}).then(res => res.data);\r\n  },\r\n\r\n  me() {\r\n    return instance.post<LoginResponseType>('/auth/me', {}).then(res => res.data);\r\n  },\r\n\r\n  register(email: string, password: string) {\r\n    return instance.post<RegisterResponseType>('/auth/register', {email, password}).then(res => res.data);\r\n  }\r\n};\r\n\r\nexport type LoginResponseType = {\r\n  _id: string;\r\n  email: string;\r\n  name: string;\r\n  avatar?: string;\r\n  publicCardPacksCount: number;\r\n  created: string;\r\n  updated: string;\r\n  isAdmin: boolean;\r\n  verified: boolean;\r\n  rememberMe: boolean;\r\n  error?: string;\r\n}\r\n\r\nexport type InfoResponseType = {\r\n  info: string\r\n  error?: string\r\n}\r\n\r\ntype RegisterResponseType = {\r\n  addedUser: any\r\n  error?: string\r\n}","import {authApi} from '../utils/authApi';\r\nimport {APP_ACTION_TYPE, clearStoreAC, setAuthDataAC, setIsAuthAC} from './app-reducer';\r\nimport {AppActionsType, AppThunk} from './store';\r\n\r\nenum LOGIN_ACTION_TYPE {\r\n  SET_ERROR = 'LOGIN/SET_ERROR',\r\n  SET_LOADING = 'LOGIN/SET_LOADING',\r\n}\r\n\r\n// Action creators\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: LOGIN_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: LOGIN_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\n//----------------\r\n\r\n// Thunk creators\r\n\r\nexport const loginTC = (email: string, password: string, remember: boolean): AppThunk => async dispatch => {\r\n  dispatch(setErrorAC(null));\r\n  dispatch(setLoadingAC(true));\r\n  try {\r\n    const res = await authApi.login(email, password, remember);\r\n    dispatch(setAuthDataAC(res));\r\n    dispatch(setIsAuthAC(true));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const logoutTC = (): AppThunk => async dispatch => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    await authApi.logout();\r\n    dispatch(clearStoreAC());\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport type LoginReducerActionsType = ReturnType<typeof setErrorAC> | ReturnType<typeof setLoadingAC>;\r\n\r\nexport type LoginStateType = {\r\n  error: null | string\r\n  loading: boolean\r\n};\r\n\r\nconst initialState: LoginStateType = {\r\n  error: null,\r\n  loading: false\r\n};\r\n\r\n//---------------\r\n\r\nexport const loginReducer = (state: LoginStateType = initialState, action: AppActionsType): LoginStateType => {\r\n  switch (action.type) {\r\n    case LOGIN_ACTION_TYPE.SET_ERROR:\r\n    case LOGIN_ACTION_TYPE.SET_LOADING:\r\n      return {\r\n        ...state, ...action.payload\r\n      };\r\n    case APP_ACTION_TYPE.CLEAR_STORE: {\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};","import {authApi} from \"../utils/authApi\";\r\nimport {AppActionsType, AppThunk} from './store';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\n\r\nenum REGISTRATION_ACTION_TYPE {\r\n    SET_ERROR = 'REGISTRATION/SET_ERROR',\r\n    SET_LOADING = 'REGISTRATION/SET_LOADING',\r\n    SET_IS_REGISTER_SUCCESS = 'REGISTRATION/SET_IS_REGISTER_SUCCESS'\r\n}\r\n\r\nexport type InitialStateType = {\r\n    error: null | string\r\n    loading: boolean\r\n    isRegisterSuccess: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    error: null,\r\n    loading: false,\r\n    isRegisterSuccess: false\r\n};\r\n\r\nexport const registrationReducer = (state = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case REGISTRATION_ACTION_TYPE.SET_ERROR:\r\n        case REGISTRATION_ACTION_TYPE.SET_LOADING:\r\n        case REGISTRATION_ACTION_TYPE.SET_IS_REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case APP_ACTION_TYPE.CLEAR_STORE: {\r\n            return initialState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action creators\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n    return {type: REGISTRATION_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\nconst setIsRegisterSuccessAC = (isRegisterSuccess: boolean) => {\r\n    return {type: REGISTRATION_ACTION_TYPE.SET_IS_REGISTER_SUCCESS as const, payload: {isRegisterSuccess}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n    return {type: REGISTRATION_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\nexport const registerTC = (email: string, password: string): AppThunk => async dispatch => {\r\n    dispatch(setLoadingAC(true))\r\n    dispatch(setErrorAC(null))\r\n    try {\r\n        const register = await authApi.register(email, password)\r\n        dispatch(setIsRegisterSuccessAC(true))\r\n    } catch (e) {\r\n        dispatch(setErrorAC(e.response ? e.response.data.error : e.message))\r\n        dispatch(setIsRegisterSuccessAC(false))\r\n    } finally {\r\n        dispatch(setLoadingAC(false))\r\n    }\r\n\r\n}\r\n\r\nexport type RegistrationReducerActionsType =\r\n    ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof setLoadingAC>\r\n    | ReturnType<typeof setIsRegisterSuccessAC>","export const emailValidator = (email: string) => {\r\n    return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)\r\n}\r\n","export const passwordValidator = (password: string) => {\r\n  return password.length > 6;\r\n};\r\n\r\nexport const matchPasswordValidator = (pwd1: string, pwd2: string) => {\r\n  return pwd1 === pwd2;\r\n};","import React, {useState} from 'react';\r\nimport styles from './Login.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {LoginStateType, loginTC} from '../../store/login-reducer';\r\nimport {AppStateType} from '../../store/store';\r\nimport {emailValidator} from '../../utils/validators/email-validator';\r\nimport {passwordValidator} from '../../utils/validators/password-validator';\r\nimport {Alert, Button, Input, Switch} from 'antd';\r\nimport {CheckOutlined, CloseOutlined} from '@ant-design/icons';\r\n\r\nexport const Login: React.VFC = () => {\r\n  const [email, setEmail] = useState<string>('');\r\n  const [pwd, setPwd] = useState<string>('');\r\n  const [remember, setRemember] = useState<boolean>(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const loginStatus = useSelector<AppStateType, LoginStateType>(state => state.login);\r\n\r\n  const loginCallback = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n    dispatch(loginTC(email, pwd, remember));\r\n  };\r\n\r\n  const form: JSX.Element = <div>\r\n    <form className={styles.form}>\r\n      <div className={styles.formGroup}>\r\n        <Input\r\n          disabled={loginStatus.loading}\r\n          type={'email'}\r\n          placeholder=\"Input email\"\r\n          value={email}\r\n          onChange={e => setEmail(e.currentTarget.value)}/>\r\n      </div>\r\n      <div className={styles.formGroup}>\r\n        <Input.Password\r\n          disabled={loginStatus.loading}\r\n          placeholder=\"Input password\"\r\n          value={pwd}\r\n          onChange={e => setPwd(e.currentTarget.value)}/>\r\n      </div>\r\n      <div className={styles.rememberMeFormGroup}>\r\n        <label\r\n          htmlFor=\"rememberMe\"\r\n          className={styles.fieldLabel}>Запомнить меня</label>\r\n        <Switch\r\n          disabled={loginStatus.loading}\r\n          checkedChildren={<CheckOutlined/>}\r\n          unCheckedChildren={<CloseOutlined/>}\r\n          defaultChecked={false}\r\n          onChange={(checked) => setRemember(checked)}\r\n        />\r\n      </div>\r\n      <Button\r\n        type={'primary'}\r\n        className={styles.button}\r\n        onClick={loginCallback}\r\n        loading={loginStatus.loading}\r\n        disabled={!emailValidator(email) || !passwordValidator(pwd)}>\r\n        Войти\r\n      </Button>\r\n      {!emailValidator(email) && <span className={styles.error}>Некорректный email</span>}\r\n      {!passwordValidator(pwd) && <span className={styles.error}>Короткий пароль</span>}\r\n    </form>\r\n    {loginStatus.error && <Alert\r\n        message={loginStatus.error}\r\n        type=\"error\"\r\n        closable\r\n    />}\r\n  </div>;\r\n\r\n  return (\r\n    <>\r\n      {form}\r\n    </>\r\n  );\r\n};","import React from 'react';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {Login} from '../components/login/Login';\r\nimport styles from './LoginPage.module.css';\r\nimport commonStyles from '../components/common/commonStyle.module.css';\r\nimport {PATH} from '../routes/Routes';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../store/store';\r\n\r\ntype PropsType = {};\r\n\r\nexport const LoginPage: React.FC<PropsType> = props => {\r\n\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={PATH.PROFILE}/>;\r\n  }\r\n\r\n  return (\r\n    <div className={commonStyles.fullscreen}>\r\n      <div className={styles.loginPage}>\r\n        <h2 className={styles.h2}>Выполните вход в наше суперское приложение</h2>\r\n        <h4 className={styles.h4}>Вы можете зарегистрироваться <NavLink to={PATH.REGISTER}>здесь</NavLink></h4>\r\n        <h4 className={styles.h4}>Если Вы забыли свой пароль, то\r\n                                  Вам <NavLink to={PATH.PASS_RECOVERY}>сюда</NavLink></h4>\r\n        <Login/>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import {AppActionsType, AppThunk} from './store';\r\nimport {authApi} from '../utils/authApi';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\n\r\nexport enum PASS_RECOVERY_ACTION_TYPE {\r\n  SET_ERROR = 'PASS_RECOVERY/SET_ERROR',\r\n  SET_LOADING = 'PASS_RECOVERY/SET_LOADING',\r\n  SET_IS_EMAIL_SEND = 'PASS_RECOVERY/SET_IS_EMAIL_SEND'\r\n}\r\n\r\nexport type PassRecoveryStateType = {\r\n  error: null | string\r\n  loading: boolean\r\n  isEmailSend: boolean\r\n}\r\n\r\nconst initialState: PassRecoveryStateType = {\r\n  error: null,\r\n  loading: false,\r\n  isEmailSend: false\r\n};\r\n\r\nexport const passRecoveryReducer = (state = initialState, action: AppActionsType): PassRecoveryStateType => {\r\n  switch (action.type) {\r\n    case PASS_RECOVERY_ACTION_TYPE.SET_ERROR:\r\n    case PASS_RECOVERY_ACTION_TYPE.SET_LOADING:\r\n    case PASS_RECOVERY_ACTION_TYPE.SET_IS_EMAIL_SEND:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case APP_ACTION_TYPE.CLEAR_STORE: {\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: PASS_RECOVERY_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\nconst setIsEmailSend = (isEmailSend: boolean) => {\r\n  return {type: PASS_RECOVERY_ACTION_TYPE.SET_IS_EMAIL_SEND as const, payload: {isEmailSend}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: PASS_RECOVERY_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\nexport const passRecoveryTC = (email: string): AppThunk => async dispatch => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    const changePassResponse = await authApi.passRecovery(email);\r\n    dispatch(setIsEmailSend(true));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n\r\n};\r\n\r\nexport type PassRecoveryReducerActionsType =\r\n  ReturnType<typeof setErrorAC>\r\n  | ReturnType<typeof setLoadingAC>\r\n  | ReturnType<typeof setIsEmailSend>","import React from 'react';\r\nimport styles from './Spinner.module.css';\r\n\r\ntype PropsType = {};\r\n\r\nexport const Spinner: React.FC<PropsType> = props => {\r\n  return (\r\n    <div className={styles.loader}>\r\n      Ждите отстоя пива\r\n    </div>\r\n  );\r\n};","import React, {ChangeEvent, useState} from 'react';\r\nimport styles from './Register.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {InitialStateType, registerTC} from '../../store/registration-reducer';\r\nimport {AppStateType} from '../../store/store';\r\nimport {emailValidator} from '../../utils/validators/email-validator';\r\nimport {passwordValidator} from '../../utils/validators/password-validator';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Spinner} from '../spinner/Spinner';\r\nimport {PATH} from '../../routes/Routes';\r\n\r\nexport const Register: React.VFC = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const registerState = useSelector<AppStateType, InitialStateType>(state => state.registration);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    dispatch(registerTC(email, password));\r\n    setPassword('');\r\n  };\r\n\r\n  if (registerState.isRegisterSuccess) {\r\n    return <Redirect to={PATH.LOGIN}/>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.registerPage}>\r\n      <div className={styles.registerContainer}>\r\n        {!registerState.loading ? <div className={styles.registerForm}>\r\n            <input\r\n              value={email}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={changeEmail}\r\n              placeholder={'email'}/>\r\n            <input\r\n              value={password}\r\n              type=\"password\"\r\n              onChange={changePassword}\r\n              placeholder={'password'}/>\r\n            {registerState.error && <div style={{color: 'red'}}>{registerState.error}</div>}\r\n            <button\r\n              disabled={!emailValidator(email) || !passwordValidator(password)}\r\n              onClick={onSubmit}>Register\r\n            </button>\r\n            {!emailValidator(email) && <span style={{color: 'red'}}>Неверный email</span>}\r\n            {!passwordValidator(password) && <span style={{color: 'red'}}>Пароль должен содержать более 6 символов</span>}\r\n          </div>\r\n          :\r\n          <Spinner/>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {Register} from \"../components/register/Register\";\r\n\r\n\r\ntype PropsType = {};\r\n\r\nexport const RegisterPage: React.FC<PropsType> = props => {\r\n    return (\r\n        <div>\r\n            <h2>Register Page</h2>\r\n            <Register/>\r\n        </div>\r\n    );\r\n};","import React, {useEffect} from 'react';\r\nimport styles from './Profile.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\nimport {LoginResponseType} from '../../utils/authApi';\r\n\r\ntype PropsType = {};\r\n\r\nexport const Profile: React.FC<PropsType> = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const authData = useSelector<AppStateType, LoginResponseType | {}>(state => state.appStatus.authData);\r\n\r\n  return (\r\n    <div>\r\n      <pre>{JSON.stringify(authData, null, 2)}</pre>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {Profile} from '../components/profile/Profile';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../store/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from '../routes/Routes';\r\n\r\ntype PropsType = {};\r\n\r\nexport const ProfilePage: React.FC<PropsType> = props => {\r\n\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={PATH.LOGIN}/>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Profile Page</h2>\r\n      <Profile/>\r\n    </div>\r\n  );\r\n};","import {authApi} from '../utils/authApi';\r\nimport {AppActionsType, AppThunk} from './store';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\n\r\nenum PASS_CHANGE_ACTION_TYPE {\r\n  SET_ERROR = 'PASS_CHANGE/SET_ERROR',\r\n  SET_LOADING = 'PASS_CHANGE/SET_LOADING',\r\n  SET_IS_CHANGED_PASS = 'PASS_CHANGE/SET_IS_CHANGED_PASS'\r\n}\r\n\r\nexport type PassChangeStateType = {\r\n  error: null | string\r\n  loading: boolean\r\n  isChangedPass: boolean\r\n}\r\n\r\nconst initialState: PassChangeStateType = {\r\n  error: null,\r\n  loading: false,\r\n  isChangedPass: false\r\n};\r\n\r\nexport const passChangeReducer = (state = initialState, action: AppActionsType): PassChangeStateType => {\r\n  switch (action.type) {\r\n    case PASS_CHANGE_ACTION_TYPE.SET_ERROR:\r\n    case PASS_CHANGE_ACTION_TYPE.SET_LOADING:\r\n    case PASS_CHANGE_ACTION_TYPE.SET_IS_CHANGED_PASS:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case APP_ACTION_TYPE.CLEAR_STORE: {\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Action creators\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: PASS_CHANGE_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\nconst setIsChangedPass = (isChangedPass: boolean) => {\r\n  return {type: PASS_CHANGE_ACTION_TYPE.SET_IS_CHANGED_PASS as const, payload: {isChangedPass}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: PASS_CHANGE_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\nexport const changePassTC = (newPassword: string, token: string): AppThunk => async dispatch => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    const changePassResponse = await authApi.setNewPassword(newPassword, token);\r\n    dispatch(setIsChangedPass(true));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n\r\n};\r\n\r\nexport type PassChangeReducerActionsType =\r\n  ReturnType<typeof setErrorAC>\r\n  | ReturnType<typeof setLoadingAC>\r\n  | ReturnType<typeof setIsChangedPass>","import React, {useState} from 'react';\r\nimport styles from './PasswordRecovery.module.css';\r\nimport {authApi, InfoResponseType} from '../../utils/authApi';\r\nimport * as buffer from 'buffer';\r\nimport {emailValidator} from '../../utils/validators/email-validator';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../../routes/Routes';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\nimport {PassChangeStateType} from '../../store/pass-change-reducer';\r\nimport {PassRecoveryStateType, passRecoveryTC} from '../../store/pass-recovery-reducer';\r\n\r\ntype PropsType = {};\r\n\r\nexport const PasswordRecovery: React.FC<PropsType> = props => {\r\n\r\n  const [email, setEmail] = useState<string>('');\r\n\r\n  const dispatch = useDispatch();\r\n  const recoveryStatus = useSelector<AppStateType, PassRecoveryStateType>(state => state.passRecovery);\r\n\r\n  if (recoveryStatus.isEmailSend) {\r\n    return (\r\n      <div>\r\n        <span\r\n          style={{\r\n            color: 'blue',\r\n            textAlign: 'center'\r\n          }}>Всё отлично, иди проверяй почту, и жми <NavLink to={PATH.LOGIN}>ссылку</NavLink></span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.passRecovery}>\r\n      <h3>Форма восстановление пароля</h3>\r\n      {!recoveryStatus.loading\r\n        ? <div className={styles.recoveryForm}>\r\n          <label htmlFor=\"email\">Введите ваш email:</label>\r\n          <input\r\n            type=\"email\"\r\n            name={'email'}\r\n            value={email}\r\n            onChange={e => setEmail(e.currentTarget.value)}/>\r\n          <button\r\n            onClick={() => dispatch(passRecoveryTC(email))}\r\n            disabled={!emailValidator(email)}>Отправить\r\n          </button>\r\n        </div>\r\n        : <span style={{textAlign: 'center'}}>Отправка....</span>}\r\n      {recoveryStatus.error && <span style={{color: 'red', textAlign: 'center'}}>{recoveryStatus.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {PasswordRecovery} from '../components/pass-recovery/PasswordRecovery';\r\n\r\ntype PropsType = {};\r\n\r\nexport const PassRecoveryPage: React.FC<PropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Password Recovery Page</h2>\r\n      <PasswordRecovery/>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport styles from './TestComponent.module.css';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\n\r\nexport const TestComponent: React.VFC = () => {\r\n\r\n  const allReducerData = useSelector<AppStateType, AppStateType>(state => state);\r\n  const elements = Object.entries(allReducerData).map(elem => {\r\n    return <div key={elem[0]}>\r\n      <h5>{elem[0]}:</h5>\r\n      <pre>{JSON.stringify(elem[1], null, 2)}</pre>\r\n    </div>;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h3>All reducer data</h3>\r\n      {elements}\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {TestComponent} from '../components/test-component/TestComponent';\r\nimport {AppStateType} from '../store/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport {PATH} from '../routes/Routes';\r\n\r\ntype PropsType = {};\r\n\r\nexport const TestPage: React.FC<PropsType> = props => {\r\n\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={PATH.LOGIN}/>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Test Page</h2>\r\n      <TestComponent/>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport styles from './NotFound.module.css';\r\nimport img404 from './404.png';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype PropsType = {};\r\n\r\nexport const NotFound: React.FC<PropsType> = props => {\r\n\r\n  return (\r\n    <div className={styles.notFound}>\r\n      <div className={styles.rotate}>\r\n        <span>404</span>\r\n      </div>\r\n      <NavLink to={'/test'}>\r\n        На главную\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {NotFound} from '../components/page404/NotFound';\r\n\r\ntype PropsType = {};\r\n\r\nexport const Page404: React.FC<PropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Page 404</h2>\r\n      <NotFound/>\r\n    </div>\r\n  );\r\n};","import {AppActionsType, AppThunk} from './store';\r\nimport {CardsPackType, cardPacksApi, AddCardsPackRequestType} from '../utils/cardPacksApi';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\n\r\nexport enum CARD_PACKS_ACTION_TYPE {\r\n  SET_ERROR = 'CARD_PACKS/SET_ERROR',\r\n  SET_LOADING = 'CARD_PACKS/SET_LOADING',\r\n  SET_PAGE = 'CARD_PACKS/SET_PAGE',\r\n  SET_PAGE_COUNT = 'CARD_PACKS/SET_PAGE_COUNT',\r\n  SET_CARD_PACKS = 'CARD_PACKS/SET_CARD_PACKS',\r\n  SET_CARD_PACKS_TOTAL_COUNT = 'CARD_PACKS/SET_CARD_PACKS_TOTAL_COUNT',\r\n  SET_ONLY_MY_PACKS = 'CARD_PACKS/SET_ONLY_MY_PACKS',\r\n  SET_SHOW_EMPTY_PACKS = 'CARD_PACKS/SET_SHOW_EMPTY_PACKS',\r\n}\r\n\r\nexport type CardPacksStateType = {\r\n  error: null | string\r\n  loading: boolean\r\n  cardPacks: Array<CardsPackType>\r\n  cardPacksTotalCount: number\r\n  maxCardsCount: number\r\n  minCardsCount: number\r\n  page: number\r\n  pageCount: number\r\n  onlyMyPacks: boolean\r\n  showEmptyPacks: boolean\r\n}\r\n\r\nconst initialState: CardPacksStateType = {\r\n  error: null,\r\n  loading: false,\r\n  cardPacks: [],\r\n  cardPacksTotalCount: 0,\r\n  maxCardsCount: 0,\r\n  minCardsCount: 0,\r\n  pageCount: 10,\r\n  page: 1,\r\n  onlyMyPacks: false,\r\n  showEmptyPacks: false\r\n};\r\n\r\nexport const cardPacksReducer = (state = initialState, action: AppActionsType): CardPacksStateType => {\r\n  switch (action.type) {\r\n    case CARD_PACKS_ACTION_TYPE.SET_ERROR:\r\n    case CARD_PACKS_ACTION_TYPE.SET_LOADING:\r\n    case CARD_PACKS_ACTION_TYPE.SET_CARD_PACKS:\r\n    case CARD_PACKS_ACTION_TYPE.SET_CARD_PACKS_TOTAL_COUNT:\r\n    case CARD_PACKS_ACTION_TYPE.SET_PAGE:\r\n    case CARD_PACKS_ACTION_TYPE.SET_PAGE_COUNT:\r\n    case CARD_PACKS_ACTION_TYPE.SET_ONLY_MY_PACKS:\r\n    case CARD_PACKS_ACTION_TYPE.SET_SHOW_EMPTY_PACKS:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case APP_ACTION_TYPE.CLEAR_STORE:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setCardPacksAC = (cardPacks: Array<CardsPackType>) => {\r\n  return {\r\n    type: CARD_PACKS_ACTION_TYPE.SET_CARD_PACKS as const, payload: {cardPacks}\r\n  };\r\n};\r\n\r\nexport const setPageAC = (page: number) => {\r\n  return {\r\n    type: CARD_PACKS_ACTION_TYPE.SET_PAGE as const, payload: {page}\r\n  };\r\n};\r\n\r\nconst setCardPacksTotalCountAC = (cardPacksTotalCount: number) => {\r\n  return {\r\n    type: CARD_PACKS_ACTION_TYPE.SET_CARD_PACKS_TOTAL_COUNT as const, payload: {cardPacksTotalCount}\r\n  };\r\n};\r\n\r\nexport const setPageCountAC = (pageCount: number) => {\r\n  return {\r\n    type: CARD_PACKS_ACTION_TYPE.SET_PAGE_COUNT as const, payload: {pageCount}\r\n  };\r\n};\r\n\r\nexport const setOnlyMyPacksAC = (onlyMyPacks: boolean) => {\r\n  return {\r\n    type: CARD_PACKS_ACTION_TYPE.SET_ONLY_MY_PACKS as const, payload: {onlyMyPacks}\r\n  };\r\n};\r\n\r\nexport const setShowEmptyPacksAC = (showEmptyPacks: boolean) => {\r\n  return {\r\n    type: CARD_PACKS_ACTION_TYPE.SET_SHOW_EMPTY_PACKS as const, payload: {showEmptyPacks}\r\n  };\r\n};\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: CARD_PACKS_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: CARD_PACKS_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\nexport const setCardsPacksTC = (pageCount: number, page: number, user_id?: string, packName?: string): AppThunk => async (dispatch, getState) => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  dispatch(setCardPacksAC([]));\r\n  const min = getState().cardPacks.showEmptyPacks ? undefined : 1;\r\n  try {\r\n    const response = await cardPacksApi.getCardsPacks({pageCount, page, user_id, packName, min: min});\r\n    dispatch(setCardPacksAC(response.data.cardPacks));\r\n    dispatch(setCardPacksTotalCountAC(response.data.cardPacksTotalCount));\r\n\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const deleteCardsPackTC = (cardPackId: string): AppThunk => async (dispatch, getState) => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    await cardPacksApi.deleteCardsPack(cardPackId);\r\n    const {pageCount, page, onlyMyPacks} = getState().cardPacks;\r\n    const _id = onlyMyPacks ? getState().appStatus.authData._id : undefined;\r\n    dispatch(setCardsPacksTC(pageCount, page, _id));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const addCardsPackTC = (cardPack: Partial<AddCardsPackRequestType>): AppThunk => async (dispatch, getState) => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    await cardPacksApi.addCardsPack(cardPack);\r\n    const {pageCount, page, onlyMyPacks} = getState().cardPacks;\r\n    const _id = onlyMyPacks ? getState().appStatus.authData._id : undefined;\r\n    dispatch(setCardsPacksTC(pageCount, page, _id));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const updateCardsPack = (id: string, name?: string): AppThunk => async (dispatch, getState) => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    await cardPacksApi.editCardsPack(id, name);\r\n    const {pageCount, page, onlyMyPacks} = getState().cardPacks;\r\n    const _id = onlyMyPacks ? getState().appStatus.authData._id : undefined;\r\n    dispatch(setCardsPacksTC(pageCount, page, _id));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport type CardPacksReducerActionsType =\r\n  ReturnType<typeof setErrorAC>\r\n  | ReturnType<typeof setLoadingAC>\r\n  | ReturnType<typeof setCardPacksAC>\r\n  | ReturnType<typeof setPageAC>\r\n  | ReturnType<typeof setPageCountAC>\r\n  | ReturnType<typeof setCardPacksTotalCountAC>\r\n  | ReturnType<typeof setOnlyMyPacksAC>\r\n  | ReturnType<typeof setShowEmptyPacksAC>\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport styles from './PassChange.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {changePassTC, PassChangeStateType} from '../../store/pass-change-reducer';\r\nimport {AppStateType} from '../../store/store';\r\nimport {matchPasswordValidator, passwordValidator} from '../../utils/validators/password-validator';\r\nimport {Spinner} from '../spinner/Spinner';\r\nimport {PATH} from '../../routes/Routes';\r\n\r\ntype PropsType = {};\r\n\r\nexport const SetNewPass: React.FC<PropsType> = props => {\r\n\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [newPassword2, setConfirmPassword] = useState('');\r\n\r\n  const statePassReducer = useSelector<AppStateType, PassChangeStateType>(state => state.passChange);\r\n\r\n  const dispatch = useDispatch();\r\n  const {token} = useParams<{token: string}>();\r\n  const changePass = () => {\r\n    dispatch(changePassTC(newPassword, token));\r\n  };\r\n\r\n  const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setNewPassword(e.currentTarget.value);\r\n  };\r\n  const changeConfirmPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setConfirmPassword(e.currentTarget.value);\r\n  };\r\n\r\n  if (statePassReducer.isChangedPass) {\r\n    return <Redirect to={PATH.LOGIN}/>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.passChange}>\r\n      <div className={styles.passChangeContainer}>\r\n        {!statePassReducer.loading ? <div className={styles.passChangeForm}>\r\n            <span>Смена пароля</span>\r\n            Введите новый пароль<input\r\n            type=\"password\"\r\n            value={newPassword}\r\n            onChange={changePassword}/>\r\n            Подтвердите новый пароль<input\r\n            type=\"password\"\r\n            value={newPassword2}\r\n            onChange={changeConfirmPassword}/>\r\n            <button\r\n              disabled={!passwordValidator(newPassword) || !matchPasswordValidator(newPassword, newPassword2)}\r\n              onClick={changePass}>Отправить\r\n            </button>\r\n            {!passwordValidator(newPassword) &&\r\n            <span style={{color: 'red'}}>Пароль должен содержать более 6 символов</span>}\r\n            {!matchPasswordValidator(newPassword, newPassword2) &&\r\n            <span style={{color: 'red'}}>Пароли не совпадают</span>}\r\n          </div>\r\n          :\r\n          <Spinner/>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {SetNewPass} from '../components/set-new-pass/SetNewPass';\r\n\r\ntype PropsType = {};\r\n\r\nexport const SetNewPasswordPage: React.FC<PropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Password Change Page</h2>\r\n      <SetNewPass/>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport styles from './Modal.module.css';\r\nimport {Button} from 'antd';\r\n\r\ntype ModalProps = {\r\n  onClose: () => void\r\n  onSubmit: () => void\r\n  visibility: boolean\r\n}\r\nexport const Modal: React.FC<ModalProps> = props => {\r\n  const {onClose, onSubmit, visibility} = props;\r\n  if (!visibility) {\r\n    window.document.body.classList.remove('ov_hidden');\r\n    return null;\r\n  }\r\n\r\n  window.document.body.classList.add('ov_hidden');\r\n\r\n  return (\r\n    <div\r\n      className={styles.modal}\r\n      onClick={props.onClose}>\r\n      <div\r\n        className={styles.modalContent}\r\n        onClick={(event) => {\r\n          event.stopPropagation();\r\n        }}>\r\n        <div className={styles.children}>\r\n          <div\r\n            className={styles.closeBtn}\r\n            onClick={onClose}>X\r\n          </div>\r\n          {props.children}\r\n        </div>\r\n        <Button onClick={onSubmit}>Подтвердить</Button>\r\n        <Button onClick={onClose}>Закрыть</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport styles from './CardPack.module.css';\r\nimport {CardsPackType} from '../../utils/cardPacksApi';\r\nimport {Button, Col, Input, Popconfirm, Row} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport {Modal} from '../modal/Modal';\r\n\r\ntype PropsType = {\r\n  cardPack: CardsPackType\r\n  isMyCardPack: boolean\r\n  onDelete: () => void\r\n  onEdit: (newName: string) => void\r\n};\r\n\r\nexport const CardPack: React.FC<PropsType> = props => {\r\n\r\n  const {cardPack, onDelete, isMyCardPack, onEdit} = props;\r\n\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  const [newName, setNewName] = useState<string>(cardPack.name);\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        visibility={showModal}\r\n        onClose={closeModal}\r\n        onSubmit={() => onEdit(newName)}>\r\n        <h2>Редактирование колоды</h2>\r\n        <Input\r\n          allowClear\r\n          width={200}\r\n          placeholder={'Новое название'}\r\n          onChange={e => setNewName(e.currentTarget.value)}\r\n          value={newName}/>\r\n      </Modal>\r\n      <div className={styles.pack}>\r\n        <div className={styles.packHeader}>\r\n          <h3 style={{textAlign: 'center', textTransform: 'uppercase'}}>{cardPack.name}</h3>\r\n        </div>\r\n        <div className={styles.ratingCount}>\r\n          <div className={styles.cardsCount}>\r\n            <h4>Cards count:</h4>\r\n            <span>{cardPack.cardsCount}</span>\r\n          </div>\r\n          <div className={styles.rating}>\r\n            <h4>Rating:</h4>\r\n            <span>{cardPack.rating}</span>\r\n          </div>\r\n        </div>\r\n        <div className={styles.ratingCount}>\r\n          <div className={styles.cardsCount}>\r\n            <h4>Shots:</h4>\r\n            <span>{cardPack.shots}</span>\r\n          </div>\r\n          <div className={styles.rating}>\r\n            <h4>Grade:</h4>\r\n            <span>{cardPack.grade}</span>\r\n          </div>\r\n        </div>\r\n        <Row\r\n          align={'middle'}>\r\n          <Col span={12}>\r\n            <Link to={`/cards/${cardPack._id}`}>\r\n              <Button\r\n                className={styles.action}\r\n                disabled={!isMyCardPack && cardPack.cardsCount === 0}\r\n              >\r\n                View</Button></Link></Col>\r\n          <Col span={12}>\r\n            <Link to={`/train/${cardPack._id}`}>\r\n              <Button\r\n                className={styles.action}\r\n                disabled={!isMyCardPack && cardPack.cardsCount === 0}\r\n              >\r\n                Train\r\n              </Button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        {isMyCardPack && <Row\r\n            align={'middle'}>\r\n            <Col>\r\n                <Button\r\n                    className={styles.action}\r\n                    onClick={openModal}>\r\n                    Edit\r\n                </Button>\r\n            </Col>\r\n            <Col>\r\n                <Popconfirm\r\n                    onConfirm={onDelete}\r\n                    title={'Точно удалить?'}\r\n                    cancelText={'Нет'}\r\n                    okText={'Да'}\r\n                    placement={'top'}\r\n                    cancelButtonProps={{type: 'primary'}}\r\n                    okButtonProps={{danger: true}}>\r\n                    <Button\r\n                        className={styles.action}\r\n                        danger>Remove\r\n                    </Button>\r\n                </Popconfirm>\r\n            </Col>\r\n        </Row>}\r\n        <div className={styles.user}>\r\n          <span>{cardPack.user_name}</span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import axios from 'axios';\r\nimport {API} from './constants';\r\n\r\n\r\nconst instance = axios.create({baseURL: API, withCredentials: true});\r\n\r\nexport const cardPacksApi = {\r\n  getCardsPacks(options: Partial<GetCardsPacksRequestType>) {\r\n    return instance.get<CardsPacksResponseType>('/cards/pack', {params: {...options}});\r\n  },\r\n\r\n  deleteCardsPack(cardPackId: string) {\r\n    return instance.delete('/cards/pack?id=' + cardPackId);\r\n  },\r\n\r\n  addCardsPack(cardsPack: Partial<AddCardsPackRequestType>) {\r\n    return instance.post('/cards/pack', {cardsPack: cardsPack});\r\n  },\r\n\r\n  editCardsPack(_id: string, name?: string) {\r\n    return instance.put('/cards/pack', {cardsPack: {_id, name}});\r\n  }\r\n};\r\n\r\nexport type CardsPacksResponseType = {\r\n  cardPacks: Array<CardsPackType>\r\n  cardPacksTotalCount: number\r\n  maxCardsCount: number\r\n  minCardsCount: number\r\n  page: number\r\n  pageCount: number\r\n}\r\n\r\nexport type CardsPackType = {\r\n  _id: string\r\n  user_id: string\r\n  user_name: string\r\n  name: string\r\n  path: string\r\n  cardsCount: number\r\n  grade: number\r\n  shots: number\r\n  rating: number\r\n  type: 'pack' | 'folder'\r\n  created: string\r\n  updated: string\r\n  __v: string\r\n}\r\nexport type AddCardsPackRequestType = {\r\n  name: string\r\n  path: string\r\n  grade: number\r\n  shots: number\r\n  rating: number\r\n  deckCover: string\r\n  private: boolean\r\n  type: 'pack' | 'folder'\r\n}\r\n\r\nexport type GetCardsPacksRequestType = {\r\n  packName: string\r\n  min: number\r\n  max: number\r\n  sortPacks: string\r\n  page: number\r\n  pageCount: number\r\n  user_id: string\r\n}","import {AppActionsType, AppThunk} from './store';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\nimport {AddCardRequestType, cardsApi, CardType} from '../utils/cardsApi';\r\n\r\nexport enum CARDS_ACTION_TYPE {\r\n  SET_ERROR = 'CARDS/SET_ERROR',\r\n  SET_LOADING = 'CARDS/SET_LOADING',\r\n  SET_PAGE = 'CARDS/SET_PAGE',\r\n  SET_PAGE_COUNT = 'CARDS/SET_PAGE_COUNT',\r\n  SET_CARDS = 'CARDS/SET_CARDS',\r\n  SET_CARDS_TOTAL_COUNT = 'CARDS/SET_CARDS_TOTAL_COUNT',\r\n  SET_PACK_OWNER = 'CARDS/SET_PACK_OWNER'\r\n}\r\n\r\nexport type CardsStateType = {\r\n  packOwner: string\r\n  cardsPackId: string\r\n  error: null | string\r\n  loading: boolean\r\n  cards: Array<CardType>\r\n  cardsTotalCount: number\r\n  maxCardsCount: number\r\n  minCardsCount: number\r\n  page: number\r\n  pageCount: number\r\n}\r\n\r\nconst initialState: CardsStateType = {\r\n  packOwner: '',\r\n  cardsPackId: '',\r\n  error: null,\r\n  loading: false,\r\n  cards: [],\r\n  cardsTotalCount: 0,\r\n  maxCardsCount: 0,\r\n  minCardsCount: 0,\r\n  pageCount: 10,\r\n  page: 1\r\n};\r\n\r\nexport const cardsReducer = (state = initialState, action: AppActionsType): CardsStateType => {\r\n  switch (action.type) {\r\n    case CARDS_ACTION_TYPE.SET_ERROR:\r\n    case CARDS_ACTION_TYPE.SET_LOADING:\r\n    case CARDS_ACTION_TYPE.SET_CARDS:\r\n    case CARDS_ACTION_TYPE.SET_CARDS_TOTAL_COUNT:\r\n    case CARDS_ACTION_TYPE.SET_PAGE:\r\n    case CARDS_ACTION_TYPE.SET_PAGE_COUNT:\r\n    case CARDS_ACTION_TYPE.SET_PACK_OWNER:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case APP_ACTION_TYPE.CLEAR_STORE:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setCardsAC = (cards: Array<CardType>, cardsPackId: string) => {\r\n  return {\r\n    type: CARDS_ACTION_TYPE.SET_CARDS as const, payload: {cards, cardsPackId}\r\n  };\r\n};\r\n\r\nconst setPackOwnerAC = (packOwner: string) => {\r\n  return {\r\n    type: CARDS_ACTION_TYPE.SET_PACK_OWNER as const, payload: {packOwner}\r\n  };\r\n};\r\n\r\nexport const setPageAC = (page: number) => {\r\n  return {\r\n    type: CARDS_ACTION_TYPE.SET_PAGE as const, payload: {page}\r\n  };\r\n};\r\n\r\nconst setCardsTotalCountAC = (cardsTotalCount: number) => {\r\n  return {\r\n    type: CARDS_ACTION_TYPE.SET_CARDS_TOTAL_COUNT as const, payload: {cardsTotalCount}\r\n  };\r\n};\r\n\r\nexport const setPageCountAC = (pageCount: number) => {\r\n  return {\r\n    type: CARDS_ACTION_TYPE.SET_PAGE_COUNT as const, payload: {pageCount}\r\n  };\r\n};\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: CARDS_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: CARDS_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\nexport const setCardsTC = (pageCount: number, page: number, cardsPack_id: string): AppThunk => async dispatch => {\r\n\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  dispatch(setCardsAC([], cardsPack_id));\r\n\r\n  try {\r\n    const response = await cardsApi.getCards({pageCount, page, cardsPack_id});\r\n    dispatch(setCardsAC(response.data.cards, cardsPack_id));\r\n    dispatch(setCardsTotalCountAC(response.data.cardsTotalCount));\r\n\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const deleteCardTC = (cardId: string, cardsPackId: string): AppThunk => async (dispatch, getState) => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    await cardsApi.deleteCard(cardId);\r\n    const {pageCount, page} = getState().cards;\r\n    dispatch(setCardsTC(pageCount, page, cardsPackId));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const addCardTC = (card: Partial<AddCardRequestType>): AppThunk => async (dispatch, getState) => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    await cardsApi.addCard(card);\r\n    const {pageCount, page} = getState().cards;\r\n    dispatch(setCardsTC(pageCount, page, getState().cards.cardsPackId));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const updateCardTC = (_id: string, question?: string, answer?: string): AppThunk => async (dispatch, getState) => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    await cardsApi.editCard(_id, question, answer);\r\n    const {pageCount, page} = getState().cards;\r\n    dispatch(setCardsTC(pageCount, page, getState().cards.cardsPackId));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport type CardsReducerActionsType =\r\n  ReturnType<typeof setErrorAC>\r\n  | ReturnType<typeof setLoadingAC>\r\n  | ReturnType<typeof setCardsAC>\r\n  | ReturnType<typeof setPageAC>\r\n  | ReturnType<typeof setPageCountAC>\r\n  | ReturnType<typeof setCardsTotalCountAC>\r\n  | ReturnType<typeof setPackOwnerAC>\r\n","import React from 'react';\r\nimport styles from './CardPacks.module.css';\r\nimport {CardsPackType} from '../../utils/cardPacksApi';\r\nimport {CardPack} from './CardPack';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {deleteCardsPackTC, updateCardsPack} from '../../store/card-packs-reducer';\r\nimport {AppStateType} from '../../store/store';\r\n\r\ntype PropsType = {\r\n  cardPacks: Array<CardsPackType>\r\n};\r\n\r\nexport const CardPacks: React.VFC<PropsType> = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const userId = useSelector<AppStateType, string | undefined>(state => state.appStatus.authData._id);\r\n\r\n  const {cardPacks} = props;\r\n\r\n  const deleteCardsPack = (cardsPackId: string) => {\r\n    dispatch(deleteCardsPackTC(cardsPackId));\r\n  };\r\n\r\n  const editCardPack = (id: string, name: string) => {\r\n    //todo: Проверка пустых строк\r\n    dispatch(updateCardsPack(id, name));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.packsContainer}>\r\n      {cardPacks.map(cp => <CardPack\r\n        cardPack={cp}\r\n        isMyCardPack={userId === cp.user_id}\r\n        onDelete={() => deleteCardsPack(cp._id)}\r\n        onEdit={(name: string) => editCardPack(cp._id, name)}\r\n        key={cp._id}/>)}\r\n    </div>\r\n  );\r\n};","import {Button, Input} from 'antd';\r\nimport React, {ChangeEvent, useState} from 'react';\r\nimport styles from './FieldWithButton.module.css';\r\n\r\ntype PropsType = {\r\n  inputPlaceholder?: string\r\n  buttonLabel?: string\r\n  disabled?: boolean\r\n  action: (searchText: string) => void\r\n};\r\n\r\nexport const FieldWithButton: React.FC<PropsType> = props => {\r\n\r\n  const [text, setText] = useState<string>('');\r\n\r\n  const inputChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setText(event.currentTarget.value);\r\n  };\r\n\r\n  const onSearch = () => {\r\n    props.action(text);\r\n    setText('');\r\n  };\r\n\r\n  return (\r\n    <div className={styles.searchPanel}>\r\n      <Input\r\n        disabled={props.disabled}\r\n        placeholder={props.inputPlaceholder}\r\n        value={text}\r\n        onKeyPress={event => event.key === 'Enter' && onSearch()}\r\n        onChange={inputChangeHandler}/>\r\n      <Button\r\n        onClick={onSearch}\r\n        disabled={props.disabled}>{props.buttonLabel ?? 'Do it'}</Button>\r\n    </div>\r\n  );\r\n};","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport styles from './CardPacksPage.module.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from '../store/store';\r\nimport {CardPacks} from '../components/card-packs/CardPacks';\r\nimport {Alert, Pagination, Spin, Switch} from 'antd';\r\nimport {\r\n  addCardsPackTC,\r\n  CardPacksStateType,\r\n  setCardsPacksTC,\r\n  setOnlyMyPacksAC,\r\n  setPageAC,\r\n  setPageCountAC, setShowEmptyPacksAC\r\n} from '../store/card-packs-reducer';\r\nimport {CheckOutlined, CloseOutlined} from '@ant-design/icons';\r\nimport {FieldWithButton} from '../components/field-with-button/FieldWithButton';\r\nimport {PATH} from '../routes/Routes';\r\n\r\ntype PropsType = {};\r\n\r\nexport const CardPacksPage: React.FC<PropsType> = props => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n  const myId = useSelector<AppStateType, string>(state => state.appStatus.authData._id ?? '');\r\n\r\n  const {\r\n    error,\r\n    loading,\r\n    cardPacks,\r\n    cardPacksTotalCount,\r\n    page,\r\n    pageCount,\r\n    onlyMyPacks,\r\n    showEmptyPacks\r\n  } = useSelector<AppStateType, CardPacksStateType>(state => state.cardPacks);\r\n\r\n  useEffect(() => {\r\n    dispatch(setCardsPacksTC(pageCount, page, onlyMyPacks ? myId : undefined));\r\n  }, [pageCount, page, onlyMyPacks, showEmptyPacks, myId, dispatch]);\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={PATH.LOGIN}/>;\r\n  }\r\n  const onChangeHandler = (page: number) => {\r\n    dispatch(setPageAC(page));\r\n  };\r\n\r\n  const onShowSizeChangeHandler = (current: number, size: number) => {\r\n    dispatch(setPageCountAC(size));\r\n  };\r\n\r\n  const onSearch = (searchText: string) => {\r\n    dispatch(setCardsPacksTC(pageCount, page, onlyMyPacks ? myId : undefined, searchText));\r\n  };\r\n\r\n  const onAdd = (cardPackName: string) => {\r\n    dispatch(addCardsPackTC({name: cardPackName}));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Card Packs Page</h2>\r\n      <div className={styles.optionsBar}>\r\n        <div className={styles.options}><Pagination\r\n          onShowSizeChange={onShowSizeChangeHandler}\r\n          onChange={onChangeHandler}\r\n          defaultCurrent={1}\r\n          showSizeChanger={true}\r\n          current={page}\r\n          pageSize={pageCount}\r\n          disabled={loading}\r\n          showQuickJumper\r\n          total={cardPacksTotalCount}/>\r\n        </div>\r\n        <div className={styles.checkBoxBar}>\r\n          <div className={styles.checkBoxBarItem}><label>Только мои колоды</label>\r\n            <Switch\r\n              disabled={loading}\r\n              checkedChildren={<CheckOutlined/>}\r\n              unCheckedChildren={<CloseOutlined/>}\r\n              checked={onlyMyPacks}\r\n              onChange={(checked) => dispatch(setOnlyMyPacksAC(checked))}\r\n            /></div>\r\n          <div className={styles.checkBoxBarItem}><label>Показывать пустые колоды</label>\r\n            <Switch\r\n              disabled={loading}\r\n              checkedChildren={<CheckOutlined/>}\r\n              unCheckedChildren={<CloseOutlined/>}\r\n              checked={showEmptyPacks}\r\n              onChange={(checked) => dispatch(setShowEmptyPacksAC(checked))}\r\n            /></div>\r\n        </div>\r\n        <div className={styles.searchBar}>\r\n          <FieldWithButton\r\n            disabled={loading}\r\n            inputPlaceholder={'Введите название колоды'}\r\n            buttonLabel={'Поиск'}\r\n            action={onSearch}/>\r\n        </div>\r\n        <div className={styles.searchBar}>\r\n          <FieldWithButton\r\n            disabled={loading}\r\n            inputPlaceholder={'Название новой колоды'}\r\n            buttonLabel={'Добавить'}\r\n            action={onAdd}/>\r\n        </div>\r\n        <div style={{marginTop: '25px', textAlign: 'center'}}>\r\n          {error && <Alert\r\n              message={error}\r\n              type=\"error\"\r\n              closeText={'Close'}\r\n              closable\r\n          />}\r\n        </div>\r\n      </div>\r\n      {loading\r\n        ? <div style={{marginTop: '25px', textAlign: 'center'}}>\r\n          <Spin\r\n            size={'large'}\r\n            tip={'Loading...'}/>\r\n        </div>\r\n        : <CardPacks cardPacks={cardPacks}/>\r\n      }\r\n    </>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport styles from './Card.module.css';\r\nimport {CardType} from '../../utils/cardsApi';\r\nimport {Button, Col, Input, Popconfirm, Row} from 'antd';\r\nimport {Modal} from '../modal/Modal';\r\n\r\ntype PropsType = {\r\n  card: CardType\r\n  onDelete: () => void\r\n  onEdit: (question?: string, answer?: string) => void\r\n  ownCard?: boolean\r\n};\r\n\r\nexport const Card: React.FC<PropsType> = props => {\r\n  const {card, onDelete, onEdit, ownCard = false} = props;\r\n\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  const [question, setQuestion] = useState<string>(card.question);\r\n  const [answer, setAnswer] = useState<string>(card.answer);\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const modal: React.ReactNode = <Modal\r\n    onClose={closeModal}\r\n    onSubmit={() => onEdit(question ?? undefined, answer ?? undefined)}\r\n    visibility={showModal}>\r\n    <h2>Редактирование карточки:</h2>\r\n    <Input\r\n      allowClear\r\n      width={200}\r\n      placeholder={'Введите ваш вопрос'}\r\n      onChange={e => setQuestion(e.currentTarget.value)}\r\n      value={question}/>\r\n    <Input\r\n      style={{marginTop: '15px'}}\r\n      allowClear\r\n      width={200}\r\n      placeholder={'Введите ваш ответ'}\r\n      onChange={e => setAnswer(e.currentTarget.value)}\r\n      value={answer}/>\r\n  </Modal>;\r\n\r\n  const buttons: JSX.Element = <Row justify={'center'}>\r\n    <Col span={12}>\r\n      <Button\r\n        className={styles.cardButton}\r\n        onClick={openModal}>\r\n        Edit\r\n      </Button>\r\n    </Col>\r\n    <Col span={12}>\r\n      <Popconfirm\r\n        onConfirm={onDelete}\r\n        title={'Точно удалить?'}\r\n        cancelText={'Нет'}\r\n        okText={'Да'}\r\n        placement={'top'}\r\n        cancelButtonProps={{type: 'primary'}}\r\n        okButtonProps={{danger: true}}>\r\n        < Button\r\n          danger\r\n          className={styles.cardButton}>\r\n          Remove\r\n        </Button>\r\n      </Popconfirm>\r\n    </Col>\r\n  </Row>;\r\n\r\n  return (\r\n    <>\r\n      {modal}\r\n      <div className={styles.card}>\r\n        <Row\r\n          justify={'center'}\r\n          align={'middle'}>\r\n          <h3>Q: {card.question}</h3>\r\n        </Row>\r\n        <Row\r\n          justify={'center'}\r\n          align={'middle'}>\r\n          <span>A: {card.answer}</span>\r\n        </Row>\r\n        <Row\r\n          justify={'center'}\r\n          style={{margin: '10px 0'}}>\r\n          <Col span={12}>\r\n            <span className={styles.cardStats}>Rating: </span>\r\n            <span className={styles.cardStatsValue}>{card.rating}</span>\r\n          </Col>\r\n          <Col span={12}>\r\n            <span className={styles.cardStats}>Shots: </span>\r\n            <span className={styles.cardStatsValue}>{card.shots}</span>\r\n          </Col>\r\n        </Row>\r\n        <Row\r\n          justify={'center'}\r\n          style={{margin: '10px 0'}}>\r\n          <Col span={12}><span className={styles.cardStats}>Grade: </span>\r\n            <span className={styles.cardStatsValue}>{card.grade.toFixed(4)}</span></Col>\r\n        </Row>\r\n        {ownCard && buttons}\r\n      </div>\r\n    </>\r\n  );\r\n};","import axios from 'axios';\r\nimport {API} from './constants';\r\n\r\nconst instance = axios.create({baseURL: API, withCredentials: true});\r\n\r\nexport const cardsApi = {\r\n  getCards(options: Partial<GetCardsRequestType>) {\r\n    return instance.get<CardsResponseType>('/cards/card', {params: {...options}});\r\n  },\r\n  deleteCard(cardId: string) {\r\n    return instance.delete('/cards/card?id=' + cardId);\r\n  },\r\n  addCard(card: Partial<AddCardRequestType>) {\r\n    return instance.post('/cards/card', {card});\r\n  },\r\n  editCard(_id: string, question?: string, answer?: string) {\r\n    return instance.put('/cards/card', {card: {_id, question, answer}});\r\n  },\r\n  gradeCard(grade: CardGradeRequestType) {\r\n    return instance.put<CardGradeResponseType>('/cards/grade', grade);\r\n  }\r\n};\r\n\r\nexport type CardsResponseType = {\r\n  cards: Array<CardType>\r\n  cardsTotalCount: number\r\n  maxGrade: number\r\n  minGrade: number\r\n  page: number\r\n  pageCount: number\r\n  packUserId: string\r\n}\r\n\r\nexport type CardType = {\r\n  answer: string\r\n  question: string\r\n  cardsPack_id: string\r\n  grade: number\r\n  rating: number\r\n  shots: number\r\n  type: 'cards' | 'folder'\r\n  user_id: string\r\n  created: string\r\n  updated: string\r\n  __v: number\r\n  _id: string\r\n}\r\nexport type AddCardRequestType = {\r\n  cardsPack_id: string\r\n  question: string\r\n  answer: string\r\n  grade: number\r\n  shots: number\r\n  rating: number\r\n  answerImg: string\r\n  questionImg: string\r\n  questionVideo: string\r\n  answerVideo: string\r\n  type: string\r\n}\r\n\r\nexport type GetCardsRequestType = {\r\n  cardAnswer: string\r\n  cardQuestion: string\r\n  cardsPack_id: string\r\n  min: number\r\n  max: number\r\n  sortCards: string\r\n  page: number\r\n  pageCount: number\r\n}\r\n\r\nexport type CardGradeRequestType = {\r\n  grade: number\r\n  card_id: string\r\n}\r\n\r\ntype CardGradeResponseType = {\r\n  updatedGrade: {\r\n    _id: string\r\n    cardsPack_id: string\r\n    card_id: string\r\n    user_id: string\r\n    grade: number\r\n    shots: number\r\n  }\r\n}","import {cardsApi, CardType} from '../utils/cardsApi';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\nimport {AppActionsType, AppThunk} from './store';\r\nimport {CardsPackType} from '../utils/cardPacksApi';\r\n\r\nexport enum TRAINIGN_ACTION_TYPE {\r\n  SET_ERROR = 'TRAIN/SET_ERROR',\r\n  SET_LOADING = 'TRAIN/SET_LOADING',\r\n  SET_CARDS = 'TRAIN/SET_CARDS',\r\n  SET_GRADE = 'TRAIN/SET_GRADE'\r\n}\r\n\r\nexport type TrainingStateType = {\r\n  cardsPack: CardsPackType\r\n  error: null | string\r\n  loading: boolean\r\n  cards: Array<CardType>\r\n}\r\n\r\nconst initialState: TrainingStateType = {\r\n  cardsPack: {} as CardsPackType,\r\n  error: null,\r\n  loading: false,\r\n  cards: []\r\n};\r\n\r\nconst setCardsAC = (cards: Array<CardType>, cardsPackId: string) => {\r\n  return {\r\n    type: TRAINIGN_ACTION_TYPE.SET_CARDS as const, payload: {cards, cardsPackId}\r\n  };\r\n};\r\n\r\nconst setGradeAC = (cardId: string, grade: number) => {\r\n  return {\r\n    type: TRAINIGN_ACTION_TYPE.SET_GRADE as const,\r\n    payload: {\r\n      cardId, grade\r\n    }\r\n  };\r\n};\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: TRAINIGN_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: TRAINIGN_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\nexport const setCardsTC = (cardsPack_id: string): AppThunk => async dispatch => {\r\n\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  dispatch(setCardsAC([], cardsPack_id));\r\n\r\n  try {\r\n    const response = await cardsApi.getCards({cardsPack_id, page: 1, pageCount: 1000});\r\n    dispatch(setCardsAC(response.data.cards, cardsPack_id));\r\n\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const setGradeTC = (card_id: string, grade: number): AppThunk => async dispatch => {\r\n\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n\r\n  try {\r\n    const response = await cardsApi.gradeCard({grade, card_id});\r\n    dispatch(setGradeAC(response.data.updatedGrade.card_id, response.data.updatedGrade.grade));\r\n\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const trainingReducer = (state: TrainingStateType = initialState, action: AppActionsType) => {\r\n  switch (action.type) {\r\n    case TRAINIGN_ACTION_TYPE.SET_ERROR:\r\n    case TRAINIGN_ACTION_TYPE.SET_LOADING:\r\n    case TRAINIGN_ACTION_TYPE.SET_CARDS:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case TRAINIGN_ACTION_TYPE.SET_GRADE: {\r\n      return {\r\n        ...state,\r\n        cards: state.cards.map(card => card._id !== action.payload.cardId ? card : {\r\n          ...card,\r\n          grade: action.payload.grade\r\n        })\r\n      };\r\n    }\r\n\r\n    case APP_ACTION_TYPE.CLEAR_STORE:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport type TrainingReducerActionsType =\r\n  ReturnType<typeof setErrorAC>\r\n  | ReturnType<typeof setLoadingAC>\r\n  | ReturnType<typeof setCardsAC>\r\n  | ReturnType<typeof setGradeAC>","import React from 'react';\r\nimport {CardType} from '../../utils/cardsApi';\r\nimport {Card} from './Card';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {deleteCardTC, updateCardTC} from '../../store/cards-reducer';\r\nimport {Col} from 'antd';\r\nimport {AppStateType} from '../../store/store';\r\n\r\ntype PropsType = {\r\n  cards: Array<CardType>\r\n};\r\n\r\nexport const Cards: React.FC<PropsType> = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const userId = useSelector<AppStateType, string | undefined>(state => state.appStatus.authData._id);\r\n  const {cards} = props;\r\n  const deleteCard = (cardId: string, cardsPackId: string) => {\r\n    dispatch(deleteCardTC(cardId, cardsPackId));\r\n  };\r\n\r\n  const editCard = (_id: string, question?: string, answer?: string) => {\r\n    dispatch(updateCardTC(_id, question, answer));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {cards.map(card =>\r\n        <Col\r\n          key={card._id}\r\n          xxl={8}\r\n          xl={12}\r\n          lg={12}\r\n          flex={'none'}>\r\n          <Card\r\n            onDelete={() => deleteCard(card._id, card.cardsPack_id)}\r\n            key={card._id}\r\n            onEdit={(question?: string, answer?: string) => {\r\n              editCard(card._id, question, answer);\r\n            }}\r\n            ownCard={userId === card.user_id}\r\n            card={card}/>\r\n        </Col>\r\n      )}\r\n    </>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport {Button, Col, Input, Row} from 'antd';\r\nimport {AddCardRequestType} from '../../utils/cardsApi';\r\n\r\ntype PropsType = {\r\n  onSubmit: (card: Partial<AddCardRequestType>) => void\r\n  disabled?: boolean\r\n};\r\n\r\nexport const AddCardForm: React.FC<PropsType> = props => {\r\n  const [question, setQuestion] = useState<string>('');\r\n  const [answer, setAnswer] = useState<string>('');\r\n  const rowStyle = {marginBottom: '15px'};\r\n\r\n  const handleSubmit = () => {\r\n    props.onSubmit({question: question, answer: answer});\r\n    clearForm();\r\n  };\r\n\r\n  const clearForm = () => {\r\n    setAnswer('');\r\n    setQuestion('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row\r\n        style={rowStyle}\r\n        wrap\r\n        gutter={20}\r\n        justify={'center'}\r\n        align={'middle'}>\r\n        <Col\r\n          span={4}\r\n          style={{textAlign: 'right'}}>\r\n           <span>\r\n            Вопрос\r\n          </span>\r\n        </Col>\r\n        <Col span={16}>\r\n          <Input\r\n            disabled={props.disabled}\r\n            onChange={e => setQuestion(e.currentTarget.value)}\r\n            value={question}\r\n            size={'small'}\r\n            placeholder={'Вопрос'}/>\r\n        </Col>\r\n      </Row>\r\n      <Row\r\n        style={rowStyle}\r\n        wrap\r\n        gutter={20}\r\n        justify={'center'}\r\n        align={'middle'}>\r\n        <Col\r\n          span={4}\r\n          style={{textAlign: 'right'}}>\r\n           <span>\r\n            Ответ\r\n          </span>\r\n        </Col>\r\n        <Col span={16}>\r\n          <Input.TextArea\r\n            disabled={props.disabled}\r\n            allowClear\r\n            onChange={e => setAnswer(e.currentTarget.value)}\r\n            value={answer}\r\n            size={'small'}\r\n            placeholder={'Ответ'}/>\r\n        </Col>\r\n      </Row>\r\n      <Row\r\n        justify={'center'}\r\n        align={'middle'}\r\n        gutter={20}>\r\n        <Col\r\n          span={16}\r\n          offset={4}>\r\n          <Button\r\n            disabled={props.disabled}\r\n            size={'small'}\r\n            onClick={handleSubmit}\r\n          >\r\n            Добавить\r\n          </Button>\r\n          <Button\r\n            disabled={props.disabled}\r\n            size={'small'}\r\n            onClick={clearForm}\r\n          >\r\n            Отмена\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect, useLocation, useParams} from 'react-router-dom';\r\nimport {AppStateType} from '../store/store';\r\nimport {PATH} from '../routes/Routes';\r\nimport {Cards} from '../components/cards/Cards';\r\nimport {addCardTC, CardsStateType, setCardsTC, setPageAC, setPageCountAC} from '../store/cards-reducer';\r\nimport {Alert, Pagination, Row, Col, Spin, Divider} from 'antd';\r\nimport {AddCardForm} from '../components/cards/AddCardForm';\r\nimport {AddCardRequestType} from '../utils/cardsApi';\r\n\r\ntype PropsType = {};\r\n\r\nexport const CardsPage: React.FC<PropsType> = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n  const {cardPackId} = useParams<{cardPackId: string}>();\r\n\r\n\r\n\r\n  const {\r\n    error,\r\n    loading,\r\n    cards,\r\n    cardsTotalCount,\r\n    page,\r\n    pageCount\r\n  } = useSelector<AppStateType, CardsStateType>(state => state.cards);\r\n\r\n  useEffect(() => {\r\n    dispatch(setCardsTC(pageCount, page, cardPackId));\r\n  }, [pageCount, page, cardPackId, dispatch]);\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={PATH.LOGIN}/>;\r\n  }\r\n\r\n  const onChangeHandler = (page: number) => {\r\n    dispatch(setPageAC(page));\r\n  };\r\n\r\n  const onShowSizeChangeHandler = (current: number, size: number) => {\r\n    dispatch(setPageCountAC(size));\r\n  };\r\n\r\n  const onAddCard = (card: Partial<AddCardRequestType>) => {\r\n    dispatch(addCardTC({...card, cardsPack_id: cardPackId}));\r\n  };\r\n\r\n  const pagination: JSX.Element = <Pagination\r\n    onShowSizeChange={onShowSizeChangeHandler}\r\n    onChange={onChangeHandler}\r\n    defaultCurrent={1}\r\n    showSizeChanger={true}\r\n    current={page}\r\n    pageSize={pageCount}\r\n    disabled={loading || cardsTotalCount === 0}\r\n    showQuickJumper\r\n    total={cardsTotalCount}/>;\r\n\r\n  return (\r\n    <>\r\n      <Row justify={'center'}>\r\n        <Col\r\n          span={16}\r\n          offset={4}>\r\n          {pagination}\r\n        </Col>\r\n      </Row>\r\n      <Divider plain>\r\n        {cardPackId}\r\n      </Divider>\r\n        <Row justify={'center'}>\r\n          <Col span={12}>\r\n            <AddCardForm\r\n              onSubmit={onAddCard}\r\n              disabled={loading}/>\r\n          </Col>\r\n        </Row>\r\n      {error &&\r\n      <Row\r\n          style={{marginTop: '25px'}}\r\n          justify={'center'}>\r\n          <Col>\r\n              <Alert\r\n                  message={error}\r\n                  type=\"error\"\r\n                  closeText={'Close'}\r\n                  closable\r\n              />\r\n          </Col>\r\n      </Row>}\r\n      {loading\r\n        ? <Row justify={'center'}>\r\n          <Spin\r\n            size={'large'}\r\n            tip={'Loading...'}/>\r\n        </Row>\r\n        :\r\n        <>\r\n          <Divider plain>\r\n            {cards.length === 0 ? 'А карточек-то нет....' : 'Карточки из колоды'}\r\n          </Divider>\r\n          <Row\r\n            style={{padding: '25px'}}\r\n            justify={'center'}\r\n            wrap\r\n            gutter={[40, 40]}>\r\n            <Cards cards={cards}/>\r\n          </Row>\r\n        </>\r\n      }\r\n    </>\r\n  );\r\n};","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {LoginPage} from '../Pages/LoginPage';\r\nimport {RegisterPage} from '../Pages/RegisterPage';\r\nimport {ProfilePage} from '../Pages/ProfilePage';\r\nimport {PassRecoveryPage} from '../Pages/PassRecoveryPage';\r\nimport {TestPage} from '../Pages/TestPage';\r\nimport {Page404} from '../Pages/Page404';\r\nimport {SetNewPasswordPage} from '../Pages/SetNewPasswordPage';\r\nimport {CardPacksPage} from '../Pages/CardPacksPage';\r\nimport {CardsPage} from '../Pages/CardsPage';\r\nimport {TrainPage} from '../Pages/TrainPage';\r\n\r\nexport enum PATH {\r\n  LOGIN = '/login',\r\n  REGISTER = '/register',\r\n  PROFILE = '/profile',\r\n  CARD_PACKS = '/card-packs',\r\n  CARDS = '/cards',\r\n  TRAINING = '/train',\r\n  PAGE404 = '/404',\r\n  PASS_RECOVERY = '/password-recovery',\r\n  TEST = '/test',\r\n  SET_NEW_PASSWORD = '/set-new-password'\r\n}\r\n\r\nexport const Routes: React.VFC = () => {\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route\r\n          path={'/'}\r\n          exact\r\n          render={() => <Redirect to={PATH.TEST}/>}\r\n        />\r\n        <Route\r\n          path={PATH.LOGIN}\r\n          exact\r\n          render={() => <LoginPage/>}/>\r\n        <Route\r\n          path={PATH.REGISTER}\r\n          exact\r\n          render={() => <RegisterPage/>}/>\r\n        <Route\r\n          path={PATH.PROFILE}\r\n          exact\r\n          render={() => <ProfilePage/>}/>\r\n        <Route\r\n          path={PATH.PASS_RECOVERY}\r\n          exact\r\n          render={() => <PassRecoveryPage/>}/>\r\n        <Route\r\n          path={PATH.CARD_PACKS}\r\n          exact\r\n          render={() => <CardPacksPage/>}/>\r\n        <Route\r\n          path={PATH.SET_NEW_PASSWORD + '/:token'}\r\n          exact\r\n          render={() => <SetNewPasswordPage/>}/>\r\n        <Route\r\n          path={PATH.CARDS + '/:cardPackId'}\r\n          exact\r\n          render={() => <CardsPage/>}/>\r\n        <Route\r\n          path={PATH.TRAINING + '/:cardPackId'}\r\n          exact\r\n          render={() => <TrainPage/>}/>\r\n        <Route\r\n          path={PATH.TEST}\r\n          exact\r\n          render={() => <TestPage/>}/>\r\n        <Route render={() => <Page404/>}/>\r\n      </Switch>\r\n    </>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport styles from './TrainingCard.module.css';\r\nimport {CardType} from '../../utils/cardsApi';\r\nimport {Button, Col, Row} from 'antd';\r\n\r\ntype PropsType = {\r\n  card: CardType,\r\n  showAnswer: boolean\r\n};\r\n\r\nexport const TrainingCard: React.FC<PropsType> = props => {\r\n  const {card, showAnswer} = props;\r\n\r\n  return (\r\n    <>\r\n      <Row\r\n        className={styles.title}\r\n        justify={'center'}>\r\n        Вопрос:\r\n      </Row>\r\n      <Row\r\n        className={styles.question}\r\n        justify={'center'}>\r\n        {card.question}\r\n      </Row>\r\n      {showAnswer && <><Row\r\n          className={styles.title}\r\n          justify={'center'}>\r\n          Ответ:\r\n      </Row>\r\n          <Row\r\n              className={styles.question}\r\n              justify={'center'}>\r\n            {card.answer}\r\n          </Row></>}\r\n\r\n    </>\r\n  );\r\n};","import {Button, Col, Popconfirm, Row, Space} from 'antd';\r\nimport React, {useEffect, useState} from 'react';\r\nimport styles from './TrainPage.module.css';\r\nimport {Link, Redirect, useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {setCardsTC, setGradeTC, TrainingStateType} from '../store/training-reducer';\r\nimport {TrainingCard} from '../components/training-card/TrainingCard';\r\nimport {AppStateType} from '../store/store';\r\nimport {CardType} from '../utils/cardsApi';\r\nimport {Spinner} from '../components/spinner/Spinner';\r\nimport {PATH} from '../routes/Routes';\r\n\r\ntype PropsType = {};\r\n\r\nexport const TrainPage: React.FC<PropsType> = props => {\r\n  const [currentCard, setCurrentCard] = useState<CardType | null>(null);\r\n  const [firstRun, setFirstRun] = useState<boolean>(true);\r\n  const [checked, setChecked] = useState(false);\r\n  const [returnToPacks, setReturnToPacks] = useState<boolean>(false);\r\n  const {cardPackId} = useParams<{cardPackId: string}>();\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n  const {cards, cardsPack, error, loading} = useSelector<AppStateType, TrainingStateType>(state => state.train);\r\n  const dispatch = useDispatch();\r\n  const grades: Array<string> = ['Не знаю', 'Знаю плохо', 'Нужно повторить', 'Знаю хорошо', 'Знаю отлично'];\r\n\r\n  const setNextCard = () => {\r\n    setCurrentCard(getRandomCard(cards));\r\n    setChecked(false);\r\n  };\r\n\r\n  const getRandomCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + ( 6 - card.grade ) * ( 6 - card.grade ), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: {sum: number, id: number}, card, i) => {\r\n        const newSum = acc.sum + ( 6 - card.grade ) * ( 6 - card.grade );\r\n        return {sum: newSum, id: newSum < rand ? i : acc.id};\r\n      }\r\n      , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res);\r\n\r\n    return cards[res.id + 1];\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('Training page useEffect call');\r\n    if (firstRun) {\r\n      console.log('dispatch(setCardsTC(cardPackId))');\r\n      dispatch(setCardsTC(cardPackId));\r\n      setFirstRun(false);\r\n    }\r\n\r\n    if (cards.length > 0) {\r\n      setNextCard();\r\n    }\r\n\r\n    return () => {\r\n      console.log('Training page useEffect off');\r\n    };\r\n\r\n  }, [cardPackId, dispatch, firstRun, cards]);\r\n\r\n  if (cards.length === 0) {\r\n    return <>\r\n      <Row>\r\n        <h3>Вы выбрали пустую колоду</h3>\r\n      </Row>\r\n    </>;\r\n  }\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={PATH.LOGIN}/>;\r\n  }\r\n\r\n  if (returnToPacks) {\r\n    return <Redirect to={PATH.CARD_PACKS}/>;\r\n  }\r\n\r\n  const takeGrade = (grade: number) => {\r\n    if (currentCard)\r\n      dispatch(setGradeTC(currentCard._id, grade));\r\n  };\r\n  const gradeButtons: Array<JSX.Element> = grades.map((grade, index) =>\r\n    <Button\r\n      onClick={() => takeGrade(index + 1)}\r\n      disabled={!checked || loading}>{grade}</Button>);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <h3>Learning Page</h3>\r\n      </Row> {loading\r\n      ? <Row><Spinner/></Row>\r\n      : currentCard && <TrainingCard\r\n        showAnswer={checked}\r\n        card={currentCard}/>}\r\n      <Row\r\n        justify={'center'}\r\n        style={{marginTop: '10px'}}>\r\n        <Space>\r\n          {!checked && <Button onClick={() => setChecked(true)}>Показать ответ</Button>}\r\n          <Button\r\n            onClick={setNextCard}\r\n            disabled={loading}>Следующая карта</Button></Space>\r\n      </Row>\r\n      {checked && <Row\r\n          justify={'center'}\r\n          style={{marginTop: '10px'}}>\r\n          <Space>{gradeButtons}</Space>\r\n      </Row>}\r\n      <Row\r\n        justify={'center'}\r\n        style={{marginTop: '10px'}}>\r\n        <Popconfirm\r\n          onConfirm={() => setReturnToPacks(true)}\r\n          title={'Вы уверены?'}\r\n          okText={'Да'}\r\n          cancelText={'Нет'}>\r\n          <Button\r\n            danger>\r\n            Вернуться к колодам\r\n          </Button>\r\n        </Popconfirm>\r\n      </Row>\r\n    </>\r\n  );\r\n};","import {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../../routes/Routes';\r\nimport React from 'react';\r\nimport styles from './Navbar.module.css';\r\nimport commonStyles from '../common/commonStyle.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\nimport {LoginStateType, logoutTC} from '../../store/login-reducer';\r\nimport {Button} from 'antd';\r\n\r\nexport function Navbar() {\r\n\r\n  const loginStatus = useSelector<AppStateType, LoginStateType>(state => state.login);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logout = () => {\r\n    dispatch(logoutTC());\r\n  };\r\n\r\n  return <nav className={styles.navbar}>\r\n    <div className={commonStyles.container}>\r\n      <ul>\r\n        <li>\r\n          <Button\r\n            type={'link'}\r\n            onClick={logout}\r\n            loading={loginStatus.loading}\r\n            disabled={loginStatus.loading}>Logout\r\n          </Button>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to={PATH.PROFILE}\r\n            activeClassName={styles.linkActive}>\r\n            Profile\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to={PATH.CARD_PACKS}\r\n            activeClassName={styles.linkActive}>\r\n            Card packs\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li>\r\n          <NavLink\r\n            to={PATH.TEST}\r\n            activeClassName={styles.linkActive}>\r\n            Test\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>;\r\n}","import React, {useEffect} from 'react';\r\nimport {Routes} from '../routes/Routes';\r\nimport {Navbar} from './navbar/Navbar';\r\nimport commonStyles from '../components/common/commonStyle.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../store/store';\r\nimport {AppInitializeTC} from '../store/app-reducer';\r\nimport {Spin} from 'antd';\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n  const isInitialized = useSelector<AppStateType, boolean>(state => state.appStatus.isInitialized);\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n\r\n  useEffect(() => {\r\n    if (!isInitialized) {\r\n      console.log('Call AppInitialize');\r\n      dispatch(AppInitializeTC());\r\n    }\r\n    return;\r\n  });\r\n\r\n  return (\r\n    isInitialized\r\n      ? <>\r\n        {isAuth && <Navbar/>}\r\n        <div className={commonStyles.container}>\r\n          <Routes/>\r\n        </div>\r\n      </>\r\n      : <div className={commonStyles.fullscreen}><Spin size={'large'}/></div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {AppActionsType} from './store';\r\nimport {APP_ACTION_TYPE} from './app-reducer';\r\n\r\ntype StateType = typeof initialState;\r\n\r\nconst initialState = {\r\n  test: 'test'\r\n};\r\n\r\nexport const testReducer = (state: StateType = initialState, action: AppActionsType) => {\r\n  switch (action.type) {\r\n    case APP_ACTION_TYPE.CLEAR_STORE: {\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};","import {APP_ACTION_TYPE} from './app-reducer';\r\n\r\ntype StateType = typeof initialState;\r\n\r\nconst initialState = {};\r\n\r\nexport const profileReducer = (state: StateType = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case APP_ACTION_TYPE.CLEAR_STORE: {\r\n            return initialState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {combineReducers, applyMiddleware} from 'redux';\r\nimport {testReducer} from './test-reducer';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {registrationReducer, RegistrationReducerActionsType} from './registration-reducer';\r\nimport {loginReducer, LoginReducerActionsType} from './login-reducer';\r\nimport {createStore} from 'redux';\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {appReducer, AppReducerActionsType} from './app-reducer';\r\nimport {passChangeReducer, PassChangeReducerActionsType} from './pass-change-reducer';\r\nimport {passRecoveryReducer, PassRecoveryReducerActionsType} from './pass-recovery-reducer';\r\nimport {cardPacksReducer, CardPacksReducerActionsType} from './card-packs-reducer';\r\nimport {cardsReducer, CardsReducerActionsType} from './cards-reducer';\r\nimport {trainingReducer, TrainingReducerActionsType} from './training-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  test: testReducer,\r\n  profile: profileReducer,\r\n  registration: registrationReducer,\r\n  login: loginReducer,\r\n  appStatus: appReducer,\r\n  passChange: passChangeReducer,\r\n  passRecovery: passRecoveryReducer,\r\n  cardPacks: cardPacksReducer,\r\n  cards: cardsReducer,\r\n  train: trainingReducer\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n// Все экшены нашего приложения, которые можно диспатчить\r\n\r\nexport type AppActionsType =\r\n  AppReducerActionsType\r\n  | LoginReducerActionsType\r\n  | PassChangeReducerActionsType\r\n  | RegistrationReducerActionsType\r\n  | PassRecoveryReducerActionsType\r\n  | CardPacksReducerActionsType\r\n  | CardsReducerActionsType\r\n  | TrainingReducerActionsType\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType,\r\n  AppStateType,\r\n  unknown,\r\n  AppActionsType>\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './store/store';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App/>\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pack\":\"CardPack_pack__2m3Wc\",\"packHeader\":\"CardPack_packHeader__1Okxb\",\"ratingCount\":\"CardPack_ratingCount__f6tWY\",\"cardsCount\":\"CardPack_cardsCount__1C66R\",\"rating\":\"CardPack_rating__1AEBW\",\"actions\":\"CardPack_actions__23XhH\",\"action\":\"CardPack_action__1laq5\",\"user\":\"CardPack_user__3S4Ph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2TFbj\",\"cardStats\":\"Card_cardStats__2SjIJ\",\"cardStatsValue\":\"Card_cardStatsValue__3HaFH\",\"cardButton\":\"Card_cardButton__2zWwO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__N0V3r\",\"formGroup\":\"Login_formGroup__2iiXm\",\"rememberMeFormGroup\":\"Login_rememberMeFormGroup__J0PFY\",\"textField\":\"Login_textField__urKPD\",\"fieldLabel\":\"Login_fieldLabel__3WD2v\",\"button\":\"Login_button__2U0Gs\",\"error\":\"Login_error__2f02u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionsBar\":\"CardPacksPage_optionsBar__2tlzk\",\"options\":\"CardPacksPage_options__1HuMz\",\"searchBar\":\"CardPacksPage_searchBar__2xTAv\",\"checkBoxBar\":\"CardPacksPage_checkBoxBar__38nnW\",\"checkBoxBarItem\":\"CardPacksPage_checkBoxBarItem__2-WqW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"commonStyle_container__3XfKk\",\"fullscreen\":\"commonStyle_fullscreen__1cir9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"LoginPage_loginPage__3gr2s\",\"h2\":\"LoginPage_h2__28tJk\",\"h4\":\"LoginPage_h4__3XQ94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__2dLMR\",\"modalContent\":\"Modal_modalContent__3q-lZ\",\"closeBtn\":\"Modal_closeBtn__Da_QC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TrainingCard_title__1Zj-f\",\"question\":\"TrainingCard_question__2aHDj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1JxPS\",\"linkActive\":\"Navbar_linkActive__2TGIt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerPage\":\"Register_registerPage__ICKdK\",\"registerContainer\":\"Register_registerContainer__tTLrm\",\"registerForm\":\"Register_registerForm__1zF3j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passChange\":\"PassChange_passChange__3AwJP\",\"passChangeContainer\":\"PassChange_passChangeContainer__24DNb\",\"passChangeForm\":\"PassChange_passChangeForm__1Gu7J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passRecovery\":\"PasswordRecovery_passRecovery__nDE1f\",\"recoveryForm\":\"PasswordRecovery_recoveryForm__2b-79\"};"],"sourceRoot":""}