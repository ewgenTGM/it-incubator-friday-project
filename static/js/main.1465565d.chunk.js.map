{"version":3,"sources":["components/Login/Login.module.css","components/navbar/Navbar.module.css","components/common/commonStyle.module.css","components/register/Register.module.css","components/pass-recovery/PasswordRecovery.module.css","components/page404/NotFound.module.css","store/app-reducer.ts","utils/api.ts","store/login-reducer.ts","routes/Routes.tsx","components/Login/Login.tsx","Pages/LoginPage.tsx","store/registration-reducer.ts","components/register/Register.tsx","Pages/RegisterPage.tsx","components/profile/Profile.tsx","Pages/ProfilePage.tsx","components/pass-recovery/PasswordRecovery.tsx","Pages/PassRecoveryPage.tsx","components/test-component/TestComponent.tsx","Pages/TestPage.tsx","components/page404/NotFound.tsx","Pages/Page404.tsx","Pages/PassChangePage.tsx","components/navbar/Navbar.tsx","components/App.tsx","store/test-reducer.ts","store/profile-reducer.ts","store/store.ts","index.tsx"],"names":["module","exports","ACTION_TYPE","instance","axios","create","baseURL","withCredentials","api","email","password","rememberMe","post","then","res","data","delete","LOGIN_ACTION_TYPE","setIsAuthAC","isAuth","type","SET_IS_AUTH","payload","setAuthDataAC","authData","SET_AUTH_DATA","initialState","isInitialized","error","PATH","setErrorAC","SET_ERROR","setLoadingAC","loading","SET_LOADING","Login","useState","setEmail","pwd","setPwd","remember","setRemember","dispatch","useDispatch","useSelector","state","appStatus","loginStatus","login","errorBlock","className","styles","form","formGroup","htmlFor","fieldLabel","value","onChange","e","currentTarget","textField","id","checked","button","onClick","event","preventDefault","a","response","message","loginTC","to","LoginPage","props","Register","setPassword","registerPage","registerContainer","registerForm","name","alert","registerTC","RegisterPage","Profile","JSON","stringify","ProfilePage","PasswordRecovery","setLoading","sendData","setTimeout","passRecovery","style","textAlign","recoveryForm","PassRecoveryPage","TestComponent","allReducerData","elements","Object","entries","map","elem","TestPage","NotFound","notFound","rotate","Page404","PassChangePage","Routes","path","exact","render","TEST","LOGIN","REGISTER","PROFILE","PASS_RECOVERY","PASS_CHANGE","Navbar","navbar","commonStyles","container","activeClassName","linkActive","PAGE404","App","useEffect","SET_IS_INITIALIZED","test","rootReducer","combineReducers","action","profile","registration","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1465565d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__3SXL1\",\"formGroup\":\"Login_formGroup__2KzGA\",\"textField\":\"Login_textField__99MwI\",\"fieldLabel\":\"Login_fieldLabel__GASe2\",\"button\":\"Login_button__20qSm\",\"error\":\"Login_error__1yMLH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1JxPS\",\"linkActive\":\"Navbar_linkActive__2TGIt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"commonStyle_container__3XfKk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerPage\":\"Register_registerPage__ICKdK\",\"registerContainer\":\"Register_registerContainer__tTLrm\",\"registerForm\":\"Register_registerForm__1zF3j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passRecovery\":\"PasswordRecovery_passRecovery__nDE1f\",\"recoveryForm\":\"PasswordRecovery_recoveryForm__2b-79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"NotFound_notFound__BKuHp\",\"rotate\":\"NotFound_rotate__2XOrI\"};","import {Dispatch} from 'redux';\r\nimport {api, LoginResponseType} from '../utils/api';\r\n\r\nenum ACTION_TYPE {\r\n  SET_IS_INITIALIZED = 'APP/SET_IS_INITIALIZED',\r\n  SET_IS_AUTH = 'APP/SET_IS_AUTH',\r\n  SET_AUTH_DATA = 'APP/SET_AUTH_DATA',\r\n  SET_ERROR = 'APP/SET_ERROR'\r\n}\r\n\r\n// Action creators\r\nexport const setIsInitializedAC = (isInitialized: boolean) => {\r\n  return {type: ACTION_TYPE.SET_IS_INITIALIZED as const, payload: {isInitialized}};\r\n};\r\n\r\nexport const setIsAuthAC = (isAuth: boolean) => {\r\n  return {\r\n    type: ACTION_TYPE.SET_IS_AUTH as const, payload: {isAuth}\r\n  };\r\n};\r\n\r\nexport const setError = (error: string | null) => {\r\n  return {type: ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\nexport const setAuthDataAC = (authData: LoginResponseType | {}) => {\r\n  return {type: ACTION_TYPE.SET_AUTH_DATA as const, payload: {authData}};\r\n};\r\n// ------------------\r\n\r\n// Thunk creators\r\nexport const AppInitializeTC = () => async (dispatch: Dispatch) => {\r\n  try {\r\n    const response = await api.me();\r\n    dispatch(setAuthDataAC(response));\r\n    dispatch(setIsAuthAC(true));\r\n  } catch (e) {\r\n    dispatch(setError(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setIsInitializedAC(true));\r\n  }\r\n};\r\n// ------------------\r\n\r\nexport type AppReducerActionsType =\r\n  ReturnType<typeof setIsInitializedAC>\r\n  | ReturnType<typeof setIsAuthAC>\r\n  | ReturnType<typeof setError>\r\n  | ReturnType<typeof setAuthDataAC>\r\n\r\ntype StateType = typeof initialState;\r\n\r\nconst initialState = {\r\n  isInitialized: false,\r\n  isAuth: false,\r\n  authData: {} as {} | LoginResponseType,\r\n  error: null as string | null\r\n};\r\n\r\nexport const appReducer = (state: StateType = initialState, action: AppReducerActionsType): StateType => {\r\n  switch (action.type) {\r\n    case ACTION_TYPE.SET_IS_INITIALIZED: {\r\n      return {...state, isInitialized: action.payload.isInitialized};\r\n    }\r\n    case ACTION_TYPE.SET_IS_AUTH: {\r\n      return {...state, isAuth: action.payload.isAuth};\r\n    }\r\n    case ACTION_TYPE.SET_AUTH_DATA: {\r\n      return {...state, authData: action.payload.authData};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};","import axios from 'axios';\r\n\r\nconst LOCAL_URL = 'http://localhost:7542/2.0/';\r\nconst REMOTE_URL = 'https://neko-back.herokuapp.com/2.0';\r\nconst FROM = 'test-front-admin<test@test.com>';\r\n\r\nconst instance = axios.create({baseURL: REMOTE_URL, withCredentials: true});\r\n\r\nexport const api = {\r\n\r\n  passRecovery(email: string) {\r\n    const htmlBody = `<div style=\"background-color: lime; padding: 15px\">\r\n                       password recovery link: \r\n              <a href=\"http://localhost:3000/#/set-new-password/$token$\">\r\n              link\r\n              </a></div>`;\r\n    const reqBody = {\r\n      email,\r\n      from: FROM,\r\n      message: htmlBody\r\n    };\r\n    return instance.post<InfoResponseType>('/auth/forgot', reqBody).then(res => res.data);\r\n  },\r\n\r\n  login(email: string, password: string, rememberMe: boolean = false) {\r\n    return instance.post<LoginResponseType>('/auth/login', {email, password, rememberMe}).then(res => res.data);\r\n  },\r\n\r\n  logout() {\r\n    return instance.delete<InfoResponseType>('/auth/me', {}).then(res => res.data);\r\n  },\r\n\r\n  me() {\r\n    return instance.post<LoginResponseType>('/auth/me', {}).then(res => res.data);\r\n  },\r\n\r\n  register(email: string, password: string) {\r\n    return instance.post<RegisterResponseType>('/auth/register', {email, password}).then(res => res.data);\r\n  }\r\n\r\n};\r\n\r\nexport type LoginResponseType = {\r\n  _id: string;\r\n  email: string;\r\n  name: string;\r\n  avatar?: string;\r\n  publicCardPacksCount: number; // количество колод\r\n  created: Date;\r\n  updated: Date;\r\n  isAdmin: boolean;\r\n  verified: boolean; // подтвердил ли почту\r\n  rememberMe: boolean;\r\n  error?: string;\r\n}\r\n\r\ntype InfoResponseType = {\r\n  info: string\r\n  error?: string\r\n}\r\n\r\ntype RegisterResponseType = {\r\n  addedUser: any\r\n  error?: string\r\n}","import {Dispatch} from 'redux';\r\nimport {api} from '../utils/api';\r\nimport {setAuthDataAC, setIsAuthAC} from './app-reducer';\r\n\r\nenum LOGIN_ACTION_TYPE {\r\n  SET_ERROR = 'LOGIN/SET_ERROR',\r\n  SET_LOADING = 'APP/SET_LOADING'\r\n}\r\n\r\n// Action creators\r\n\r\nconst setErrorAC = (error: null | string) => {\r\n  return {type: LOGIN_ACTION_TYPE.SET_ERROR as const, payload: {error}};\r\n};\r\n\r\nconst setLoadingAC = (loading: boolean) => {\r\n  return {type: LOGIN_ACTION_TYPE.SET_LOADING as const, payload: {loading}};\r\n};\r\n\r\n//----------------\r\n\r\n// Thunk creators\r\n\r\nexport const loginTC = (email: string, password: string, remember: boolean) => async (dispatch: Dispatch<any>) => {\r\n  dispatch(setErrorAC(null));\r\n  dispatch(setLoadingAC(true));\r\n  try {\r\n    const res = await api.login(email, password, remember);\r\n    dispatch(setAuthDataAC(res));\r\n    dispatch(setIsAuthAC(true));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport const logoutTC = () => async (dispatch: Dispatch<any>) => {\r\n  dispatch(setLoadingAC(true));\r\n  dispatch(setErrorAC(null));\r\n  try {\r\n    await api.logout();\r\n    dispatch(setAuthDataAC({}));\r\n    dispatch(setIsAuthAC(false));\r\n  } catch (e) {\r\n    dispatch(setErrorAC(e.response ? e.response.data.error : e.message));\r\n  } finally {\r\n    dispatch(setLoadingAC(false));\r\n  }\r\n};\r\n\r\nexport type LoginReducerActionsType = ReturnType<typeof setErrorAC> | ReturnType<typeof setLoadingAC>;\r\n\r\nexport type LoginStateType = typeof initialState;\r\n\r\nconst initialState = {\r\n  error: null as null | string,\r\n  loading: false\r\n};\r\n\r\n//---------------\r\n\r\nexport const loginReducer = (state: LoginStateType = initialState, action: LoginReducerActionsType): LoginStateType => {\r\n  switch (action.type) {\r\n    case LOGIN_ACTION_TYPE.SET_ERROR: {\r\n      return {\r\n        ...state, error: action.payload.error\r\n      };\r\n    }\r\n    case LOGIN_ACTION_TYPE.SET_LOADING: {\r\n      return {\r\n        ...state, loading: action.payload.loading\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {LoginPage} from '../Pages/LoginPage';\r\nimport {RegisterPage} from '../Pages/RegisterPage';\r\nimport {ProfilePage} from '../Pages/ProfilePage';\r\nimport {PassRecoveryPage} from '../Pages/PassRecoveryPage';\r\nimport {TestPage} from '../Pages/TestPage';\r\nimport {Page404} from '../Pages/Page404';\r\nimport {PassChangePage} from '../Pages/PassChangePage';\r\n\r\nexport enum PATH {\r\n  LOGIN = '/login',\r\n  REGISTER = '/register',\r\n  PROFILE = '/profile',\r\n  PAGE404 = '/404',\r\n  PASS_RECOVERY = '/password-recovery',\r\n  TEST = '/test',\r\n  PASS_CHANGE = '/password-change'\r\n}\r\n\r\nexport const Routes: React.VFC = () => {\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route\r\n          path={'/'}\r\n          exact\r\n          render={() => <Redirect to={PATH.TEST}/>}\r\n        />\r\n        <Route\r\n          path={PATH.LOGIN}\r\n          render={() => <LoginPage/>}/>\r\n        <Route\r\n          path={PATH.REGISTER}\r\n          render={() => <RegisterPage/>}/>\r\n        <Route\r\n          path={PATH.PROFILE}\r\n          render={() => <ProfilePage/>}/>\r\n        <Route\r\n          path={PATH.PASS_RECOVERY}\r\n          render={() => <PassRecoveryPage/>}/>\r\n        <Route\r\n          path={PATH.PASS_CHANGE}\r\n          render={() => <PassChangePage/>}/>\r\n        <Route\r\n          path={PATH.TEST}\r\n          render={() => <TestPage/>}/>\r\n        <Route render={() => <Page404/>}/>\r\n      </Switch>\r\n    </>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport styles from './Login.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {LoginStateType, loginTC} from '../../store/login-reducer';\r\nimport {AppStateType} from '../../store/store';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport const Login: React.VFC = () => {\r\n  const [email, setEmail] = useState<string>('');\r\n  const [pwd, setPwd] = useState<string>('');\r\n  const [remember, setRemember] = useState<boolean>(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n  const loginStatus = useSelector<AppStateType, LoginStateType>(state => state.login);\r\n\r\n  const loginCallback = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n    dispatch(loginTC(email, pwd, remember));\r\n    setEmail('');\r\n    setPwd('');\r\n    setRemember(false);\r\n  };\r\n\r\n  const errorBlock: JSX.Element = <div className={styles.error}>{loginStatus.error}</div>;\r\n\r\n  const form: JSX.Element = <div>\r\n    Логинизация\r\n    <form className={styles.form}>\r\n      <div className={styles.formGroup}>\r\n        <label\r\n          htmlFor=\"email\"\r\n          className={styles.fieldLabel}>Введите email</label>\r\n        <input\r\n          value={email}\r\n          onChange={e => setEmail(e.currentTarget.value)}\r\n          className={styles.textField}\r\n          id={'email'}\r\n          type=\"email\"/>\r\n      </div>\r\n      <div className={styles.formGroup}>\r\n        <label\r\n          htmlFor=\"password\"\r\n          className={styles.fieldLabel}>Введите пароль</label>\r\n        <input\r\n          value={pwd}\r\n          onChange={e => setPwd(e.currentTarget.value)}\r\n          className={styles.textField}\r\n          id={'password'}\r\n          type=\"password\"/>\r\n      </div>\r\n      <div className={styles.formGroup}>\r\n        <label\r\n          htmlFor=\"rememberMe\"\r\n          className={styles.fieldLabel}>Запомнить меня</label>\r\n        <input\r\n          checked={remember}\r\n          onChange={e => setRemember(e.currentTarget.checked)}\r\n          id={'rememberMe'}\r\n          type=\"checkbox\"/>\r\n      </div>\r\n      <div className={styles.button}>\r\n        <button onClick={loginCallback}>Войти</button>\r\n      </div>\r\n    </form>\r\n  </div>;\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={'/profile'}/>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loginStatus.loading\r\n        ? <span>Ждите отстоя пива...</span>\r\n        : form\r\n      }\r\n      {loginStatus.error && errorBlock}\r\n    </>\r\n  );\r\n}\r\n;","import React from 'react';\r\nimport {Login} from '../components/Login/Login';\r\n\r\ntype PropsType = {};\r\n\r\nexport const LoginPage: React.FC<PropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Login Page</h2>\r\n      <Login/>\r\n    </div>\r\n  );\r\n};","import {Dispatch} from \"react\";\r\nimport {api} from \"../utils/api\";\r\n\r\ntype StateType = typeof initialState;\r\n\r\nconst initialState = {};\r\n\r\nexport const registrationReducer = (state: StateType = initialState, action: any) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const registerTC = (email: string, password: string) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        const register = await api.register(email, password)\r\n        alert('Регистрация прошла успешно!')\r\n    }\r\n    catch (e) {\r\n        alert(e.response.data.error)\r\n    }\r\n\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport styles from \"./Register.module.css\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {registerTC} from \"../../store/registration-reducer\";\r\n\r\nexport const Register:React.VFC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = () => {\r\n       dispatch(registerTC(email, password))\r\n    }\r\n    return (\r\n        <div className={styles.registerPage}>\r\n            <div className={styles.registerContainer}>\r\n                <div className={styles.registerForm}>\r\n                    <input value={email} type=\"email\" name=\"email\" onChange={changeEmail}/>\r\n                    <input value={password} type=\"password\" onChange={changePassword}/>\r\n                    <button onClick={onSubmit}>Register</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {Register} from \"../components/register/Register\";\r\n\r\n\r\ntype PropsType = {};\r\n\r\nexport const RegisterPage: React.FC<PropsType> = props => {\r\n    return (\r\n        <div>\r\n            <h2>Register Page</h2>\r\n            <Register/>\r\n        </div>\r\n    );\r\n};","import React, {useEffect} from 'react';\r\nimport styles from './Profile.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\nimport {LoginResponseType} from '../../utils/api';\r\n\r\ntype PropsType = {};\r\n\r\nexport const Profile: React.FC<PropsType> = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const authData = useSelector<AppStateType, LoginResponseType | {}>(state => state.appStatus.authData);\r\n\r\n  return (\r\n    <div>\r\n      <pre>{JSON.stringify(authData, null, 2)}</pre>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {Profile} from '../components/profile/Profile';\r\n\r\ntype PropsType = {};\r\n\r\nexport const ProfilePage: React.FC<PropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Profile Page</h2>\r\n      <Profile/>\r\n    </div>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport styles from './PasswordRecovery.module.css';\r\nimport {api} from '../../utils/api';\r\n\r\ntype PropsType = {};\r\n\r\nexport const PasswordRecovery: React.FC<PropsType> = props => {\r\n\r\n  const [email, setEmail] = useState<string>('');\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const sendData = async () => {\r\n    setLoading(true);\r\n    // Пока просто заглушка\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 2000);\r\n    // await api.passRecovery(email);\r\n    // setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.passRecovery}>\r\n      <h3>Форма восстановление пароля</h3>\r\n      {!loading\r\n        ? <div className={styles.recoveryForm}>\r\n          <label htmlFor=\"email\">Введите ваш email:</label>\r\n          <input\r\n            type=\"email\"\r\n            name={'email'}\r\n            value={email}\r\n            onChange={e => setEmail(e.currentTarget.value)}/>\r\n          <button onClick={sendData}>Отправить</button>\r\n        </div>\r\n        : <span style={{textAlign: 'center'}}>Отправка....</span>}\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {PasswordRecovery} from '../components/pass-recovery/PasswordRecovery';\r\n\r\ntype PropsType = {};\r\n\r\nexport const PassRecoveryPage: React.FC<PropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Password Recovery Page</h2>\r\n      <PasswordRecovery/>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport styles from './TestComponent.module.css';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\n\r\nexport const TestComponent: React.VFC = () => {\r\n\r\n  const allReducerData = useSelector<AppStateType, AppStateType>(state => state);\r\n  const elements = Object.entries(allReducerData).map(elem => {\r\n    return <div key={elem[0]}>\r\n      <h5>{elem[0]}:</h5>\r\n      <pre>{JSON.stringify(elem[1], null, 2)}</pre>\r\n    </div>;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h3>All reducer data</h3>\r\n      {elements}\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {TestComponent} from '../components/test-component/TestComponent';\r\nimport {AppStateType} from '../store/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\n\r\ntype PropsType = {};\r\n\r\nexport const TestPage: React.FC<PropsType> = props => {\r\n\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={'/login'}/>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Test Page</h2>\r\n      <TestComponent/>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport styles from './NotFound.module.css';\r\nimport img404 from './404.png';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype PropsType = {};\r\n\r\nexport const NotFound: React.FC<PropsType> = props => {\r\n\r\n  return (\r\n    <div className={styles.notFound}>\r\n      <div className={styles.rotate}>\r\n        <span>404</span>\r\n      </div>\r\n      <NavLink to={'/test'}>\r\n        На главную\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {NotFound} from '../components/page404/NotFound';\r\n\r\ntype PropsType = {};\r\n\r\nexport const Page404: React.FC<PropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Page 404</h2>\r\n      <NotFound/>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\n\r\ntype PropsType = {};\r\n\r\nexport const PassChangePage: React.FC<PropsType> = props => {\r\n    return (\r\n        <div>\r\n            <h2>Password Change Page</h2>\r\n        </div>\r\n    );\r\n};","import {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../../routes/Routes';\r\nimport React from 'react';\r\nimport styles from './Navbar.module.css';\r\nimport commonStyles from '../common/commonStyle.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../store/store';\r\nimport {api} from '../../utils/api';\r\nimport {LoginStateType, logoutTC} from '../../store/login-reducer';\r\n\r\nexport function Navbar() {\r\n\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.appStatus.isAuth);\r\n  const loginStatus = useSelector<AppStateType, LoginStateType>(state => state.login);\r\n  const dispatch = useDispatch();\r\n\r\n  const logout = () => {\r\n    dispatch(logoutTC());\r\n  };\r\n\r\n  return <nav className={styles.navbar}>\r\n    <div className={commonStyles.container}>\r\n      <ul>\r\n        <li>\r\n          {!isAuth\r\n            ? <NavLink\r\n              to={PATH.LOGIN}\r\n              activeClassName={styles.linkActive}>\r\n              Login\r\n            </NavLink>\r\n            : <button onClick={logout}>Logout</button>\r\n          }\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to={PATH.REGISTER}\r\n            activeClassName={styles.linkActive}>\r\n            Register\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to={PATH.PROFILE}\r\n            activeClassName={styles.linkActive}>\r\n            Profile\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to={PATH.PASS_RECOVERY}\r\n            activeClassName={styles.linkActive}>\r\n            Pass recovery\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to={PATH.PASS_CHANGE}\r\n            activeClassName={styles.linkActive}>\r\n            Pass change\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to={PATH.TEST}\r\n            activeClassName={styles.linkActive}>\r\n            Test\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to={PATH.PAGE404}\r\n            activeClassName={styles.linkActive}>\r\n            404\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>;\r\n}","import React, {useEffect} from 'react';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Routes} from '../routes/Routes';\r\nimport {Navbar} from './navbar/Navbar';\r\nimport commonStyles from '../components/common/commonStyle.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../store/store';\r\nimport {AppInitializeTC} from '../store/app-reducer';\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n  const isInitialized = useSelector<AppStateType, boolean>(state => state.appStatus.isInitialized);\r\n\r\n  useEffect(() => {\r\n    dispatch(AppInitializeTC());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {isInitialized\r\n        ? <HashRouter>\r\n          <Navbar/>\r\n          <div className={commonStyles.container}>\r\n            <h1 style={{textAlign: 'center'}}>This is mega super friday project</h1>\r\n            <Routes/>\r\n          </div>\r\n        </HashRouter>\r\n        : <span>Ждите отстоя пива...</span>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","type StateType = typeof initialState;\r\n\r\nconst initialState = {\r\n    test: 'test'\r\n};\r\n\r\nexport const testReducer = (state: StateType = initialState, action: any) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","type StateType = typeof initialState;\r\n\r\nconst initialState = {};\r\n\r\nexport const profileReducer = (state: StateType = initialState, action: any) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","import {combineReducers, applyMiddleware} from 'redux';\r\nimport {testReducer} from './test-reducer';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {registrationReducer} from './registration-reducer';\r\nimport {loginReducer} from './login-reducer';\r\nimport {createStore} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {appReducer} from './app-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  test: testReducer,\r\n  profile: profileReducer,\r\n  registration: registrationReducer,\r\n  login: loginReducer,\r\n  appStatus: appReducer\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './store/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}